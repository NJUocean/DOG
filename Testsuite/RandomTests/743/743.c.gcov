        -:    0:Source:743.c
        -:    0:Graph:743.gcno
        -:    0:Data:743.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  volatile unsigned f0 : 12;
        -:   10:  unsigned f1 : 17;
        -:   11:};
        -:   12:#pragma pack(pop)
        -:   13:
        -:   14:union U1 {
        -:   15:  volatile int32_t f0;
        -:   16:  int16_t f1;
        -:   17:  uint32_t f2;
        -:   18:  int16_t f3;
        -:   19:};
        -:   20:
        -:   21:union U2 {
        -:   22:  volatile int32_t f0;
        -:   23:  const uint32_t f1;
        -:   24:};
        -:   25:
        -:   26:union U3 {
        -:   27:  int32_t f0;
        -:   28:  uint16_t f1;
        -:   29:};
        -:   30:
        -:   31:static volatile int8_t g_2 = 1L;
        -:   32:static uint64_t g_5 = 0x3D42374B1B055CC2LL;
        -:   33:static int32_t g_12 = 0x70A3267EL;
        -:   34:static const int32_t g_18 = 0L;
        -:   35:static uint32_t g_33 = 0xCAA5D732L;
        -:   36:static int32_t *g_41 = &g_12;
        -:   37:static int32_t **g_40 = &g_41;
        -:   38:static uint8_t g_50[2] = {0xB6L, 0xB6L};
        -:   39:static int32_t g_54 = 7L;
        -:   40:static int32_t g_55 = 0xD47EBDCFL;
        -:   41:static volatile int8_t *g_61 = (void *)0;
        -:   42:static volatile int8_t *volatile *const g_60 = &g_61;
        -:   43:static union U3 g_69 = {0L};
        -:   44:static union U1 g_86 = {0x3A9A7891L};
        -:   45:static uint32_t g_107 = 0x5A6083B6L;
        -:   46:static volatile struct S0 g_108 = {4, 102};
        -:   47:static int8_t g_119 = 0L;
        -:   48:static volatile uint8_t g_127[4][2] = {{0x39L, 0x39L}, {0x39L, 0x39L}, {0x39L, 0x39L}, {0x39L, 0x39L}};
        -:   49:static volatile uint8_t *g_126 = &g_127[0][0];
        -:   50:static volatile uint8_t **g_125 = &g_126;
        -:   51:static uint32_t g_131[4] = {0x6291C459L, 0x6291C459L, 0x6291C459L, 0x6291C459L};
        -:   52:static int64_t g_139 = 0L;
        -:   53:static uint8_t g_162 = 0x96L;
        -:   54:static int64_t g_164[3][3][1] = {{{(-1L)}, {0L}, {(-1L)}}, {{0L}, {(-1L)}, {0L}}, {{(-1L)}, {0L}, {(-1L)}}};
        -:   55:static volatile union U2 g_183 = {5L};
        -:   56:static int32_t g_193 = 0xC8EEA47AL;
        -:   57:
        -:   58:static int8_t func_1(void);
        -:   59:static uint16_t func_3(uint64_t p_4);
        -:   60:
        1:   61:static int8_t func_1(void) {
        1:   62:  int32_t **l_71 = (void *)0;
        1:   63:  uint8_t *l_75[4] = {(void *)0, (void *)0, (void *)0, (void *)0};
        1:   64:  int32_t l_91[4] = {0x60C006E7L, 0x60C006E7L, 0x60C006E7L, 0x60C006E7L};
        1:   65:  int8_t *l_118 = &g_119;
        1:   66:  uint32_t *l_176 = &g_107;
        1:   67:  union U3 l_179 = {-7L};
        1:   68:  union U3 *l_180 = &l_179;
        1:   69:  uint64_t *l_190 = &g_5;
        -:   70:  int i;
        1:   71:  if ((g_2 == func_3(g_5))) {
    #####:   72:    int32_t l_59 = (-1L);
    #####:   73:    for (g_12 = (-17); (g_12 != (-21)); --g_12) {
    #####:   74:      return l_59;
        -:   75:    }
        -:   76:  } else {
        1:   77:    uint64_t l_74 = 0x708C9934B93DB2A2LL;
        1:   78:    int8_t *l_79 = (void *)0;
        1:   79:    int8_t **l_78 = &l_79;
        1:   80:    int32_t *l_120 = &g_12;
        1:   81:    int16_t l_130 = (-1L);
        1:   82:    uint32_t l_144 = 0UL;
        1:   83:    int64_t *l_163 = &g_164[1][0][0];
        -:   84:    if ((0x2AC6L == (18446744073709551610UL <= g_54))) {
        -:   85:      volatile int8_t *volatile *l_63 = &g_61;
        -:   86:      volatile int8_t *volatile **l_62[5][1];
        -:   87:      volatile int8_t *volatile **l_64 = (void *)0;
        -:   88:      volatile int8_t *volatile **l_65 = &l_63;
        -:   89:      uint8_t *l_67[5];
        -:   90:      uint8_t **l_66 = &l_67[3];
        -:   91:      int32_t l_68 = (-4L);
        -:   92:      int32_t **l_70 = &g_41;
        -:   93:      int32_t ***l_72[3][1];
        -:   94:      int8_t *l_73 = (void *)0;
        -:   95:      int8_t **l_96 = &l_79;
        -:   96:      int i, j;
        -:   97:      for (i = 0; i < 5; i++) {
        -:   98:        for (j = 0; j < 1; j++)
        -:   99:          l_62[i][j] = &l_63;
        -:  100:      }
        -:  101:      for (i = 0; i < 5; i++)
        -:  102:        l_67[i] = &g_50[1];
        -:  103:      for (i = 0; i < 3; i++) {
        -:  104:        for (j = 0; j < 1; j++)
        -:  105:          l_72[i][j] = (void *)0;
        -:  106:      }
        -:  107:      (*l_65) = g_60;
        -:  108:      if ((((*l_66) = (void *)0) != ((l_74 = (l_68 && ((((g_69, l_70) == (l_71 = l_71)), (void *)0) != &g_61))), l_75[3]))) {
        -:  109:        uint32_t l_90[3][3][1] = {{{18446744073709551615UL}, {9UL}, {18446744073709551615UL}}, {{9UL}, {18446744073709551615UL}, {9UL}}, {{18446744073709551615UL}, {9UL}, {18446744073709551615UL}}};
        -:  110:        int i, j, k;
        -:  111:        l_91[0] = (((((-1L) >= ((safe_lshift_func_int32_t_s_s(((void *)0 != l_78), (safe_sub_func_uint32_t_u_u((safe_add_func_int8_t_s_s(((safe_mul_func_int32_t_s_s(l_74, (g_86, ((*g_41) &= (!(0x66F2FC99F15FC87CLL && g_18)))))), (safe_lshift_func_uint32_t_u_u(l_74, 14))), (l_90[1][1][0] || 0xD74ECB9AL))), 0UL)))) < l_90[1][1][0])) > g_54) & l_90[1][1][0]) == g_33);
        -:  112:        (**g_40) &= (((void *)0 != l_75[0]) ^ (safe_lshift_func_uint8_t_u_u(((safe_sub_func_int32_t_s_s((l_96 != (void *)0), ((safe_div_func_int64_t_s_s(0x19870F1E569BB213LL, g_54)) || (safe_rshift_func_uint16_t_u_u(g_54, 2))))) > (safe_mul_func_int8_t_s_s(((((safe_div_func_uint32_t_u_u(((safe_div_func_uint64_t_u_u(8UL, l_90[1][1][0])) == l_90[1][1][0]), 5L)) < 0xAD3C07AF8E1F03B4LL) > g_86.f0), g_107), l_90[1][1][0]))), g_50[1])));
        -:  113:      } else {
        -:  114:        int64_t l_123 = (-1L);
        -:  115:        uint8_t l_124 = 0xAFL;
        -:  116:        int32_t l_128[1];
        -:  117:        int16_t *l_129 = &g_86.f3;
        -:  118:        int i;
        -:  119:        for (i = 0; i < 1; i++)
        -:  120:          l_128[i] = 0xD2F47574L;
        -:  121:        g_131[3] &= (((g_108, g_86), 3UL) && ((safe_sub_func_int64_t_s_s(g_108.f1, (((*l_129) = (safe_add_func_uint16_t_u_u((safe_rshift_func_uint16_t_u_u((safe_mod_func_int8_t_s_s((((*l_120) = (((+((*l_118) = (l_118 != ((*l_78) = ((((((((((void *)0 == l_120) <= (((((safe_add_func_int16_t_s_s(0xFC62L, ((((l_123, 0x9A7EFCC6L), g_5) <= g_5), 5UL))), g_69.f0) || 4294967293UL) > l_91[0]) || l_124)) > g_69.f0) & 0xDC89BD50C841BEEALL) || g_50[0]) <= g_54), g_125) == (void *)0), l_118))))) || 65527UL) ^ (*l_120))), l_128[0]), g_69.f0)), l_128[0])), g_54))) ^ l_91[0]))) == l_130));
        -:  122:      }
        -:  123:    } else {
        1:  124:      int32_t l_145 = 0xADB94C90L;
        1:  125:      union U3 l_156 = {0x93B66AF9L};
        -:  126:      int16_t l_160[3];
        -:  127:      uint8_t *l_161[3];
        -:  128:      int64_t *l_166[3];
        -:  129:      int i;
        4:  130:      for (i = 0; i < 3; i++)
        3:  131:        l_160[i] = 0x2E69L;
        4:  132:      for (i = 0; i < 3; i++)
        3:  133:        l_161[i] = &g_162;
        4:  134:      for (i = 0; i < 3; i++)
        3:  135:        l_166[i] = (void *)0;
        3:  136:      for (g_5 = 0; (g_5 != 18); g_5 = safe_add_func_uint8_t_u_u(g_5, 9)) {
        2:  137:        int32_t *l_134 = &g_54;
        2:  138:        (*g_40) = (*g_40);
        2:  139:        (*l_134) ^= (**g_40);
        -:  140:      }
        5:  141:      for (g_54 = 3; (g_54 >= 0); g_54 -= 1) {
        4:  142:        int64_t *l_138 = &g_139;
        4:  143:        int64_t **l_165 = &l_163;
        -:  144:        int i;
        4:  145:        l_91[g_54] = (*g_41);
       4*:  146:        (*g_41) = ((!((safe_mul_func_int64_t_s_s(((*l_138) = (-1L)), (safe_add_func_uint16_t_u_u(((safe_rshift_func_int64_t_s_s((0x8EL && (g_50[1] = (l_144 = l_91[0]))), (g_69, ((l_145 = (*l_120)), (safe_mod_func_uint64_t_u_u(((((*l_165) = ((((((((*l_118) = (safe_rshift_func_int16_t_s_s(((safe_sub_func_uint32_t_u_u((((((((safe_rshift_func_uint8_t_u_s((safe_add_func_uint32_t_u_u((l_156, (safe_lshift_func_int8_t_s_s(l_91[g_54], (+((void *)0 != &g_126))))), l_91[g_54])), 6)) < l_91[g_54]) && l_160[0]) && (*l_120)) < 0x47L) <= g_55) < (*l_120)), (*l_120))) ^ 1L), g_5))) ^ (-3L)) ^ 0x3CL), (void *)0) != l_161[2]) >= 250UL), l_163)) == l_166[1]) < (*l_120)), 18446744073709551615UL)))))) < (*l_120)), 4L)))) ^ (*l_120))) && l_156.f0);
        -:  147:      }
        -:  148:    }
        1:  149:    (*g_40) = (*g_40);
        -:  150:  }
       1*:  151:  g_193 ^= (l_91[0] = ((g_69, (safe_unary_minus_func_int32_t_s(((safe_add_func_int64_t_s_s(((void *)0 == &l_75[3]), ((safe_add_func_uint16_t_u_u((((*g_41) = (~(0UL == (((g_12 || (!(((safe_div_func_uint32_t_u_u((--(*l_176)), ((((*l_180) = l_179), g_69), (safe_mul_func_int32_t_s_s((g_183, (safe_mul_func_int32_t_s_s((safe_mul_func_int64_t_s_s((safe_sub_func_uint16_t_u_u(((((--(*l_190)) <= ((((-8L) == l_91[0]), g_131[3]) && 0x88DF4805D29A3635LL)) ^ g_131[3]) || 0x6AL), g_50[1])), l_91[0])), (-1L)))), g_54))))) < g_69.f0) > 0xE6L))), g_12) && g_127[3][0])))) ^ l_91[0]), 0xE77FL)) == 0x6EA00FD19F2AA79DLL))), l_179.f0)))) || g_131[1]));
        1:  152:  return l_91[0];
        -:  153:}
        -:  154:
        1:  155:static uint16_t func_3(uint64_t p_4) {
        1:  156:  uint32_t l_6 = 8UL;
        1:  157:  int32_t *l_42 = &g_12;
        1:  158:lbl_56:
        1:  159:  ++l_6;
        5:  160:  for (p_4 = (-27); (p_4 != 9); p_4 = safe_add_func_int32_t_s_s(p_4, 9)) {
        -:  161:    int32_t *l_11[1];
        4:  162:    int32_t **l_13 = &l_11[0];
        4:  163:    int32_t l_32 = 0x1D7FEAE2L;
        -:  164:    int i;
        8:  165:    for (i = 0; i < 1; i++)
        4:  166:      l_11[i] = &g_12;
        4:  167:    (*l_13) = l_11[0];
       4*:  168:    for (g_12 = 0; (g_12 <= (-11)); --g_12) {
    #####:  169:      const int32_t *l_17 = &g_18;
    #####:  170:      const int32_t **l_16 = &l_17;
    #####:  171:      if ((((*l_16) = (void *)0) != (void *)0)) {
    #####:  172:        return p_4;
        -:  173:      } else {
    #####:  174:        uint8_t *l_49[3][3][1] = {{{&g_50[1]}, {&g_50[1]}, {(void *)0}}, {{&g_50[1]}, {&g_50[1]}, {(void *)0}}, {{(void *)0}, {(void *)0}, {&g_50[1]}}};
    #####:  175:        int32_t l_51[5][1] = {{0x34BD47CDL}, {0x215F8F50L}, {0x34BD47CDL}, {0x215F8F50L}, {0x34BD47CDL}};
    #####:  176:        int32_t l_52 = 0x5B7518DBL;
        -:  177:        int8_t *l_53[3];
        -:  178:        int i, j, k;
    #####:  179:        for (i = 0; i < 3; i++)
    #####:  180:          l_53[i] = (void *)0;
    #####:  181:        g_55 = (safe_lshift_func_int8_t_s_u((g_54 |= (safe_div_func_int16_t_s_s(((((l_52 = ((g_5 <= (safe_add_func_int8_t_s_s(0x25L, (safe_lshift_func_int8_t_s_s((safe_sub_func_int16_t_s_s((safe_lshift_func_int64_t_s_u((+(g_33 = l_32)), 61)), ((l_51[4][0] = (safe_add_func_int64_t_s_s(((safe_rshift_func_uint16_t_u_s(((void *)0 != g_40), 12)) >= (l_42 != (void *)0)), (safe_mul_func_int64_t_s_s((((safe_lshift_func_int16_t_s_u((safe_rshift_func_int16_t_s_s(((g_18 || p_4) == 255UL), 1)), p_4)) <= 0UL), 9L), 0x594484F75DF1563CLL))))) ^ g_50[1]))), p_4))))) ^ 0xDF2FFA36FE54384FLL)) & (*l_42)) && 0x6899DB22L), p_4), p_4))), 4));
    #####:  182:        if (g_12)
    #####:  183:          goto lbl_56;
        -:  184:      }
        -:  185:    }
        -:  186:  }
        1:  187:  return p_4;
        -:  188:}
        -:  189:
        1:  190:int main(int argc, char *argv[]) {
        -:  191:  int i, j, k;
        1:  192:  int print_hash_value = 0;
       1*:  193:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  194:    print_hash_value = 1;
        1:  195:  platform_main_begin();
        1:  196:  crc32_gentab();
        1:  197:  func_1();
        1:  198:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  199:  transparent_crc(g_5, "g_5", print_hash_value);
        1:  200:  transparent_crc(g_12, "g_12", print_hash_value);
        1:  201:  transparent_crc(g_18, "g_18", print_hash_value);
        1:  202:  transparent_crc(g_33, "g_33", print_hash_value);
        3:  203:  for (i = 0; i < 2; i++) {
        2:  204:    transparent_crc(g_50[i], "g_50[i]", print_hash_value);
        2:  205:    if (print_hash_value)
    #####:  206:      printf("index = [%d]\n", i);
        -:  207:  }
        1:  208:  transparent_crc(g_54, "g_54", print_hash_value);
        1:  209:  transparent_crc(g_55, "g_55", print_hash_value);
        1:  210:  transparent_crc(g_69.f0, "g_69.f0", print_hash_value);
        1:  211:  transparent_crc(g_107, "g_107", print_hash_value);
        1:  212:  transparent_crc(g_108.f0, "g_108.f0", print_hash_value);
        1:  213:  transparent_crc(g_108.f1, "g_108.f1", print_hash_value);
        1:  214:  transparent_crc(g_119, "g_119", print_hash_value);
        5:  215:  for (i = 0; i < 4; i++) {
       12:  216:    for (j = 0; j < 2; j++) {
        8:  217:      transparent_crc(g_127[i][j], "g_127[i][j]", print_hash_value);
        8:  218:      if (print_hash_value)
    #####:  219:        printf("index = [%d][%d]\n", i, j);
        -:  220:    }
        -:  221:  }
        5:  222:  for (i = 0; i < 4; i++) {
        4:  223:    transparent_crc(g_131[i], "g_131[i]", print_hash_value);
        4:  224:    if (print_hash_value)
    #####:  225:      printf("index = [%d]\n", i);
        -:  226:  }
        1:  227:  transparent_crc(g_139, "g_139", print_hash_value);
        1:  228:  transparent_crc(g_162, "g_162", print_hash_value);
        4:  229:  for (i = 0; i < 3; i++) {
       12:  230:    for (j = 0; j < 3; j++) {
       18:  231:      for (k = 0; k < 1; k++) {
        9:  232:        transparent_crc(g_164[i][j][k], "g_164[i][j][k]", print_hash_value);
        9:  233:        if (print_hash_value)
    #####:  234:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  235:      }
        -:  236:    }
        -:  237:  }
        1:  238:  transparent_crc(g_183.f0, "g_183.f0", print_hash_value);
        1:  239:  transparent_crc(g_193, "g_193", print_hash_value);
        1:  240:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  241:  return 0;
        -:  242:}

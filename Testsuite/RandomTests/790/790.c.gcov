        -:    0:Source:790.c
        -:    0:Graph:790.gcno
        -:    0:Data:790.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U0 {
        -:    7:  int8_t f0;
        -:    8:};
        -:    9:
        -:   10:union U1 {
        -:   11:  volatile uint32_t f0;
        -:   12:  volatile int32_t f1;
        -:   13:};
        -:   14:
        -:   15:union U2 {
        -:   16:  signed f0 : 18;
        -:   17:};
        -:   18:
        -:   19:static int32_t g_2 = 0x102D149FL;
        -:   20:static uint8_t g_14 = 0x92L;
        -:   21:static union U1 g_29 = {0UL};
        -:   22:static uint8_t g_35 = 1UL;
        -:   23:static uint8_t *g_34 = &g_35;
        -:   24:static uint32_t g_38 = 6UL;
        -:   25:static int32_t g_40 = (-1L);
        -:   26:static uint32_t g_42 = 18446744073709551615UL;
        -:   27:static union U2 *const volatile g_44 = (void *)0;
        -:   28:static union U2 g_47[4][3][3] = {{{{-1L}, {0x16CF0574L}, {-1L}}, {{2L}, {0xC7E9A03AL}, {2L}}, {{-1L}, {0x16CF0574L}, {-1L}}}, {{{2L}, {0xC7E9A03AL}, {2L}}, {{-1L}, {0x16CF0574L}, {-1L}}, {{2L}, {0xC7E9A03AL}, {2L}}}, {{{-1L}, {0x16CF0574L}, {-1L}}, {{2L}, {0xC7E9A03AL}, {2L}}, {{-1L}, {0x16CF0574L}, {-1L}}}, {{{2L}, {0xC7E9A03AL}, {2L}}, {{-1L}, {0x16CF0574L}, {-1L}}, {{2L}, {0xC7E9A03AL}, {2L}}}};
        -:   29:static uint16_t g_56[3][3][5] = {{{0x9A43L, 8UL, 1UL, 0x5971L, 0xF020L}, {9UL, 1UL, 0x7FE6L, 1UL, 9UL}, {8UL, 65535UL, 0x7FE6L, 1UL, 1UL}}, {{8UL, 1UL, 0x5971L, 0xF020L, 0xF020L}, {1UL, 65533UL, 1UL, 65535UL, 1UL}, {9UL, 0xF020L, 1UL, 65535UL, 1UL}}, {{1UL, 0x5971L, 0xF020L, 0xF020L, 0x5971L}, {0x5971L, 0x5A1BL, 1UL, 1UL, 0x7FE6L}, {65533UL, 0x5A1BL, 1UL, 0xE3E0L, 0x9A43L}}};
        -:   30:static int16_t g_64 = 0x959FL;
        -:   31:static int16_t g_66 = 0L;
        -:   32:static uint64_t g_68 = 18446744073709551615UL;
        -:   33:static uint64_t g_69 = 0x68DE677DABF261B2LL;
        -:   34:static uint64_t g_71 = 4UL;
        -:   35:static uint64_t g_73[1] = {18446744073709551607UL};
        -:   36:static int32_t *volatile g_74 = (void *)0;
        -:   37:static volatile uint8_t g_101 = 1UL;
        -:   38:
        -:   39:static int32_t func_1(void);
        -:   40:static union U0 func_8(int16_t p_9, const int64_t p_10, int32_t p_11, uint64_t p_12);
        -:   41:
        1:   42:static int32_t func_1(void) {
        1:   43:  int8_t l_24 = 0L;
        1:   44:  uint32_t l_36 = 0xB72B416CL;
        1:   45:  int32_t l_41 = 0L;
        -:   46:  int32_t l_99[5];
        1:   47:  int32_t l_100 = 1L;
        -:   48:  int i;
        6:   49:  for (i = 0; i < 5; i++)
        5:   50:    l_99[i] = 0L;
       17:   51:  for (g_2 = (-11); (g_2 < 5); g_2++) {
       16:   52:    uint16_t l_7 = 1UL;
       16:   53:    uint8_t *l_13 = &g_14;
       16:   54:    union U0 l_23[4][2][5] = {{{{5L}, {1L}, {1L}, {5L}, {0L}}, {{-9L}, {0x17L}, {0x17L}, {-9L}, {0x61L}}}, {{{5L}, {1L}, {1L}, {5L}, {0L}}, {{-9L}, {0x17L}, {0x17L}, {-9L}, {0x61L}}}, {{{5L}, {1L}, {1L}, {5L}, {0L}}, {{-9L}, {0x17L}, {0x17L}, {-9L}, {0x61L}}}, {{{5L}, {1L}, {1L}, {5L}, {0L}}, {{-9L}, {0x17L}, {0x17L}, {-9L}, {0x61L}}}};
       16:   55:    uint32_t *l_37 = &g_38;
       16:   56:    int32_t *l_39 = &g_40;
       16:   57:    uint32_t l_87 = 0xB48400ECL;
       16:   58:    int32_t *l_90 = &g_40;
       16:   59:    int32_t *l_91 = &l_41;
       16:   60:    int32_t *l_92 = &g_40;
       16:   61:    int32_t *l_93 = &g_40;
       16:   62:    int32_t *l_94 = &g_40;
       16:   63:    int32_t *l_95 = &g_40;
       16:   64:    int32_t *l_96 = &g_40;
       16:   65:    int32_t *l_97 = &l_41;
        -:   66:    int32_t *l_98[5][1];
        -:   67:    int i, j, k;
       96:   68:    for (i = 0; i < 5; i++) {
      160:   69:      for (j = 0; j < 1; j++)
       80:   70:        l_98[i][j] = &l_41;
        -:   71:    }
        -:   72:  }
        1:   73:  return g_29.f0;
        -:   74:}
        -:   75:
    #####:   76:static union U0 func_8(int16_t p_9, const int64_t p_10, int32_t p_11, uint64_t p_12) {
    #####:   77:  int32_t l_49 = 0xB76F056EL;
        -:   78:  uint32_t *l_53[1];
    #####:   79:  int32_t l_57 = 0xE685266AL;
    #####:   80:  int32_t l_67 = (-9L);
    #####:   81:  union U0 l_75[5][1] = {{{3L}}, {{3L}}, {{3L}}, {{3L}}, {{3L}}};
        -:   82:  int i, j;
    #####:   83:  for (i = 0; i < 1; i++)
    #####:   84:    l_53[i] = &g_38;
    #####:   85:  if ((~p_9)) {
    #####:   86:    union U2 *l_46 = &g_47[0][2][2];
    #####:   87:    union U2 *volatile *l_45 = &l_46;
    #####:   88:    (*l_45) = g_44;
        -:   89:  } else {
    #####:   90:    uint32_t l_48 = 0xD86A0230L;
    #####:   91:    int32_t *l_52 = (void *)0;
    #####:   92:    uint32_t **l_54 = &l_53[0];
        -:   93:    uint16_t *l_55[1];
    #####:   94:    uint8_t *l_61 = &g_14;
    #####:   95:    uint8_t **l_62 = &g_34;
    #####:   96:    int16_t *l_63 = &g_64;
        -:   97:    int16_t *l_65[3][1];
    #####:   98:    uint64_t *l_70 = &g_71;
    #####:   99:    uint64_t *l_72 = &g_73[0];
        -:  100:    int i, j;
    #####:  101:    for (i = 0; i < 1; i++)
    #####:  102:      l_55[i] = &g_56[2][0][1];
    #####:  103:    for (i = 0; i < 3; i++) {
    #####:  104:      for (j = 0; j < 1; j++)
    #####:  105:        l_65[i][j] = &g_66;
        -:  106:    }
    #####:  107:    g_40 ^= (l_48, (((((*l_72) = ((l_49, ((((*l_70) |= ((safe_lshift_func_int16_t_s_u(((((l_52 == ((((*l_54) = l_53[0]) == &g_38), &l_49)) >= (l_57 ^= l_49)) || (safe_lshift_func_int64_t_s_s(p_9, 34))) != (+((((g_69 = (g_68 = (g_66 ^= (l_67 = ((*l_63) = ((((*l_62) = l_61) != (void *)0), 0x5EAAL)))))) ^ g_42) && 0x0E8981CC384641B4LL) & p_10))), p_9)) < g_42)) == g_42) == 0x71DABD3396AC63FELL)) & g_47[0][2][2].f0)) < p_11) ^ 0UL) < l_49));
        -:  108:  }
    #####:  109:  return l_75[2][0];
        -:  110:}
        -:  111:
        1:  112:int main(int argc, char *argv[]) {
        -:  113:  int i, j, k;
        1:  114:  int print_hash_value = 0;
       1*:  115:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  116:    print_hash_value = 1;
        1:  117:  platform_main_begin();
        1:  118:  crc32_gentab();
        1:  119:  func_1();
        1:  120:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  121:  transparent_crc(g_14, "g_14", print_hash_value);
        1:  122:  transparent_crc(g_29.f0, "g_29.f0", print_hash_value);
        1:  123:  transparent_crc(g_35, "g_35", print_hash_value);
        1:  124:  transparent_crc(g_38, "g_38", print_hash_value);
        1:  125:  transparent_crc(g_40, "g_40", print_hash_value);
        1:  126:  transparent_crc(g_42, "g_42", print_hash_value);
        5:  127:  for (i = 0; i < 4; i++) {
       16:  128:    for (j = 0; j < 3; j++) {
       48:  129:      for (k = 0; k < 3; k++) {
       36:  130:        transparent_crc(g_47[i][j][k].f0, "g_47[i][j][k].f0", print_hash_value);
       36:  131:        if (print_hash_value)
    #####:  132:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  133:      }
        -:  134:    }
        -:  135:  }
        4:  136:  for (i = 0; i < 3; i++) {
       12:  137:    for (j = 0; j < 3; j++) {
       54:  138:      for (k = 0; k < 5; k++) {
       45:  139:        transparent_crc(g_56[i][j][k], "g_56[i][j][k]", print_hash_value);
       45:  140:        if (print_hash_value)
    #####:  141:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  142:      }
        -:  143:    }
        -:  144:  }
        1:  145:  transparent_crc(g_64, "g_64", print_hash_value);
        1:  146:  transparent_crc(g_66, "g_66", print_hash_value);
        1:  147:  transparent_crc(g_68, "g_68", print_hash_value);
        1:  148:  transparent_crc(g_69, "g_69", print_hash_value);
        1:  149:  transparent_crc(g_71, "g_71", print_hash_value);
        2:  150:  for (i = 0; i < 1; i++) {
        1:  151:    transparent_crc(g_73[i], "g_73[i]", print_hash_value);
        1:  152:    if (print_hash_value)
    #####:  153:      printf("index = [%d]\n", i);
        -:  154:  }
        1:  155:  transparent_crc(g_101, "g_101", print_hash_value);
        1:  156:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  157:  return 0;
        -:  158:}

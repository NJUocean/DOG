        -:    0:Source:939.c
        -:    0:Graph:939.gcno
        -:    0:Data:939.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  int8_t f0;
        -:    8:  uint8_t f1;
        -:    9:};
        -:   10:
        -:   11:static int16_t g_5 = 0L;
        -:   12:static volatile int32_t g_17 = 0x434392F2L;
        -:   13:static volatile int32_t *volatile g_16[4] = {&g_17, &g_17, &g_17, &g_17};
        -:   14:static struct S0 g_20 = {0x03L, 0xD3L};
        -:   15:static int32_t g_25 = 0x16C28CBDL;
        -:   16:static uint32_t g_46 = 0UL;
        -:   17:static int64_t g_49[3] = {0x20EB8FC401265A1BLL, 0x20EB8FC401265A1BLL, 0x20EB8FC401265A1BLL};
        -:   18:static struct S0 *g_65 = &g_20;
        -:   19:static int32_t g_74 = 0x6DCF8E45L;
        -:   20:
        -:   21:static uint16_t func_1(void);
        -:   22:static uint8_t func_2(uint32_t p_3, uint32_t p_4);
        -:   23:
        1:   24:static uint16_t func_1(void) {
        1:   25:  int8_t l_6 = (-3L);
        1:   26:  struct S0 **l_93 = (void *)0;
        1:   27:  struct S0 **l_94 = (void *)0;
        1:   28:  struct S0 **l_95 = &g_65;
        1:   29:  struct S0 *l_96 = &g_20;
        1:   30:  int32_t l_97[1][5][4] = {{{0x48233F39L, (-5L), (-5L), 0x48233F39L}, {0xA6B6A2D8L, (-5L), 1L, (-5L)}, {(-5L), (-3L), 1L, 1L}, {0xA6B6A2D8L, 0xA6B6A2D8L, (-5L), 1L}, {0x48233F39L, (-3L), 0x48233F39L, (-5L)}}};
        -:   31:  int i, j, k;
       1*:   32:  l_97[0][3][0] = (func_2(g_5, l_6), (+((safe_rshift_func_uint64_t_u_s((l_6 != (safe_rshift_func_uint8_t_u_s((((l_6 == (safe_unary_minus_func_int32_t_s((g_20.f1 && ((l_6, (safe_lshift_func_uint8_t_u_s(((safe_rshift_func_int64_t_s_s((((l_96 = (((((safe_div_func_int16_t_s_s(((safe_div_func_uint8_t_u_u(((g_20.f1 | (l_6 | g_49[0])) >= g_46), g_74)) < l_6), 1L)) | g_20.f1) > g_46) & 0x388EEC896690B97FLL), &g_20)) == &g_20) | g_49[1]), l_6)) < 0xD233DB8BL), 0))), g_49[2]))))) & l_6) ^ 5UL), g_74))), g_20.f1)), 1L)));
        1:   33:  return g_25;
        -:   34:}
        -:   35:
        1:   36:static uint8_t func_2(uint32_t p_3, uint32_t p_4) {
        -:   37:  int32_t *l_13[5];
        1:   38:  struct S0 l_18 = {1L, 0x54L};
        1:   39:  struct S0 *l_19 = (void *)0;
        1:   40:  int32_t **l_21 = &l_13[1];
        -:   41:  int i;
        6:   42:  for (i = 0; i < 5; i++)
        5:   43:    l_13[i] = (void *)0;
       1*:   44:  (*l_21) = ((g_20 = ((((safe_lshift_func_int32_t_s_s((safe_lshift_func_int8_t_s_s(((g_5 ^ (((safe_lshift_func_uint16_t_u_s(((void *)0 != l_13[2]), 4)), g_5) && (((0x479BL ^ ((safe_div_func_uint64_t_u_u((0x3CC47D1AFD061A65LL <= (p_4 && (l_13[0] != g_16[0]))), 4UL)) <= 0xD635L)), g_5), 65527UL))) >= g_5), 5)), p_4)) != 0x0CAAD901516EA3DELL) <= g_5), l_18)), (void *)0);
        1:   45:  if (p_3) {
    #####:   46:    int32_t *l_24 = &g_25;
    #####:   47:    for (l_18.f0 = 0; (l_18.f0 > 2); l_18.f0++) {
    #####:   48:      return g_20.f1;
        -:   49:    }
    #####:   50:    l_24 = l_24;
        -:   51:  } else {
        1:   52:    int32_t l_26 = 1L;
        -:   53:    int32_t l_50[5];
        1:   54:    struct S0 **l_64 = &l_19;
        -:   55:    int64_t *l_75[3];
        1:   56:    int32_t l_76 = 0x292F9027L;
        1:   57:    int64_t l_77 = 3L;
        1:   58:    int32_t l_78 = 0x2BDABF61L;
        -:   59:    int i;
        6:   60:    for (i = 0; i < 5; i++)
        5:   61:      l_50[i] = 0x9535F447L;
        4:   62:    for (i = 0; i < 3; i++)
        3:   63:      l_75[i] = &g_49[0];
        5:   64:    for (g_20.f1 = 0; (g_20.f1 <= 3); g_20.f1 += 1) {
        4:   65:      uint16_t l_27 = 0x83A3L;
        4:   66:      uint32_t *l_45 = &g_46;
        -:   67:      int32_t l_47[1];
        -:   68:      int64_t *l_48[3][4][2];
        -:   69:      int i, j, k;
        8:   70:      for (i = 0; i < 1; i++)
        4:   71:        l_47[i] = 0xA989989AL;
       16:   72:      for (i = 0; i < 3; i++) {
       60:   73:        for (j = 0; j < 4; j++) {
      144:   74:          for (k = 0; k < 2; k++)
       96:   75:            l_48[i][j][k] = &g_49[0];
        -:   76:        }
        -:   77:      }
       24:   78:      for (l_18.f1 = 0; (l_18.f1 <= 4); l_18.f1 += 1) {
        -:   79:        int i;
       20:   80:        --l_27;
        -:   81:      }
       4*:   82:      g_25 |= (l_26 < ((0xD3C5EBB4EE00B46FLL >= (safe_unary_minus_func_uint16_t_u((((((((safe_lshift_func_int64_t_s_s((safe_sub_func_int64_t_s_s((l_50[1] = (safe_sub_func_int64_t_s_s(g_20.f1, (((0xC71F8B108A6652F5LL > (l_47[0] = ((safe_mul_func_int8_t_s_s(2L, (((safe_lshift_func_uint32_t_u_s(((*l_45) = (safe_lshift_func_int32_t_s_u(((safe_lshift_func_int32_t_s_s((p_4 | g_5), ((void *)0 == &l_18))) >= 0L), g_20.f0))), 2)) <= l_27) && g_46))) & g_17))) & p_3) == p_3)))), g_5)), 39)), 0xC0E3E0ECL) >= 1L), 0xAA0EL) > 0x5266L) | 0x02L), 0x0E27L)))) & g_20.f1));
        -:   83:    }
       1*:   84:    l_78 = (safe_lshift_func_uint32_t_u_s((safe_mod_func_uint16_t_u_u((safe_rshift_func_uint16_t_u_u(g_25, 10)), g_25)), (safe_lshift_func_uint32_t_u_s((~((safe_mul_func_uint64_t_u_u(p_4, l_50[1])) && (((l_76 = (safe_lshift_func_uint8_t_u_s((((*l_64) = &l_18) == (g_65 = &l_18)), (safe_add_func_int16_t_s_s((l_18, (((((safe_lshift_func_uint64_t_u_u((((((l_50[1] = (((safe_lshift_func_int8_t_s_u((safe_add_func_int32_t_s_s(p_4, (g_74 = (l_26 ^= p_3)))), p_3)) && l_50[1]) || 0x7FDF8BF216A9CAF0LL)) < p_4) | 0x98L) == 0xD821F8E6L) > 0x32E4L), 52)) ^ 18446744073709551615UL) & p_3) <= l_76) == g_46)), l_77))))) & g_25) ^ 0xFCL))), 16))));
        -:   85:  }
        1:   86:  return g_49[2];
        -:   87:}
        -:   88:
        1:   89:int main(int argc, char *argv[]) {
        -:   90:  int i;
        1:   91:  int print_hash_value = 0;
       1*:   92:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   93:    print_hash_value = 1;
        1:   94:  platform_main_begin();
        1:   95:  crc32_gentab();
        1:   96:  func_1();
        1:   97:  transparent_crc(g_5, "g_5", print_hash_value);
        1:   98:  transparent_crc(g_17, "g_17", print_hash_value);
        1:   99:  transparent_crc(g_20.f0, "g_20.f0", print_hash_value);
        1:  100:  transparent_crc(g_20.f1, "g_20.f1", print_hash_value);
        1:  101:  transparent_crc(g_25, "g_25", print_hash_value);
        1:  102:  transparent_crc(g_46, "g_46", print_hash_value);
        4:  103:  for (i = 0; i < 3; i++) {
        3:  104:    transparent_crc(g_49[i], "g_49[i]", print_hash_value);
        3:  105:    if (print_hash_value)
    #####:  106:      printf("index = [%d]\n", i);
        -:  107:  }
        1:  108:  transparent_crc(g_74, "g_74", print_hash_value);
        1:  109:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  110:  return 0;
        -:  111:}

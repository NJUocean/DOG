        -:    0:Source:399.c
        -:    0:Graph:399.gcno
        -:    0:Data:399.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_2 = (-1L);
        -:    7:static volatile int32_t g_3 = 8L;
        -:    8:static volatile int32_t g_4 = 3L;
        -:    9:static volatile int32_t g_5 = (-1L);
        -:   10:static volatile int32_t g_6[4] = {6L, 6L, 6L, 6L};
        -:   11:static int32_t g_7 = 0L;
        -:   12:static int32_t g_10[1] = {(-10L)};
        -:   13:static int32_t g_15 = 9L;
        -:   14:
        -:   15:static int32_t func_1(void);
        -:   16:
        1:   17:static int32_t func_1(void) {
       1*:   18:  for (g_7 = 0; (g_7 > 23); ++g_7) {
    #####:   19:    for (g_10[0] = (-28); (g_10[0] != 17); g_10[0] = safe_add_func_int16_t_s_s(g_10[0], 5)) {
    #####:   20:      uint64_t l_13 = 18446744073709551609UL;
    #####:   21:      int32_t *l_14 = &g_15;
    #####:   22:      (*l_14) = l_13;
        -:   23:    }
        -:   24:  }
        1:   25:  return g_10[0];
        -:   26:}
        -:   27:
        1:   28:int main(int argc, char *argv[]) {
        -:   29:  int i;
        1:   30:  int print_hash_value = 0;
       1*:   31:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   32:    print_hash_value = 1;
        1:   33:  platform_main_begin();
        1:   34:  crc32_gentab();
        1:   35:  func_1();
        1:   36:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   37:  transparent_crc(g_3, "g_3", print_hash_value);
        1:   38:  transparent_crc(g_4, "g_4", print_hash_value);
        1:   39:  transparent_crc(g_5, "g_5", print_hash_value);
        5:   40:  for (i = 0; i < 4; i++) {
        4:   41:    transparent_crc(g_6[i], "g_6[i]", print_hash_value);
        4:   42:    if (print_hash_value)
    #####:   43:      printf("index = [%d]\n", i);
        -:   44:  }
        1:   45:  transparent_crc(g_7, "g_7", print_hash_value);
        2:   46:  for (i = 0; i < 1; i++) {
        1:   47:    transparent_crc(g_10[i], "g_10[i]", print_hash_value);
        1:   48:    if (print_hash_value)
    #####:   49:      printf("index = [%d]\n", i);
        -:   50:  }
        1:   51:  transparent_crc(g_15, "g_15", print_hash_value);
        1:   52:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   53:  return 0;
        -:   54:}

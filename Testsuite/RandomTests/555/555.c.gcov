        -:    0:Source:555.c
        -:    0:Graph:555.gcno
        -:    0:Data:555.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  signed f0 : 24;
        -:    8:};
        -:    9:
        -:   10:static const uint16_t g_12 = 1UL;
        -:   11:static int32_t g_16 = 0x49598AAFL;
        -:   12:static int32_t *g_15 = &g_16;
        -:   13:static int32_t *g_21 = (void *)0;
        -:   14:static int32_t g_28 = 0x051DD2E9L;
        -:   15:static uint16_t g_38[5] = {4UL, 4UL, 4UL, 4UL, 4UL};
        -:   16:static uint8_t g_39 = 6UL;
        -:   17:static int32_t g_49 = 0x1BF520F0L;
        -:   18:static int8_t g_52 = 0xA2L;
        -:   19:static int8_t *volatile g_62 = &g_52;
        -:   20:static int8_t *volatile *volatile g_61[2][5][4] = {{{&g_62, (void *)0, &g_62, &g_62}, {(void *)0, (void *)0, &g_62, &g_62}, {&g_62, (void *)0, &g_62, &g_62}, {&g_62, &g_62, &g_62, &g_62}, {(void *)0, &g_62, &g_62, &g_62}}, {{&g_62, (void *)0, &g_62, &g_62}, {(void *)0, (void *)0, &g_62, &g_62}, {&g_62, (void *)0, &g_62, &g_62}, {&g_62, &g_62, &g_62, &g_62}, {(void *)0, &g_62, &g_62, &g_62}}};
        -:   21:static uint32_t g_67[3] = {0x5DAE8CE1L, 0x5DAE8CE1L, 0x5DAE8CE1L};
        -:   22:static volatile struct S0 g_70[5] = {{-4072}, {-4072}, {-4072}, {-4072}, {-4072}};
        -:   23:static volatile struct S0 *volatile g_71 = &g_70[0];
        -:   24:static volatile struct S0 *volatile g_72 = &g_70[0];
        -:   25:
        -:   26:static uint8_t func_1(void);
        -:   27:static uint16_t func_2(int16_t p_3, uint32_t p_4, const int32_t p_5, uint64_t p_6, int64_t p_7);
        -:   28:
        1:   29:static uint8_t func_1(void) {
        1:   30:  int32_t l_8 = (-9L);
        1:   31:  int32_t l_11 = 0xEF307D7CL;
        1:   32:  int64_t l_73 = 0L;
        1:   33:  if (((((func_2(l_8, (((safe_mul_func_int32_t_s_s((-4L), (l_11 ^= 7L))) < g_12), (safe_mul_func_int8_t_s_s(2L, (l_8 | (0xB963AB1943C6FE23LL && 8L))))), g_12, g_12, g_12) != g_12), l_8), 0x72L), l_8)) {
        1:   34:    uint16_t *l_48 = &g_38[0];
        1:   35:    int32_t l_56 = 0x8F0E43DAL;
        1:   36:    int32_t l_57 = 0x104F36CCL;
        1:   37:    int32_t *l_66[1][4][2] = {{{&g_28, (void *)0}, {&g_28, &g_28}, {(void *)0, &g_28}, {&g_28, (void *)0}}};
        -:   38:    int i, j, k;
        1:   39:    if (((*g_21) = (*g_21))) {
        1:   40:      int8_t *l_50 = (void *)0;
        1:   41:      int8_t *l_51 = &g_52;
        1:   42:      int32_t l_53 = 0xBECC425FL;
        1:   43:      int32_t **l_58 = (void *)0;
       1*:   44:      l_57 = ((*g_15) = ((safe_rshift_func_uint16_t_u_s(0xFF74L, (safe_add_func_uint64_t_u_u((0x12L & (((safe_add_func_int32_t_s_s((safe_add_func_int8_t_s_s(((*l_51) = (g_49 = ((void *)0 == l_48))), 0L)), l_53)) || (safe_mod_func_int16_t_s_s(l_11, ((*l_48) = g_16)))) < (l_56 &= g_28))), g_28)))) <= 0x06A8L));
        1:   45:      g_15 = &g_28;
        -:   46:    } else {
    #####:   47:      for (g_49 = 0; (g_49 < 20); g_49++) {
    #####:   48:        int8_t *volatile *volatile *l_63 = &g_61[1][0][1];
    #####:   49:        int32_t **l_64 = &g_21;
    #####:   50:        int32_t **l_65 = &g_15;
    #####:   51:        (*l_63) = g_61[1][0][1];
    #####:   52:        (*l_65) = ((*l_64) = &g_28);
        -:   53:      }
        -:   54:    }
        1:   55:    ++g_67[1];
        -:   56:  } else {
    #####:   57:    for (l_8 = 1; (l_8 >= 0); l_8 -= 1) {
    #####:   58:      for (g_16 = 0; g_16 < 5; g_16 += 1) {
    #####:   59:        g_38[g_16] = 0xB887L;
        -:   60:      }
    #####:   61:      if ((*g_15))
    #####:   62:        continue;
    #####:   63:      for (g_28 = 0; (g_28 <= 1); g_28 += 1) {
    #####:   64:        (*g_71) = g_70[0];
    #####:   65:        return g_38[1];
        -:   66:      }
        -:   67:    }
    #####:   68:    (*g_72) = (*g_71);
        -:   69:  }
        1:   70:  return l_73;
        -:   71:}
        -:   72:
        1:   73:static uint16_t func_2(int16_t p_3, uint32_t p_4, const int32_t p_5, uint64_t p_6, int64_t p_7) {
        1:   74:  int32_t **l_17 = (void *)0;
        1:   75:  int32_t **l_18 = &g_15;
        1:   76:  int32_t *l_20 = &g_16;
        1:   77:  int32_t **l_19 = &l_20;
        1:   78:  int32_t *l_26 = (void *)0;
        1:   79:  int32_t *l_27[5][4][3] = {{{&g_28, &g_16, &g_16}, {&g_28, &g_28, &g_16}, {&g_16, &g_16, &g_16}, {&g_16, &g_16, &g_16}}, {{&g_16, &g_28, &g_16}, {&g_28, &g_16, &g_16}, {&g_28, &g_28, &g_16}, {&g_28, &g_16, &g_16}}, {{&g_16, &g_28, &g_16}, {&g_28, &g_16, &g_28}, {&g_28, &g_16, &g_16}, {&g_28, &g_28, &g_16}}, {{&g_16, &g_16, &g_16}, {&g_16, &g_16, &g_16}, {&g_16, &g_28, &g_16}, {&g_28, &g_16, &g_16}}, {{&g_28, &g_28, &g_16}, {&g_28, &g_16, &g_16}, {&g_16, &g_28, &g_16}, {&g_28, &g_16, &g_28}}};
        1:   80:  uint16_t *l_37 = &g_38[1];
        -:   81:  int i, j, k;
        1:   82:  g_21 = ((*l_19) = ((*l_18) = g_15));
        1:   83:  g_39 |= ((*g_15) = (&g_16 == (((*l_37) |= (safe_sub_func_uint64_t_u_u(g_16, ((safe_mul_func_uint8_t_u_u(((((((0xD93BA6AEL & (g_28 = ((**l_19) == g_12))) < (safe_mul_func_uint8_t_u_u((((0x53L < ((safe_lshift_func_int8_t_s_s((safe_mul_func_uint32_t_u_u(0x18EB0BADL, ((safe_div_func_uint8_t_u_u((((void *)0 == &p_5), g_16), 253UL)), 0xD62BFEEDL))), g_16)) < g_12)) > p_4) | 0x6F2BA10FL), g_16))) ^ g_16) < 4UL) < p_3), 255UL), g_16)) > (*l_20))))), &g_16)));
        1:   84:  return g_38[1];
        -:   85:}
        -:   86:
        1:   87:int main(int argc, char *argv[]) {
        -:   88:  int i, j, k;
        1:   89:  int print_hash_value = 0;
       1*:   90:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   91:    print_hash_value = 1;
        1:   92:  platform_main_begin();
        1:   93:  crc32_gentab();
        1:   94:  func_1();
        1:   95:  transparent_crc(g_12, "g_12", print_hash_value);
        1:   96:  transparent_crc(g_16, "g_16", print_hash_value);
        1:   97:  transparent_crc(g_28, "g_28", print_hash_value);
        6:   98:  for (i = 0; i < 5; i++) {
        5:   99:    transparent_crc(g_38[i], "g_38[i]", print_hash_value);
        5:  100:    if (print_hash_value)
    #####:  101:      printf("index = [%d]\n", i);
        -:  102:  }
        1:  103:  transparent_crc(g_39, "g_39", print_hash_value);
        1:  104:  transparent_crc(g_49, "g_49", print_hash_value);
        1:  105:  transparent_crc(g_52, "g_52", print_hash_value);
        4:  106:  for (i = 0; i < 3; i++) {
        3:  107:    transparent_crc(g_67[i], "g_67[i]", print_hash_value);
        3:  108:    if (print_hash_value)
    #####:  109:      printf("index = [%d]\n", i);
        -:  110:  }
        6:  111:  for (i = 0; i < 5; i++) {
        5:  112:    transparent_crc(g_70[i].f0, "g_70[i].f0", print_hash_value);
        5:  113:    if (print_hash_value)
    #####:  114:      printf("index = [%d]\n", i);
        -:  115:  }
        1:  116:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  117:  return 0;
        -:  118:}

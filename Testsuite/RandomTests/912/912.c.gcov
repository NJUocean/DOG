        -:    0:Source:912.c
        -:    0:Graph:912.gcno
        -:    0:Data:912.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  volatile uint8_t f0;
        -:   10:  unsigned f1 : 1;
        -:   11:  uint16_t f2;
        -:   12:  const volatile int16_t f3;
        -:   13:  const int32_t f4;
        -:   14:};
        -:   15:#pragma pack(pop)
        -:   16:
        -:   17:#pragma pack(push)
        -:   18:#pragma pack(1)
        -:   19:struct S1 {
        -:   20:  unsigned f0 : 9;
        -:   21:  signed f1 : 3;
        -:   22:  signed f2 : 12;
        -:   23:  signed : 0;
        -:   24:  const int32_t f3;
        -:   25:};
        -:   26:#pragma pack(pop)
        -:   27:
        -:   28:static int32_t g_2 = (-1L);
        -:   29:static int32_t g_7 = 0L;
        -:   30:static int32_t g_8[3] = {0x1FD9D089L, 0x1FD9D089L, 0x1FD9D089L};
        -:   31:static int8_t g_17 = 0x99L;
        -:   32:static volatile int32_t *g_20 = (void *)0;
        -:   33:static volatile int32_t **g_19 = &g_20;
        -:   34:static volatile int32_t ***volatile g_21 = &g_19;
        -:   35:static int32_t *g_30 = &g_7;
        -:   36:static int32_t **g_29 = &g_30;
        -:   37:static int32_t ***g_28[5] = {&g_29, &g_29, &g_29, &g_29, &g_29};
        -:   38:static int32_t ****g_27 = &g_28[1];
        -:   39:static int32_t *****volatile g_26 = &g_27;
        -:   40:static int32_t **g_46 = &g_30;
        -:   41:static struct S0 g_54[4] = {{0xA5L, 0, 65526UL, 0xE1B4L, 0xDC7C5A97L}, {0xA5L, 0, 65526UL, 0xE1B4L, 0xDC7C5A97L}, {0xA5L, 0, 65526UL, 0xE1B4L, 0xDC7C5A97L}, {0xA5L, 0, 65526UL, 0xE1B4L, 0xDC7C5A97L}};
        -:   42:static volatile struct S1 g_64 = {18, 1, 50, 0xF019D465L};
        -:   43:static int64_t g_78 = 0x796DE133A9B92FD5LL;
        -:   44:static uint32_t g_81 = 0x153CB79DL;
        -:   45:
        -:   46:static struct S0 func_1(void);
        -:   47:static int32_t *func_9(int32_t *p_10, uint8_t p_11, int32_t *p_12, int32_t *p_13);
        -:   48:
        1:   49:static struct S0 func_1(void) {
        1:   50:  uint8_t l_5 = 0x19L;
        1:   51:  int32_t *l_14 = &g_8[0];
        1:   52:  int32_t l_33 = 1L;
        -:   53:  uint32_t l_34[5];
        1:   54:  int32_t ***l_43 = &g_29;
        1:   55:  int32_t **l_44 = &l_14;
        1:   56:  int32_t ***l_45[3][2] = {{(void *)0, &l_44}, {&l_44, (void *)0}, {&l_44, &l_44}};
        1:   57:  struct S1 l_76[1] = {{19, 1, -56, 0x4BAF7209L}};
        -:   58:  int i, j;
        6:   59:  for (i = 0; i < 5; i++)
        5:   60:    l_34[i] = 4294967295UL;
        3:   61:  for (g_2 = 0; (g_2 < 8); g_2 = safe_add_func_int16_t_s_s(g_2, 4)) {
        2:   62:    int32_t l_6[4][3][3] = {{{0x29EDCA8FL, 0x29EDCA8FL, 0x50F82BAEL}, {0x27213EC7L, 0x27213EC7L, (-1L)}, {0x29EDCA8FL, 0x29EDCA8FL, 0x50F82BAEL}}, {{0x27213EC7L, 0x27213EC7L, (-1L)}, {0x29EDCA8FL, 0x29EDCA8FL, 0x50F82BAEL}, {0x27213EC7L, 0x27213EC7L, (-1L)}}, {{0x29EDCA8FL, 0x29EDCA8FL, 0x50F82BAEL}, {0x27213EC7L, 0x27213EC7L, (-1L)}, {0x29EDCA8FL, 0x29EDCA8FL, 0x50F82BAEL}}, {{0L, 0L, 0x27213EC7L}, {(-4L), (-4L), 0x29EDCA8FL}, {0L, 0L, 0x27213EC7L}}};
        -:   63:    int i, j, k;
        2:   64:    if ((0x8DD44AD374006310LL && l_5)) {
       10:   65:      for (l_5 = 0; l_5 < 4; l_5 += 1) {
       32:   66:        for (g_7 = 0; g_7 < 3; g_7 += 1) {
       96:   67:          for (g_8[2] = 0; g_8[2] < 3; g_8[2] += 1) {
       72:   68:            l_6[l_5][g_7][g_8[2]] = 0x6BC657E3L;
        -:   69:          }
        -:   70:        }
        -:   71:      }
        2:   72:      if (g_8[2])
        2:   73:        continue;
        -:   74:    } else {
    #####:   75:      uint32_t l_15 = 0x6711DB60L;
    #####:   76:      int32_t *l_18 = &g_7;
        -:   77:      int32_t *l_32[5];
        -:   78:      int i;
    #####:   79:      for (i = 0; i < 5; i++)
    #####:   80:        l_32[i] = &g_8[2];
    #####:   81:      for (g_7 = 2; (g_7 >= 0); g_7 -= 1) {
    #####:   82:        int8_t *l_16 = &g_17;
    #####:   83:        int32_t *l_31 = &g_8[2];
    #####:   84:        l_31 = func_9(l_14, (l_15 | ((*l_16) = 0L)), l_18, &g_8[2]);
        -:   85:      }
    #####:   86:      --l_34[4];
        -:   87:    }
        -:   88:  }
       1*:   89:  if (((safe_mul_func_uint64_t_u_u(((safe_rshift_func_uint32_t_u_u((safe_mul_func_int64_t_s_s((((*l_43) = &l_14) == (g_46 = l_44)), (safe_add_func_uint32_t_u_u(0x9335309FL, (safe_add_func_int32_t_s_s((**l_44), ((*g_30) ^= 0xBBB30732L))))))), 16)) | (**l_44)), 0x92D8C20E5E2E4BCBLL)) || (safe_lshift_func_int64_t_s_u(0xF90942075D7B1ECBLL, (!(***l_43)))))) {
        1:   90:    return g_54[0];
        -:   91:  } else {
    #####:   92:    int32_t l_71 = 4L;
    #####:   93:    int64_t *l_77 = &g_78;
    #####:   94:    int32_t l_79 = 0xA0DA2B3CL;
    #####:   95:    int32_t *l_80 = (void *)0;
    #####:   96:    int32_t *l_82 = &l_71;
    #####:   97:    int64_t l_83 = 0x9CD2C718CA4024FFLL;
    #####:   98:    (**l_44) = (+((safe_add_func_uint8_t_u_u((safe_mul_func_int16_t_s_s((((g_54[1], (((*l_82) = (g_81 &= (((safe_mod_func_int8_t_s_s((safe_div_func_int16_t_s_s(((0x1A659E80L || (*l_14)) > ((g_64, &g_27) != (void *)0)), (((g_2 == ((*g_30) = (safe_lshift_func_uint32_t_u_u((((safe_rshift_func_int16_t_s_u((safe_mul_func_uint8_t_u_u(((((((((l_71 & ((safe_add_func_uint16_t_u_u(((l_79 = ((*l_77) = ((safe_add_func_uint32_t_u_u((l_76[0], 4UL), l_71)) >= l_71))), g_8[0]), (*l_14))) != 0x82E5CE9E3C4023A1LL)) >= g_2) ^ g_54[0].f2) <= l_71) | g_54[0].f4) & 0x07283BD0L) | 0xD7L) > 255UL), 0L)), l_71)) == (-3L)) & (**g_29)), g_8[2])))) == g_54[0].f1) & 0x5AL))), g_8[0])) ^ g_17) & 0x19DAAC0CL))), g_81)), l_83) | g_8[1]), 1UL)), 0x3DL)) & g_2));
        -:   99:  }
    #####:  100:  return g_54[1];
        -:  101:}
        -:  102:
    #####:  103:static int32_t *func_9(int32_t *p_10, uint8_t p_11, int32_t *p_12, int32_t *p_13) {
    #####:  104:  int32_t *l_25 = &g_2;
    #####:  105:  int32_t **l_24 = &l_25;
    #####:  106:  int32_t ***l_23 = &l_24;
    #####:  107:  int32_t ****l_22 = &l_23;
    #####:  108:  (*g_21) = g_19;
    #####:  109:  (*g_26) = l_22;
    #####:  110:  return p_12;
        -:  111:}
        -:  112:
        1:  113:int main(int argc, char *argv[]) {
        -:  114:  int i;
        1:  115:  int print_hash_value = 0;
       1*:  116:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  117:    print_hash_value = 1;
        1:  118:  platform_main_begin();
        1:  119:  crc32_gentab();
        1:  120:  func_1();
        1:  121:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  122:  transparent_crc(g_7, "g_7", print_hash_value);
        4:  123:  for (i = 0; i < 3; i++) {
        3:  124:    transparent_crc(g_8[i], "g_8[i]", print_hash_value);
        3:  125:    if (print_hash_value)
    #####:  126:      printf("index = [%d]\n", i);
        -:  127:  }
        1:  128:  transparent_crc(g_17, "g_17", print_hash_value);
        5:  129:  for (i = 0; i < 4; i++) {
        4:  130:    transparent_crc(g_54[i].f0, "g_54[i].f0", print_hash_value);
        4:  131:    transparent_crc(g_54[i].f1, "g_54[i].f1", print_hash_value);
        4:  132:    transparent_crc(g_54[i].f2, "g_54[i].f2", print_hash_value);
        4:  133:    transparent_crc(g_54[i].f3, "g_54[i].f3", print_hash_value);
        4:  134:    transparent_crc(g_54[i].f4, "g_54[i].f4", print_hash_value);
        4:  135:    if (print_hash_value)
    #####:  136:      printf("index = [%d]\n", i);
        -:  137:  }
        1:  138:  transparent_crc(g_64.f0, "g_64.f0", print_hash_value);
        1:  139:  transparent_crc(g_64.f1, "g_64.f1", print_hash_value);
        1:  140:  transparent_crc(g_64.f2, "g_64.f2", print_hash_value);
        1:  141:  transparent_crc(g_64.f3, "g_64.f3", print_hash_value);
        1:  142:  transparent_crc(g_78, "g_78", print_hash_value);
        1:  143:  transparent_crc(g_81, "g_81", print_hash_value);
        1:  144:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  145:  return 0;
        -:  146:}

        -:    0:Source:264.c
        -:    0:Graph:264.gcno
        -:    0:Data:264.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_4[3][3][1] = {{{0xAC70C309L}, {0xAC70C309L}, {0xAC70C309L}}, {{0xAC70C309L}, {0xAC70C309L}, {0xAC70C309L}}, {{0xAC70C309L}, {0xAC70C309L}, {0xAC70C309L}}};
        -:    7:static uint32_t g_26 = 0x6084EDC0L;
        -:    8:static int32_t g_38[3] = {0x30B63E91L, 0x30B63E91L, 0x30B63E91L};
        -:    9:static int32_t g_40 = 0xB4763523L;
        -:   10:static uint16_t g_42[3] = {65535UL, 65535UL, 65535UL};
        -:   11:static uint16_t g_44 = 0x6DCBL;
        -:   12:static uint32_t g_53 = 0x61EA52FAL;
        -:   13:static uint8_t g_63 = 255UL;
        -:   14:static int32_t *volatile g_68 = &g_38[1];
        -:   15:static int32_t *g_72 = &g_38[0];
        -:   16:static int32_t **volatile g_71 = &g_72;
        -:   17:static int64_t g_80 = 0x8488E6FCAC8A3317LL;
        -:   18:static uint8_t g_81 = 1UL;
        -:   19:static uint32_t *g_83 = &g_53;
        -:   20:static int16_t g_87 = 0x1818L;
        -:   21:static volatile uint64_t g_97 = 4UL;
        -:   22:
        -:   23:static uint8_t func_1(void);
        -:   24:static const int16_t func_11(uint16_t p_12, uint64_t p_13, int32_t *p_14, uint32_t p_15);
        -:   25:
        1:   26:static uint8_t func_1(void) {
        1:   27:  int8_t l_2[2][1][5] = {{{0xF9L, 0xF9L, 0xF9L, 0xF9L, 0xF9L}}, {{0xF7L, 0xF7L, 0xF7L, 0xF7L, 0xF7L}}};
        1:   28:  int32_t *l_3 = &g_4[1][0][0];
        1:   29:  uint32_t l_36 = 0xF4864854L;
        -:   30:  uint32_t *l_37[3];
        1:   31:  int32_t *l_39 = &g_40;
        1:   32:  uint16_t *l_41 = &g_42[0];
        -:   33:  uint16_t *l_43[3];
        1:   34:  uint32_t l_69 = 0UL;
        1:   35:  int32_t l_89 = 0x18CA4024L;
        -:   36:  int i, j, k;
        4:   37:  for (i = 0; i < 3; i++)
        3:   38:    l_37[i] = &l_36;
        4:   39:  for (i = 0; i < 3; i++)
        3:   40:    l_43[i] = &g_44;
        1:   41:  (*l_3) ^= l_2[0][0][3];
       1*:   42:    if (((safe_div_func_int16_t_s_s((((*l_3) <= (safe_lshift_func_int64_t_s_s((safe_lshift_func_int16_t_s_s((*l_3), func_11((safe_mod_func_uint64_t_u_u(4UL, (((safe_add_func_uint32_t_u_u((((safe_add_func_int8_t_s_s(((((g_4[0][2][0] > (safe_div_func_int16_t_s_s((0x6578L == (g_44 = ((*l_41) &= (((((*l_39) &= ((((g_26 = g_4[1][0][0]) & g_4[1][0][0]) && (((safe_sub_func_uint8_t_u_u(((safe_add_func_int64_t_s_s(((safe_mul_func_uint16_t_u_u((safe_unary_minus_func_uint8_t_u(((g_38[1] = l_36) || ((g_4[0][1][0] , (void*)0) == &l_36)))), 0xC010L)) , g_38[1]), (*l_3))) && g_4[1][0][0]), g_4[1][1][0])) <= g_4[1][0][0]) >= 0xD4A7C769867F5D1CLL)) >= (*l_3))) , 0x3B1067DCC3592E7BLL) || 0xD707D8EB7BFBC35CLL) | 1L)))), g_4[1][0][0]))) || 0L) == g_4[1][0][0]) | 0xBBL), g_4[1][0][0])) ^ 0xB5CFL) >= 0L), 0x02D1F73EL)) | (*l_3)) & g_4[1][0][0]))), (*l_3), l_3, (*l_3)))), g_4[1][0][0]))) >= (-1L)), (-1L))) < l_69))
        -:   43:    {
        -:   44:      int32_t *l_70[3];
        -:   45:      int64_t *l_79[1][2];
        -:   46:      uint32_t **l_82[1];
    #####:   47:      int16_t *l_86 = &g_87;
    #####:   48:      uint16_t **l_88 = &l_43[2];
        -:   49:      int i, j;
    #####:   50:      for (i = 0; i < 3; i++)
    #####:   51:        l_70[i] = &g_4[1][0][0];
    #####:   52:      for (i = 0; i < 1; i++) {
    #####:   53:        for (j = 0; j < 2; j++)
    #####:   54:          l_79[i][j] = &g_80;
        -:   55:      }
    #####:   56:      for (i = 0; i < 1; i++)
    #####:   57:        l_82[i] = &l_37[2];
    #####:   58:      (*g_71) = l_70[0];
    #####:   59:      l_89 |= ((safe_add_func_int8_t_s_s(((safe_lshift_func_uint16_t_u_u(g_4[2][0][0], 6)) > ((safe_sub_func_int64_t_s_s((g_81 = (g_80 = g_38[1])), ((((*l_88) = ((((g_83 = (void *)0) == (void *)0) & (((*l_86) = (((*l_39) >= (((l_3 = l_70[2]) != ((*l_39), (((safe_mul_func_uint32_t_u_u(g_38[1], ((l_37[2] = &g_53) == &g_53))) ^ (*l_39)), (*g_71)))) ^ g_4[1][0][0])) != g_38[2])) ^ (*l_39))), (void *)0)) != &g_44) ^ g_38[0]))) <= 0x14B153CB79D87571LL)), g_63)) > g_42[0]);
        -:   60:    } else {
        1:   61:      int32_t *l_90 = &g_38[1];
        1:   62:      int32_t *l_91 = (void *)0;
        1:   63:      int32_t *l_92 = &g_38[0];
        1:   64:      int32_t *l_93 = &g_38[1];
        1:   65:      int32_t *l_94 = (void *)0;
        1:   66:      int32_t l_95 = 0xA9186717L;
        1:   67:      int32_t *l_96[5] = {&g_4[1][0][0], &g_4[1][0][0], &g_4[1][0][0], &g_4[1][0][0], &g_4[1][0][0]};
        -:   68:      int i;
        1:   69:      --g_97;
        1:   70:      l_96[1] = (*g_71);
        -:   71:    }
        1:   72:    return g_81;
        -:   73:}
        -:   74:
        1:   75:static const int16_t func_11(uint16_t p_12, uint64_t p_13, int32_t *p_14, uint32_t p_15) {
        1:   76:  int16_t l_51[1][5][2] = {{{0x9A62L, 0x9420L}, {0x9420L, 0x9A62L}, {0x9420L, 0x9420L}, {0x9A62L, 0x9420L}, {0x9420L, 0x9A62L}}};
        -:   77:  int32_t l_64[2];
        -:   78:  int i, j, k;
        3:   79:  for (i = 0; i < 2; i++)
        2:   80:    l_64[i] = 0L;
        4:   81:  for (p_12 = 0; (p_12 <= 2); p_12 += 1) {
        3:   82:    uint32_t *l_52 = &g_53;
        3:   83:    int32_t l_61 = 0L;
        -:   84:    uint8_t *l_62[5];
        3:   85:    int32_t *l_67 = (void *)0;
        -:   86:    int i;
       18:   87:    for (i = 0; i < 5; i++)
       15:   88:      l_62[i] = &g_63;
        3:   89:    (*g_68) = (safe_mod_func_uint8_t_u_u((((safe_mul_func_uint8_t_u_u(255UL, ((safe_div_func_int32_t_s_s((((*l_52) = l_51[0][1][0]) && (!((((safe_mod_func_int16_t_s_s(0x2FFAL, l_51[0][1][0])) == (((l_64[1] ^= (safe_add_func_uint32_t_u_u((safe_add_func_int16_t_s_s((l_61 == (g_63 = 1UL)), p_12)), p_12))), ((l_61 = (safe_add_func_int16_t_s_s(p_13, l_64[0]))) >= 0xC8A1B617L)) | p_12)) ^ 0x58AC42121A659E80LL) && (-1L)))), 0x365B212FL)) & 1UL))) == p_12) < p_12), p_13));
        -:   90:  }
        1:   91:  return g_38[1];
        -:   92:}
        -:   93:
        1:   94:int main(int argc, char *argv[]) {
        -:   95:  int i, j, k;
        1:   96:  int print_hash_value = 0;
       1*:   97:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   98:    print_hash_value = 1;
        1:   99:  platform_main_begin();
        1:  100:  crc32_gentab();
        1:  101:  func_1();
        4:  102:  for (i = 0; i < 3; i++) {
       12:  103:    for (j = 0; j < 3; j++) {
       18:  104:      for (k = 0; k < 1; k++) {
        9:  105:        transparent_crc(g_4[i][j][k], "g_4[i][j][k]", print_hash_value);
        9:  106:        if (print_hash_value)
    #####:  107:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  108:      }
        -:  109:    }
        -:  110:  }
        1:  111:  transparent_crc(g_26, "g_26", print_hash_value);
        4:  112:  for (i = 0; i < 3; i++) {
        3:  113:    transparent_crc(g_38[i], "g_38[i]", print_hash_value);
        3:  114:    if (print_hash_value)
    #####:  115:      printf("index = [%d]\n", i);
        -:  116:  }
        1:  117:  transparent_crc(g_40, "g_40", print_hash_value);
        4:  118:  for (i = 0; i < 3; i++) {
        3:  119:    transparent_crc(g_42[i], "g_42[i]", print_hash_value);
        3:  120:    if (print_hash_value)
    #####:  121:      printf("index = [%d]\n", i);
        -:  122:  }
        1:  123:  transparent_crc(g_44, "g_44", print_hash_value);
        1:  124:  transparent_crc(g_53, "g_53", print_hash_value);
        1:  125:  transparent_crc(g_63, "g_63", print_hash_value);
        1:  126:  transparent_crc(g_80, "g_80", print_hash_value);
        1:  127:  transparent_crc(g_81, "g_81", print_hash_value);
        1:  128:  transparent_crc(g_87, "g_87", print_hash_value);
        1:  129:  transparent_crc(g_97, "g_97", print_hash_value);
        1:  130:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  131:  return 0;
        -:  132:}

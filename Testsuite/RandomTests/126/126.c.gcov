        -:    0:Source:126.c
        -:    0:Graph:126.gcno
        -:    0:Data:126.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U0 {
        -:    7:  uint32_t f0;
        -:    8:  uint32_t f1;
        -:    9:  uint32_t f2;
        -:   10:  int16_t f3;
        -:   11:};
        -:   12:
        -:   13:static uint16_t g_2 = 65535UL;
        -:   14:static int8_t g_26[1][5] = {{0x4EL, 0x4EL, 0x4EL, 0x4EL, 0x4EL}};
        -:   15:static int32_t g_31 = (-5L);
        -:   16:static int32_t g_33 = 0xF47073E7L;
        -:   17:static int32_t *volatile g_32 = &g_33;
        -:   18:static union U0 g_40[1][5] = {{{0x68D9A65CL}, {0x68D9A65CL}, {0x68D9A65CL}, {0x68D9A65CL}, {0x68D9A65CL}}};
        -:   19:static uint32_t g_48 = 3UL;
        -:   20:static uint32_t g_50[2][5] = {{0x12A55B90L, 0x12A55B90L, 0x12A55B90L, 0x12A55B90L, 0x12A55B90L}, {0xDF47B588L, 0xDF47B588L, 0xDF47B588L, 0xDF47B588L, 0xDF47B588L}};
        -:   21:static uint8_t g_52 = 253UL;
        -:   22:static int16_t g_56[1][1] = {{0x51D4L}};
        -:   23:static const int16_t *g_55[2] = {&g_56[0][0], &g_56[0][0]};
        -:   24:static int8_t *g_77 = &g_26[0][4];
        -:   25:static int64_t g_79 = 0xD9178FB6CA454D88LL;
        -:   26:static int32_t g_86[3][5][4] = {{{0L, 0L, 0x16154EA9L, 1L}, {1L, 0L, 0x16154EA9L, 0L}, {0L, 0L, 1L, 0x16154EA9L}, {0L, 0L, 0L, 0L}, {0L, 0L, 0L, 1L}}, {{0L, 0L, 0L, 0x16154EA9L}, {0L, 1L, 0x16154EA9L, 0x16154EA9L}, {0x3A63A677L, 0x3A63A677L, 0L, 1L}, {1L, 0L, 0L, 0L}, {0x3A63A677L, 1L, 0x16154EA9L, 0L}}, {{0L, 1L, 1L, 0L}, {1L, 0L, 0x3A63A677L, 1L}, {1L, 0x3A63A677L, 1L, 0x16154EA9L}, {0L, 1L, 0x16154EA9L, 0x16154EA9L}, {0x3A63A677L, 0x3A63A677L, 0L, 1L}}};
        -:   27:static int32_t g_88 = 0xC74F2DDDL;
        -:   28:static volatile int32_t g_95 = 6L;
        -:   29:static int32_t *volatile g_99 = &g_31;
        -:   30:static int32_t *g_105 = &g_33;
        -:   31:static int32_t **volatile g_104[2][5] = {{&g_105, &g_105, &g_105, &g_105, &g_105}, {&g_105, &g_105, &g_105, &g_105, &g_105}};
        -:   32:static int32_t **volatile g_106 = &g_105;
        -:   33:
        -:   34:static uint64_t func_1(void);
        -:   35:static const uint8_t func_6(int16_t p_7, uint16_t p_8, int64_t p_9, const int64_t p_10);
        -:   36:
        1:   37:static uint64_t func_1(void) {
        1:   38:  int32_t l_3 = 1L;
        1:   39:  uint32_t l_93 = 0xB09764F7L;
        1:   40:  if (g_2) {
        1:   41:    union U0 l_24 = {0x5A9CEA44L};
        1:   42:    int8_t *l_25 = &g_26[0][4];
        1:   43:    int16_t *l_27 = &l_24.f3;
        1:   44:    int32_t l_94 = 0xF54FDF18L;
        1:   45:    int32_t *l_96 = &g_86[0][4][0];
       1*:   46:    (*l_96) = ((((0x40FC0272L && ((((((g_2 < l_3) != (safe_rshift_func_uint64_t_u_u(0UL, (((func_6(((*l_27) = (safe_rshift_func_int64_t_s_u(l_3, (safe_add_func_uint32_t_u_u(((safe_lshift_func_uint8_t_u_s((safe_mul_func_uint8_t_u_u(g_2, ((*l_25) &= (safe_sub_func_int32_t_s_s(g_2, (4294967287UL & ((safe_div_func_int32_t_s_s((!(l_24, 0xCCEDL)), g_2)) & g_2))))))), 5)) || g_2), g_2))))), g_2, g_2, g_2) && 1L) ^ l_3), l_93)))) ^ 0UL) == g_2) & l_94) && l_93)), g_95) | l_93) || g_50[0][4]);
        -:   47:  } else {
    #####:   48:  lbl_107:
    #####:   49:    for (g_2 = 14; (g_2 >= 16); g_2 = safe_add_func_int16_t_s_s(g_2, 7)) {
    #####:   50:      (*g_99) = (&g_56[0][0] == (void *)0);
        -:   51:    }
    #####:   52:    for (l_93 = 0; (l_93 == 1); ++l_93) {
    #####:   53:      for (l_3 = (-25); (l_3 == 7); l_3 = safe_add_func_uint32_t_u_u(l_3, 2)) {
    #####:   54:        (*g_106) = &g_86[0][4][0];
        -:   55:      }
    #####:   56:      for (g_31 = 0; (g_31 <= 2); g_31 += 1) {
    #####:   57:        if (g_88)
    #####:   58:          goto lbl_107;
        -:   59:      }
        -:   60:    }
        -:   61:  }
        1:   62:  return g_26[0][4];
        -:   63:}
        -:   64:
        1:   65:static const uint8_t func_6(int16_t p_7, uint16_t p_8, int64_t p_9, const int64_t p_10) {
        1:   66:  int32_t *l_37 = &g_31;
        1:   67:  union U0 *l_41 = &g_40[0][4];
        1:   68:  int32_t l_46 = 0x4462D17FL;
        1:   69:  uint32_t *l_47 = &g_48;
        1:   70:  uint32_t *l_49 = &g_50[1][0];
        1:   71:  uint8_t *l_51[5] = {&g_52, &g_52, &g_52, &g_52, &g_52};
        -:   72:  int32_t l_83[1][1];
        1:   73:  uint8_t l_90 = 247UL;
        -:   74:  int i, j;
        2:   75:  for (i = 0; i < 1; i++) {
        2:   76:    for (j = 0; j < 1; j++)
        1:   77:      l_83[i][j] = 0xF93B9B47L;
        -:   78:  }
       1*:   79:  for (p_8 = 0; (p_8 >= 39); p_8 = safe_add_func_uint64_t_u_u(p_8, 2)) {
    #####:   80:    int32_t *l_30 = &g_31;
    #####:   81:    (*l_30) = 0xE072305AL;
    #####:   82:    (*g_32) |= ((p_7 |= (g_2, p_10)), g_31);
        -:   83:  }
        -:   84:  if ((((0x02L || (l_46 = ((~(p_8, ((safe_lshift_func_uint32_t_u_u(((((4L <= ((*l_49) = ((*l_47) = (((((((((void *)0 != l_37) | (p_9 <= (((safe_lshift_func_int32_t_s_s((((*l_41) = g_40[0][4]), ((*l_37) = 0L)), 1)) > (safe_rshift_func_int16_t_s_u((safe_sub_func_uint8_t_u_u(0x56L, g_26[0][4])), 7))) > p_10))) | g_2) & g_33) < 0x61E9426CEFC6E20BLL) >= l_46) != g_26[0][4]) | p_8)))) != 0x85DD727AL), 0x564FCBDFAC86E89BLL) > g_26[0][1]), 10)) >= g_26[0][3]))), g_26[0][4]))) > 0x8EL) & g_52)) {
        -:   85:    uint64_t l_70 = 0x6D0A58DE384C7D0ELL;
        -:   86:    const int8_t *l_76 = &g_26[0][3];
        -:   87:    int64_t *l_78[1][4];
        -:   88:    int8_t *l_80 = &g_26[0][4];
        -:   89:    int32_t l_81 = 1L;
        -:   90:    int32_t *l_82 = &l_46;
        -:   91:    int32_t *l_84 = (void *)0;
        -:   92:    int32_t *l_85 = &g_86[0][4][0];
        -:   93:    int32_t *l_87[2];
        -:   94:    int i, j;
        -:   95:    for (i = 0; i < 1; i++) {
        -:   96:      for (j = 0; j < 4; j++)
        -:   97:        l_78[i][j] = &g_79;
        -:   98:    }
        -:   99:    for (i = 0; i < 2; i++)
        -:  100:      l_87[i] = &g_88;
        -:  101:    g_88 ^= (safe_rshift_func_int32_t_s_u((((*l_85) &= ((((g_55[0] != &g_56[0][0]) | ((safe_sub_func_int64_t_s_s(8L, (safe_mul_func_int8_t_s_s(((((*l_82) = ((safe_lshift_func_uint8_t_u_u(p_8, (l_81 |= (safe_add_func_uint32_t_u_u((((safe_add_func_int16_t_s_s((safe_mul_func_int16_t_s_s(((((safe_unary_minus_func_int64_t_s(l_70)) > p_10) && ((safe_sub_func_uint16_t_u_u(((0L & (p_9 = ((g_52 = ((*l_37) ^= (~(safe_mul_func_int64_t_s_s((l_76 != (g_77 = l_51[2])), g_50[1][0]))))) < l_70))) < 0x175E042358CEDF6ELL), l_46)), g_50[1][0])), 1L), 0x2682L)), l_46)), &g_26[0][1]) == l_80), p_8))))), (-1L))) ^ g_33), 0x29L), p_8)))) || 0x403636CDL)) > l_83[0][0]) > 0L)) > 2L), 21));
        -:  102:  } else {
        1:  103:    int32_t *l_89 = &g_31;
        1:  104:    ++l_90;
        -:  105:  }
        1:  106:  return p_9;
        -:  107:}
        -:  108:
        1:  109:int main(int argc, char *argv[]) {
        -:  110:  int i, j, k;
        1:  111:  int print_hash_value = 0;
       1*:  112:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  113:    print_hash_value = 1;
        1:  114:  platform_main_begin();
        1:  115:  crc32_gentab();
        1:  116:  func_1();
        1:  117:  transparent_crc(g_2, "g_2", print_hash_value);
        2:  118:  for (i = 0; i < 1; i++) {
        6:  119:    for (j = 0; j < 5; j++) {
        5:  120:      transparent_crc(g_26[i][j], "g_26[i][j]", print_hash_value);
        5:  121:      if (print_hash_value)
    #####:  122:        printf("index = [%d][%d]\n", i, j);
        -:  123:    }
        -:  124:  }
        1:  125:  transparent_crc(g_31, "g_31", print_hash_value);
        1:  126:  transparent_crc(g_33, "g_33", print_hash_value);
        2:  127:  for (i = 0; i < 1; i++) {
        6:  128:    for (j = 0; j < 5; j++) {
        5:  129:      transparent_crc(g_40[i][j].f0, "g_40[i][j].f0", print_hash_value);
        5:  130:      if (print_hash_value)
    #####:  131:        printf("index = [%d][%d]\n", i, j);
        -:  132:    }
        -:  133:  }
        1:  134:  transparent_crc(g_48, "g_48", print_hash_value);
        3:  135:  for (i = 0; i < 2; i++) {
       12:  136:    for (j = 0; j < 5; j++) {
       10:  137:      transparent_crc(g_50[i][j], "g_50[i][j]", print_hash_value);
       10:  138:      if (print_hash_value)
    #####:  139:        printf("index = [%d][%d]\n", i, j);
        -:  140:    }
        -:  141:  }
        1:  142:  transparent_crc(g_52, "g_52", print_hash_value);
        2:  143:  for (i = 0; i < 1; i++) {
        2:  144:    for (j = 0; j < 1; j++) {
        1:  145:      transparent_crc(g_56[i][j], "g_56[i][j]", print_hash_value);
        1:  146:      if (print_hash_value)
    #####:  147:        printf("index = [%d][%d]\n", i, j);
        -:  148:    }
        -:  149:  }
        1:  150:  transparent_crc(g_79, "g_79", print_hash_value);
        4:  151:  for (i = 0; i < 3; i++) {
       18:  152:    for (j = 0; j < 5; j++) {
       75:  153:      for (k = 0; k < 4; k++) {
       60:  154:        transparent_crc(g_86[i][j][k], "g_86[i][j][k]", print_hash_value);
       60:  155:        if (print_hash_value)
    #####:  156:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  157:      }
        -:  158:    }
        -:  159:  }
        1:  160:  transparent_crc(g_88, "g_88", print_hash_value);
        1:  161:  transparent_crc(g_95, "g_95", print_hash_value);
        1:  162:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  163:  return 0;
        -:  164:}

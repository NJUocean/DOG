        -:    0:Source:770.c
        -:    0:Graph:770.gcno
        -:    0:Data:770.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  uint8_t f0;
        -:   10:};
        -:   11:#pragma pack(pop)
        -:   12:
        -:   13:#pragma pack(push)
        -:   14:#pragma pack(1)
        -:   15:struct S1 {
        -:   16:  uint32_t f0;
        -:   17:  volatile uint32_t f1;
        -:   18:  uint64_t f2;
        -:   19:  struct S0 f3;
        -:   20:  uint32_t f4;
        -:   21:};
        -:   22:#pragma pack(pop)
        -:   23:
        -:   24:static struct S1 g_8 = {7UL, 4294967293UL, 0xB13281D21F1EB32ALL, {0x31L}, 1UL};
        -:   25:static uint32_t g_20 = 4294967286UL;
        -:   26:static int64_t g_23 = 0xAE3D4752E4A6B2C4LL;
        -:   27:static int64_t g_25 = 9L;
        -:   28:static uint64_t g_28 = 0xF1FA6F63EEDA781BLL;
        -:   29:static volatile struct S1 g_35[2] = {{18446744073709551615UL, 0x7FB108F9L, 18446744073709551611UL, {0UL}, 1UL}, {18446744073709551615UL, 0x7FB108F9L, 18446744073709551611UL, {0UL}, 1UL}};
        -:   30:static int64_t *g_38 = &g_25;
        -:   31:static int32_t g_42 = (-1L);
        -:   32:static volatile struct S1 *volatile g_46[3] = {&g_35[0], &g_35[0], &g_35[0]};
        -:   33:static volatile struct S1 *volatile g_47[2] = {&g_35[0], &g_35[0]};
        -:   34:static volatile struct S1 *const volatile g_48 = &g_35[0];
        -:   35:static int32_t *g_58 = (void *)0;
        -:   36:static volatile uint16_t g_123[2][4] = {{9UL, 0xAA8EL, 9UL, 0xAA8EL}, {9UL, 0xAA8EL, 9UL, 0xAA8EL}};
        -:   37:static int32_t *volatile g_127[2][4][4] = {{{&g_42, &g_42, &g_42, &g_42}, {&g_42, &g_42, &g_42, &g_42}, {&g_42, &g_42, &g_42, &g_42}, {&g_42, &g_42, &g_42, &g_42}}, {{&g_42, &g_42, &g_42, &g_42}, {&g_42, &g_42, &g_42, &g_42}, {&g_42, &g_42, &g_42, &g_42}, {&g_42, &g_42, &g_42, &g_42}}};
        -:   38:static int32_t *const volatile g_128 = &g_42;
        -:   39:
        -:   40:static int32_t func_1(void);
        -:   41:static uint16_t func_2(uint16_t p_3);
        -:   42:
        1:   43:static int32_t func_1(void) {
        1:   44:  int8_t l_9 = (-5L);
        1:   45:  int32_t *l_15 = (void *)0;
        1:   46:  int32_t l_16 = 1L;
        1:   47:  uint16_t l_19 = 0x2E80L;
        1:   48:  int64_t *l_21 = (void *)0;
        1:   49:  int64_t *l_22 = &g_23;
        1:   50:  int64_t *l_24 = &g_25;
        1:   51:  uint16_t *l_26 = (void *)0;
        1:   52:  uint16_t *l_27 = (void *)0;
        1:   53:  struct S0 l_54 = {0x55L};
        1:   54:  int32_t l_131[4] = {0x3CEA4A79L, 0x3CEA4A79L, 0x3CEA4A79L, 0x3CEA4A79L};
        1:   55:  int16_t l_134 = 1L;
        -:   56:  int i;
       1*:   57:  if ((func_2((safe_div_func_uint32_t_u_u((safe_lshift_func_int32_t_s_u((((g_8, (g_28 = (0UL < (((l_9 > ((safe_sub_func_int64_t_s_s(((*l_24) = ((*l_22) = (safe_sub_func_uint16_t_u_u(((safe_unary_minus_func_uint8_t_u(g_8.f2)) || (((l_16 ^= g_8.f3.f0), (g_20 = ((g_8.f0, (l_19 > 0x4AF7BDD48407374FLL)) <= (g_8.f3.f0 < g_8.f4)))) ^ g_8.f2)), 8L)))), g_8.f4)) > l_9)) || g_23) >= l_9)))) > l_9), l_9), 23)), l_19))), g_35[0].f2)) {
       1*:   58:    for (g_28 = 4; (g_28 >= 45); g_28++) {
    #####:   59:      (*g_48) = g_35[1];
        -:   60:    }
        -:   61:  } else {
    #####:   62:    int32_t l_57 = (-4L);
    #####:   63:    int64_t *l_79 = &g_25;
    #####:   64:    uint16_t *const l_85[3] = {&l_19, &l_19, &l_19};
    #####:   65:    struct S1 *l_121 = (void *)0;
    #####:   66:    int8_t l_122[4] = {9L, 9L, 9L, 9L};
        -:   67:    int16_t l_124[2][5];
    #####:   68:    int32_t l_126 = 0xCAB2B09BL;
    #####:   69:    int32_t *l_129[3][1][4] = {{{&l_16, &l_16, (void *)0, &l_16}}, {{&l_16, &g_42, &g_42, &l_16}}, {{&g_42, &l_16, &g_42, &g_42}}};
    #####:   70:    int32_t l_130 = 0x804E31C6L;
    #####:   71:    int64_t l_132 = 0xC2B1C82E662C939DLL;
    #####:   72:    int32_t l_133 = 0x13BD706AL;
    #####:   73:    int64_t l_135 = (-1L);
        -:   74:    uint64_t l_136[3];
        -:   75:    int i, j, k;
    #####:   76:    for (i = 0; i < 2; i++) {
    #####:   77:      for (j = 0; j < 5; j++)
    #####:   78:        l_124[i][j] = (-1L);
        -:   79:    }
    #####:   80:    for (i = 0; i < 3; i++)
    #####:   81:      l_136[i] = 7UL;
    #####:   82:    if ((2UL > ((safe_rshift_func_int16_t_s_u((safe_unary_minus_func_uint32_t_u((safe_add_func_int64_t_s_s((l_54, ((safe_mod_func_uint8_t_u_u(247UL, g_35[0].f3.f0)), l_57)), l_57)))), 4)), (g_42 == (l_54.f0, l_57))))) {
    #####:   83:      uint8_t l_78 = 0x3FL;
    #####:   84:      int64_t **l_80 = &l_79;
    #####:   85:      uint16_t *l_86 = &l_19;
    #####:   86:      int32_t l_87[1][3][4] = {{{0x74122609L, 0x74122609L, 0xE6D0914BL, 0x74122609L}, {0x74122609L, (-4L), (-4L), 0x74122609L}, {(-4L), 0x74122609L, (-4L), (-4L)}}};
    #####:   87:      uint8_t *l_88 = &l_54.f0;
    #####:   88:      uint8_t l_89 = 0x61L;
    #####:   89:      uint32_t *l_90 = &g_20;
        -:   90:      int i, j, k;
    #####:   91:      g_58 = &g_42;
    #####:   92:      (*g_58) &= (safe_sub_func_uint16_t_u_u((safe_rshift_func_int32_t_s_u((safe_add_func_uint32_t_u_u(((g_20, (safe_lshift_func_int8_t_s_s(g_8.f1, (safe_div_func_uint8_t_u_u((safe_mod_func_int32_t_s_s((safe_mul_func_uint16_t_u_u(l_57, (~((safe_lshift_func_int64_t_s_s((l_57 ^ ((*l_90) = (safe_mul_func_uint8_t_u_u(((l_78 &= g_8.f3.f0) != ((((*l_80) = l_79) == l_22) | (safe_rshift_func_int32_t_s_u(((((*l_88) = (safe_rshift_func_uint32_t_u_u((((l_57, l_85[1]) == l_86) >= 0x107178D33F623BA0LL), l_87[0][2][0]))), g_8.f4), 0xF13354A9L), l_89)))), l_87[0][1][3])))), l_9)) != l_57)))), l_89)), l_87[0][2][0]))))) < g_8.f3.f0), 6UL)), l_87[0][2][0])), g_23));
        -:   93:    } else {
        -:   94:      uint8_t *l_104 = &l_54.f0;
        -:   95:      int32_t l_109 = (-6L);
        -:   96:      uint32_t *l_125 = &g_20;
        -:   97:            if ((safe_rshift_func_uint64_t_u_u(((g_42 = (((*l_125) = (((safe_div_func_int64_t_s_s(((safe_mod_func_uint8_t_u_u((((((safe_rshift_func_uint64_t_u_u((safe_rshift_func_uint32_t_u_s(((l_16 = (~((safe_div_func_uint64_t_u_u((((--(*l_104)) > (l_16 && (l_57 >= (l_57 < (safe_lshift_func_uint32_t_u_u((((l_109 ^ (safe_mul_func_int64_t_s_s(((+(g_35[0].f3 , (safe_mul_func_uint32_t_u_u(g_8.f2, (((((safe_rshift_func_uint8_t_u_u((g_28 & (safe_add_func_uint16_t_u_u((safe_sub_func_uint16_t_u_u((((*l_24) = (((g_28 <= (l_121 == (void*)0)) && l_122[1]) & l_109)) < l_16), g_123[1][0])), g_8.f2))), 2)) ^ l_122[1]) > 0x7BL) , 0xA1ECL) > g_23))))) < g_8.f2), 18446744073709551615UL))) & g_28) | l_109), 4)))))) , g_35[0].f1), g_28)) | g_8.f0))) | 0xF1F1L), 19)), l_124[1][1])) == l_57) | g_8.f3.f0) ^ g_28) <= l_19), l_19)) > 0xFB93L), g_42)) || g_35[0].f1) < g_8.f3.f0)) == 0x116371A0L)) ^ l_124[0][1]), l_19)))
        -:   98:            {
        -:   99:              return l_126;
        -:  100:            } else {
        -:  101:              (*g_128) = l_57;
        -:  102:            }
        -:  103:    }
    #####:  104:    --l_136[0];
        -:  105:  }
        1:  106:  return (*g_128);
        -:  107:}
        -:  108:
        1:  109:static uint16_t func_2(uint16_t p_3) {
        1:  110:  const int64_t l_33 = 2L;
        1:  111:  struct S0 l_34 = {255UL};
        1:  112:  int64_t *l_36 = &g_25;
        1:  113:  int64_t **l_37 = &l_36;
        1:  114:  int64_t *l_39 = &g_23;
        1:  115:  int32_t l_40 = 0L;
        1:  116:  int32_t *l_41 = &g_42;
        1:  117:  int32_t **l_43 = &l_41;
       1*:  118:  (*l_41) ^= (((((safe_div_func_uint64_t_u_u(0UL, (safe_sub_func_int64_t_s_s((l_40 = ((*l_39) ^= ((g_38 = (((l_33 && ((l_33 || p_3) | ((((l_34, &p_3) == &p_3), g_35[0]), ((((*l_37) = l_36) == &g_23) >= p_3)))), l_34.f0), (void *)0)) != &g_23))), p_3)))), g_35[0].f1) <= p_3), 0L) > 0x5BBD97C2L);
        1:  119:  (*l_43) = (void *)0;
        1:  120:  return g_35[0].f3.f0;
        -:  121:}
        -:  122:
        1:  123:int main(int argc, char *argv[]) {
        -:  124:  int i, j, k;
        1:  125:  int print_hash_value = 0;
       1*:  126:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  127:    print_hash_value = 1;
        1:  128:  platform_main_begin();
        1:  129:  crc32_gentab();
        1:  130:  func_1();
        1:  131:  transparent_crc(g_8.f0, "g_8.f0", print_hash_value);
        1:  132:  transparent_crc(g_8.f1, "g_8.f1", print_hash_value);
        1:  133:  transparent_crc(g_8.f2, "g_8.f2", print_hash_value);
        1:  134:  transparent_crc(g_8.f3.f0, "g_8.f3.f0", print_hash_value);
        1:  135:  transparent_crc(g_8.f4, "g_8.f4", print_hash_value);
        1:  136:  transparent_crc(g_20, "g_20", print_hash_value);
        1:  137:  transparent_crc(g_23, "g_23", print_hash_value);
        1:  138:  transparent_crc(g_25, "g_25", print_hash_value);
        1:  139:  transparent_crc(g_28, "g_28", print_hash_value);
        3:  140:  for (i = 0; i < 2; i++) {
        2:  141:    transparent_crc(g_35[i].f0, "g_35[i].f0", print_hash_value);
        2:  142:    transparent_crc(g_35[i].f1, "g_35[i].f1", print_hash_value);
        2:  143:    transparent_crc(g_35[i].f2, "g_35[i].f2", print_hash_value);
        2:  144:    transparent_crc(g_35[i].f3.f0, "g_35[i].f3.f0", print_hash_value);
        2:  145:    transparent_crc(g_35[i].f4, "g_35[i].f4", print_hash_value);
        2:  146:    if (print_hash_value)
    #####:  147:      printf("index = [%d]\n", i);
        -:  148:  }
        1:  149:  transparent_crc(g_42, "g_42", print_hash_value);
        3:  150:  for (i = 0; i < 2; i++) {
       10:  151:    for (j = 0; j < 4; j++) {
        8:  152:      transparent_crc(g_123[i][j], "g_123[i][j]", print_hash_value);
        8:  153:      if (print_hash_value)
    #####:  154:        printf("index = [%d][%d]\n", i, j);
        -:  155:    }
        -:  156:  }
        1:  157:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  158:  return 0;
        -:  159:}

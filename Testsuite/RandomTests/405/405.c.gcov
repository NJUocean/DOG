        -:    0:Source:405.c
        -:    0:Graph:405.gcno
        -:    0:Data:405.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  signed f0 : 4;
        -:   10:};
        -:   11:#pragma pack(pop)
        -:   12:
        -:   13:#pragma pack(push)
        -:   14:#pragma pack(1)
        -:   15:struct S1 {
        -:   16:  uint64_t f0;
        -:   17:  int32_t f1;
        -:   18:  int32_t f2;
        -:   19:  const volatile uint64_t f3;
        -:   20:  int64_t f4;
        -:   21:};
        -:   22:#pragma pack(pop)
        -:   23:
        -:   24:struct S3 {
        -:   25:  volatile int32_t f0;
        -:   26:};
        -:   27:
        -:   28:static uint16_t g_16 = 65527UL;
        -:   29:static uint16_t *const volatile g_24[1][1][3] = {{{(void *)0, (void *)0, (void *)0}}};
        -:   30:static volatile uint16_t g_26 = 0x5C2CL;
        -:   31:static volatile uint16_t *g_25 = &g_26;
        -:   32:static uint16_t g_31 = 0x3D48L;
        -:   33:static struct S0 g_36[3] = {{-3}, {-3}, {-3}};
        -:   34:static volatile struct S3 g_41 = {0x1D35EE8DL};
        -:   35:static int32_t g_48 = 0x48ADB298L;
        -:   36:static struct S1 g_58[1] = {{0x0F8590C99E8488E6LL, 0xCAC8A331L, 0x083D4BAFL, 18446744073709551610UL, -8L}};
        -:   37:static uint32_t g_60 = 0x856BCC6BL;
        -:   38:
        -:   39:static const uint64_t func_1(void);
        -:   40:static struct S1 func_9(int64_t p_10, int8_t p_11);
        -:   41:
        1:   42:static const uint64_t func_1(void) {
        1:   43:  int32_t l_8[5][3][3] = {{{1L, 0x3718BD85L, 0x270E7AD5L}, {9L, 9L, 0xAD816F93L}, {0x3718BD85L, 1L, 0x270E7AD5L}}, {{1L, 1L, 0xAD816F93L}, {0L, 0L, 0x270E7AD5L}, {1L, 1L, 0xAD816F93L}}, {{1L, 0x3718BD85L, 0x270E7AD5L}, {9L, 9L, 0xAD816F93L}, {0x3718BD85L, 1L, 0x270E7AD5L}}, {{1L, 1L, 0xAD816F93L}, {0L, 0L, 0x270E7AD5L}, {1L, 1L, 0xAD816F93L}}, {{1L, 0x3718BD85L, 0x270E7AD5L}, {9L, 9L, 9L}, {(-1L), 7L, 0L}}};
        1:   44:  struct S0 l_12[5][1] = {{{2}}, {{-3}}, {{2}}, {{-3}}, {{2}}};
        -:   45:  uint16_t *l_15[5];
        1:   46:  int32_t l_17 = 0x31DEFCECL;
        1:   47:  int32_t l_18 = 1L;
        1:   48:  int32_t l_21[1][4] = {{0xB0C7B249L, 0xB0C7B249L, 0xB0C7B249L, 0xB0C7B249L}};
        1:   49:  int64_t l_32 = (-1L);
        1:   50:  int64_t *l_33 = (void *)0;
        1:   51:  uint32_t *l_59[4][5] = {{(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}, {&g_60, &g_60, &g_60, &g_60, &g_60}, {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}, {&g_60, &g_60, &g_60, &g_60, &g_60}};
        -:   52:  int i, j, k;
        6:   53:  for (i = 0; i < 5; i++)
        5:   54:    l_15[i] = &g_16;
       1*:   55:  g_48 |= (safe_mod_func_uint32_t_u_u((g_60 = ((safe_add_func_int8_t_s_s(((safe_rshift_func_int16_t_s_u(l_8[4][1][2], ((((func_9(l_8[4][1][2], (((l_18 = (((l_12[3][0], ((safe_div_func_int8_t_s_s((((--g_16), ((0x579DEB4763523E24LL != (((l_17 > (g_16--)) != ((((((g_24[0][0][2] == g_25) == l_12[3][0].f0) ^ (safe_div_func_int8_t_s_s(((g_31 != 0UL) <= 0x1F7EL), g_31))) && 0x30732BABL) & 0xE480B0DEBF624E19LL) != l_32)) >= g_31)), g_26)), (-1L)), g_31)) <= g_31)) > l_21[0][3]) != 0L)) >= l_8[3][0][2]) <= g_31)), l_18) >= l_32), l_8[0][1][2]) || l_17))), 1L), g_58[0].f1)) >= g_58[0].f4)), g_58[0].f0));
        1:   56:  return g_48;
        -:   57:}
        -:   58:
        1:   59:static struct S1 func_9(int64_t p_10, int8_t p_11) {
        1:   60:  int64_t l_44 = (-10L);
        1:   61:  int32_t l_54 = 0x2D2C906CL;
       1*:   62:  for (p_11 = (-11); (p_11 > (-10)); ++p_11) {
    #####:   63:    uint64_t l_55 = 1UL;
    #####:   64:    for (g_31 = 0; (g_31 <= 2); g_31 += 1) {
    #####:   65:      int64_t *l_45 = &l_44;
    #####:   66:      if ((((safe_add_func_int8_t_s_s(g_16, (0x31B5L < (((g_26 | 0xA6F2L) || ((*l_45) = ((safe_lshift_func_int16_t_s_u(p_10, 8)) > ((g_41, 8L) && (((0x59E8L < (safe_rshift_func_int64_t_s_s(g_26, g_31))) ^ 0UL) > l_44))))) != 0L)))) & g_31) <= 0xD740F48BL)) {
    #####:   67:        uint32_t l_46 = 0UL;
    #####:   68:        if (l_46)
    #####:   69:          break;
        -:   70:      } else {
        -:   71:        int32_t *l_47 = &g_48;
        -:   72:        int32_t *l_49 = &g_48;
        -:   73:        int32_t *l_50 = &g_48;
        -:   74:        int32_t *l_51 = &g_48;
        -:   75:        int32_t *l_52 = &g_48;
        -:   76:        int32_t *l_53[2][5] = {{&g_48, &g_48, &g_48, &g_48, &g_48}, {&g_48, &g_48, &g_48, &g_48, &g_48}};
        -:   77:        int i, j;
        -:   78:        --l_55;
        -:   79:      }
        -:   80:    }
        -:   81:  }
        1:   82:  return g_58[0];
        -:   83:}
        -:   84:
        1:   85:int main(int argc, char *argv[]) {
        -:   86:  int i, j, k;
        1:   87:  int print_hash_value = 0;
       1*:   88:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   89:    print_hash_value = 1;
        1:   90:  platform_main_begin();
        1:   91:  crc32_gentab();
        1:   92:  func_1();
        1:   93:  transparent_crc(g_16, "g_16", print_hash_value);
        1:   94:  transparent_crc(g_26, "g_26", print_hash_value);
        1:   95:  transparent_crc(g_31, "g_31", print_hash_value);
        4:   96:  for (i = 0; i < 3; i++) {
        3:   97:    transparent_crc(g_36[i].f0, "g_36[i].f0", print_hash_value);
        3:   98:    if (print_hash_value)
    #####:   99:      printf("index = [%d]\n", i);
        -:  100:  }
        1:  101:  transparent_crc(g_41.f0, "g_41.f0", print_hash_value);
        1:  102:  transparent_crc(g_48, "g_48", print_hash_value);
        2:  103:  for (i = 0; i < 1; i++) {
        1:  104:    transparent_crc(g_58[i].f0, "g_58[i].f0", print_hash_value);
        1:  105:    transparent_crc(g_58[i].f1, "g_58[i].f1", print_hash_value);
        1:  106:    transparent_crc(g_58[i].f2, "g_58[i].f2", print_hash_value);
        1:  107:    transparent_crc(g_58[i].f3, "g_58[i].f3", print_hash_value);
        1:  108:    transparent_crc(g_58[i].f4, "g_58[i].f4", print_hash_value);
        1:  109:    if (print_hash_value)
    #####:  110:      printf("index = [%d]\n", i);
        -:  111:  }
        1:  112:  transparent_crc(g_60, "g_60", print_hash_value);
        1:  113:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  114:  return 0;
        -:  115:}

        -:    0:Source:878.c
        -:    0:Graph:878.gcno
        -:    0:Data:878.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  uint8_t f0;
        -:   10:};
        -:   11:#pragma pack(pop)
        -:   12:
        -:   13:#pragma pack(push)
        -:   14:#pragma pack(1)
        -:   15:struct S1 {
        -:   16:  const signed f0 : 4;
        -:   17:};
        -:   18:#pragma pack(pop)
        -:   19:
        -:   20:struct S3 {
        -:   21:  signed f0 : 28;
        -:   22:  unsigned f1 : 9;
        -:   23:  const volatile unsigned f2 : 16;
        -:   24:  signed f3 : 28;
        -:   25:};
        -:   26:
        -:   27:static int32_t g_2 = 0xB9876427L;
        -:   28:static int32_t g_5 = (-3L);
        -:   29:static volatile struct S3 g_15[4][2] = {{{-14306, 6, 233, 3726}, {-14306, 6, 233, 3726}}, {{-14306, 6, 233, 3726}, {-14306, 6, 233, 3726}}, {{-14306, 6, 233, 3726}, {-14306, 6, 233, 3726}}, {{-14306, 6, 233, 3726}, {-14306, 6, 233, 3726}}};
        -:   30:static uint32_t g_25 = 4294967293UL;
        -:   31:static uint32_t g_28 = 6UL;
        -:   32:static uint32_t *g_27 = &g_28;
        -:   33:static int32_t g_33 = 0L;
        -:   34:static struct S1 g_45 = {-3};
        -:   35:static int32_t g_47 = 0x4D97F668L;
        -:   36:static int64_t g_48[5][5] = {{0xB8FBA323A35E06C0LL, 0xAC691C6C8ECDCC21LL, 0xAC691C6C8ECDCC21LL, 0xB8FBA323A35E06C0LL, 0xAC691C6C8ECDCC21LL}, {(-2L), (-2L), 5L, (-2L), (-2L)}, {0xAC691C6C8ECDCC21LL, 0xB8FBA323A35E06C0LL, 0xAC691C6C8ECDCC21LL, 0xAC691C6C8ECDCC21LL, 0xB8FBA323A35E06C0LL}, {(-2L), 0x9E95372A7181CA8FLL, 0x9E95372A7181CA8FLL, (-2L), 0x9E95372A7181CA8FLL}, {0xB8FBA323A35E06C0LL, 0xB8FBA323A35E06C0LL, 0x1A504A86D6A6C343LL, 0xB8FBA323A35E06C0LL, 0xB8FBA323A35E06C0LL}};
        -:   37:static uint16_t g_58[5][1][2] = {{{0x9717L, 0x934BL}}, {{1UL, 0x934BL}}, {{0x9717L, 1UL}}, {{65535UL, 65535UL}}, {{65535UL, 1UL}}};
        -:   38:static volatile uint32_t g_93 = 0x5A4F9042L;
        -:   39:static uint64_t g_97 = 0x13C549E5CE90A869LL;
        -:   40:static uint64_t g_103 = 0x035E89B0255DAF8ELL;
        -:   41:static const struct S0 g_111[4] = {{0x0CL}, {0x0CL}, {0x0CL}, {0x0CL}};
        -:   42:static uint64_t g_115[5][1] = {{0x391174088AFD6114LL}, {0x391174088AFD6114LL}, {0x391174088AFD6114LL}, {0x391174088AFD6114LL}, {0x391174088AFD6114LL}};
        -:   43:static uint64_t g_117[5][3] = {{0xC5516B95FC1DD83CLL, 0xC5516B95FC1DD83CLL, 3UL}, {0xC5516B95FC1DD83CLL, 0xC5516B95FC1DD83CLL, 3UL}, {0xC5516B95FC1DD83CLL, 0xC5516B95FC1DD83CLL, 3UL}, {0xC5516B95FC1DD83CLL, 0xC5516B95FC1DD83CLL, 3UL}, {0xC5516B95FC1DD83CLL, 0xC5516B95FC1DD83CLL, 3UL}};
        -:   44:
        -:   45:static const int32_t func_1(void);
        -:   46:static struct S1 func_8(uint8_t p_9, int32_t p_10, uint64_t p_11, uint16_t p_12, struct S1 p_13);
        -:   47:
        1:   48:static const int32_t func_1(void) {
        1:   49:  int8_t l_23 = 0x94L;
        -:   50:  uint16_t *l_57[3];
        1:   51:  int32_t l_61 = 0L;
        1:   52:  const uint32_t l_62 = 0UL;
        1:   53:  int32_t l_77 = 0x8B9DDA26L;
        1:   54:  int32_t l_90 = 0x786FE95BL;
        1:   55:  int32_t l_91 = 2L;
        1:   56:  uint32_t *l_106[4] = {&g_25, &g_25, &g_25, &g_25};
        1:   57:  uint32_t *l_110 = &g_28;
        1:   58:  int8_t l_118 = 0xC6L;
        -:   59:  int i;
        4:   60:  for (i = 0; i < 3; i++)
        3:   61:    l_57[i] = &g_58[0][0][0];
       1*:   62:  for (g_2 = (-2); (g_2 < (-19)); g_2--) {
    #####:   63:    int32_t l_26 = 0xE1B8D813L;
    #####:   64:    int32_t l_30 = 0x2796A450L;
    #####:   65:    struct S1 l_31 = {-1};
    #####:   66:    for (g_5 = 0; (g_5 != 12); g_5 = safe_add_func_int64_t_s_s(g_5, 4)) {
    #####:   67:      int32_t l_20 = (-4L);
    #####:   68:      uint32_t *l_24 = &g_25;
    #####:   69:      uint32_t **l_29 = &g_27;
    #####:   70:      int32_t *l_46 = &g_47;
    #####:   71:      g_48[4][0] ^= ((*l_46) &= (func_8(((~(g_15[3][0], (safe_mul_func_uint16_t_u_u(((safe_lshift_func_int32_t_s_s((l_20 && (safe_mod_func_int64_t_s_s((l_23 >= ((*l_24) &= g_15[3][0].f0)), (((void *)0 == l_24) || ((l_26 ^= g_5) == (((*l_29) = g_27) == (void *)0)))))), l_30)) < g_5), l_20)))) | (-1L)), g_28, l_23, g_28, l_31), g_33));
        -:   72:    }
        -:   73:  }
        1:   74:  if (((safe_mul_func_uint32_t_u_u(((l_23 & ((l_61 = (l_23, ((safe_lshift_func_uint16_t_u_s((g_58[0][0][0] = (safe_add_func_int8_t_s_s((l_23, g_15[3][0].f3), (safe_mul_func_uint8_t_u_u(g_2, 0xA4L))))), 11)) == (0x32E7A53CC61BBCB5LL && (((safe_rshift_func_uint16_t_u_u(g_48[4][0], 2)) & l_23) | g_47))))) ^ l_62)) >= 0xD024L), l_23)) < l_23)) {
        1:   75:    int32_t *l_63 = (void *)0;
        1:   76:    int32_t *l_64 = &l_61;
        1:   77:    int32_t *l_65 = &g_5;
        1:   78:    int32_t l_66 = (-2L);
        1:   79:    int32_t *l_67 = &l_61;
        1:   80:    int32_t *l_68 = &g_33;
        1:   81:    int32_t *l_69 = &g_5;
        1:   82:    int32_t *l_70 = &l_66;
        1:   83:    int32_t *l_71 = &g_5;
        1:   84:    int32_t *l_72 = &g_33;
        1:   85:    int32_t *l_73 = &g_47;
        1:   86:    int32_t *l_74 = &g_2;
        1:   87:    int32_t l_75[1][4][4] = {{{0xEE48480AL, (-1L), (-1L), 0xEE48480AL}, {(-1L), 0xEE48480AL, (-1L), (-1L)}, {0xEE48480AL, 0xEE48480AL, 6L, 0xEE48480AL}, {0xEE48480AL, (-1L), (-1L), 0xEE48480AL}}};
        1:   88:    int32_t *l_76 = &g_47;
        1:   89:    int32_t *l_78 = &g_33;
        1:   90:    int32_t *l_79 = &l_61;
        1:   91:    int32_t *l_80 = &g_5;
        1:   92:    int32_t *l_81 = &l_66;
        1:   93:    int32_t *l_82 = &l_66;
        1:   94:    int32_t *l_83 = &g_33;
        1:   95:    int32_t *l_84 = &l_61;
        1:   96:    int32_t *l_85 = &g_47;
        1:   97:    int32_t *l_86 = &g_33;
        1:   98:    int32_t *l_87 = &g_47;
        1:   99:    int32_t *l_88 = (void *)0;
        -:  100:    int32_t *l_89[4][1][5];
        -:  101:    int16_t l_92[2];
        -:  102:    int i, j, k;
        5:  103:    for (i = 0; i < 4; i++) {
        8:  104:      for (j = 0; j < 1; j++) {
       24:  105:        for (k = 0; k < 5; k++)
       20:  106:          l_89[i][j][k] = &l_77;
        -:  107:      }
        -:  108:    }
        3:  109:    for (i = 0; i < 2; i++)
        2:  110:      l_92[i] = 8L;
        1:  111:    ++g_93;
        -:  112:  } else {
    #####:  113:    uint64_t *l_96 = &g_97;
    #####:  114:    int32_t l_101 = 0x5C46AF0FL;
    #####:  115:    uint64_t *l_102 = &g_103;
    #####:  116:    uint32_t *l_107 = (void *)0;
    #####:  117:    uint32_t **l_108 = &l_106[1];
    #####:  118:    uint32_t **l_109 = &l_107;
    #####:  119:    int32_t *l_113 = &l_90;
    #####:  120:    int32_t **l_112 = &l_113;
    #####:  121:    uint64_t *l_114 = &g_115[4][0];
    #####:  122:    uint64_t *l_116 = &g_117[1][2];
    #####:  123:    int32_t *l_119 = (void *)0;
    #####:  124:    g_33 |= (((--(*l_96)) & (((((*l_116) = (((!(++(*l_102))) > (((l_106[2] == (void *)0) || (g_15[3][0], (g_48[1][1], ((l_110 = ((*l_109) = ((*l_108) = l_107))) == &g_25)))) != ((g_45.f0 == ((*l_114) = (l_101 == (((*l_112) = ((g_111[0], (*g_27)), (void *)0)) == (void *)0)))), g_58[0][0][0]))) == (-3L))) ^ 1L), l_118) ^ g_47)), g_28);
        -:  125:  }
        1:  126:  return g_15[3][0].f3;
        -:  127:}
        -:  128:
    #####:  129:static struct S1 func_8(uint8_t p_9, int32_t p_10, uint64_t p_11, uint16_t p_12, struct S1 p_13) {
    #####:  130:  int32_t *l_32 = &g_33;
    #####:  131:  int32_t *l_34 = &g_33;
    #####:  132:  int32_t *l_35 = &g_33;
    #####:  133:  int32_t *l_36 = &g_33;
    #####:  134:  int32_t *l_37 = &g_33;
    #####:  135:  int32_t *l_38 = &g_33;
    #####:  136:  int32_t l_39 = 0x34BD47CDL;
    #####:  137:  int32_t *l_40 = &l_39;
    #####:  138:  int32_t *l_41[4] = {(void *)0, (void *)0, (void *)0, (void *)0};
    #####:  139:  uint32_t l_42[5] = {0x7FB6F8A3L, 0x7FB6F8A3L, 0x7FB6F8A3L, 0x7FB6F8A3L, 0x7FB6F8A3L};
        -:  140:  int i;
    #####:  141:  l_42[0]++;
    #####:  142:  return g_45;
        -:  143:}
        -:  144:
        1:  145:int main(int argc, char *argv[]) {
        -:  146:  int i, j, k;
        1:  147:  int print_hash_value = 0;
       1*:  148:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  149:    print_hash_value = 1;
        1:  150:  platform_main_begin();
        1:  151:  crc32_gentab();
        1:  152:  func_1();
        1:  153:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  154:  transparent_crc(g_5, "g_5", print_hash_value);
        5:  155:  for (i = 0; i < 4; i++) {
       12:  156:    for (j = 0; j < 2; j++) {
        8:  157:      transparent_crc(g_15[i][j].f0, "g_15[i][j].f0", print_hash_value);
        8:  158:      transparent_crc(g_15[i][j].f1, "g_15[i][j].f1", print_hash_value);
        8:  159:      transparent_crc(g_15[i][j].f2, "g_15[i][j].f2", print_hash_value);
        8:  160:      transparent_crc(g_15[i][j].f3, "g_15[i][j].f3", print_hash_value);
        8:  161:      if (print_hash_value)
    #####:  162:        printf("index = [%d][%d]\n", i, j);
        -:  163:    }
        -:  164:  }
        1:  165:  transparent_crc(g_25, "g_25", print_hash_value);
        1:  166:  transparent_crc(g_28, "g_28", print_hash_value);
        1:  167:  transparent_crc(g_33, "g_33", print_hash_value);
        1:  168:  transparent_crc(g_45.f0, "g_45.f0", print_hash_value);
        1:  169:  transparent_crc(g_47, "g_47", print_hash_value);
        6:  170:  for (i = 0; i < 5; i++) {
       30:  171:    for (j = 0; j < 5; j++) {
       25:  172:      transparent_crc(g_48[i][j], "g_48[i][j]", print_hash_value);
       25:  173:      if (print_hash_value)
    #####:  174:        printf("index = [%d][%d]\n", i, j);
        -:  175:    }
        -:  176:  }
        6:  177:  for (i = 0; i < 5; i++) {
       10:  178:    for (j = 0; j < 1; j++) {
       15:  179:      for (k = 0; k < 2; k++) {
       10:  180:        transparent_crc(g_58[i][j][k], "g_58[i][j][k]", print_hash_value);
       10:  181:        if (print_hash_value)
    #####:  182:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  183:      }
        -:  184:    }
        -:  185:  }
        1:  186:  transparent_crc(g_93, "g_93", print_hash_value);
        1:  187:  transparent_crc(g_97, "g_97", print_hash_value);
        1:  188:  transparent_crc(g_103, "g_103", print_hash_value);
        5:  189:  for (i = 0; i < 4; i++) {
        4:  190:    transparent_crc(g_111[i].f0, "g_111[i].f0", print_hash_value);
        4:  191:    if (print_hash_value)
    #####:  192:      printf("index = [%d]\n", i);
        -:  193:  }
        6:  194:  for (i = 0; i < 5; i++) {
       10:  195:    for (j = 0; j < 1; j++) {
        5:  196:      transparent_crc(g_115[i][j], "g_115[i][j]", print_hash_value);
        5:  197:      if (print_hash_value)
    #####:  198:        printf("index = [%d][%d]\n", i, j);
        -:  199:    }
        -:  200:  }
        6:  201:  for (i = 0; i < 5; i++) {
       20:  202:    for (j = 0; j < 3; j++) {
       15:  203:      transparent_crc(g_117[i][j], "g_117[i][j]", print_hash_value);
       15:  204:      if (print_hash_value)
    #####:  205:        printf("index = [%d][%d]\n", i, j);
        -:  206:    }
        -:  207:  }
        1:  208:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  209:  return 0;
        -:  210:}

        -:    0:Source:768.c
        -:    0:Graph:768.gcno
        -:    0:Data:768.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  uint16_t f0;
        -:   10:  int16_t f1;
        -:   11:  volatile int32_t f2;
        -:   12:};
        -:   13:#pragma pack(pop)
        -:   14:
        -:   15:union U1 {
        -:   16:  const int32_t f0;
        -:   17:  int32_t f1;
        -:   18:  volatile int32_t f2;
        -:   19:};
        -:   20:
        -:   21:static const int8_t g_2 = (-5L);
        -:   22:static int32_t g_4 = 5L;
        -:   23:static const volatile union U1 g_14 = {0x9FCFBCE0L};
        -:   24:static int16_t g_18[4][2] = {{0L, 0L}, {0L, 0L}, {0L, 0L}, {0L, 0L}};
        -:   25:static int16_t g_20 = (-1L);
        -:   26:static const volatile int32_t *volatile g_28[4] = {(void *)0, (void *)0, (void *)0, (void *)0};
        -:   27:static const volatile int32_t *volatile *g_27 = &g_28[2];
        -:   28:static uint8_t g_29 = 0xFCL;
        -:   29:static int32_t g_31 = 0L;
        -:   30:static int32_t *volatile g_30 = &g_31;
        -:   31:static volatile struct S0 g_32 = {0UL, 0x071EL, 0L};
        -:   32:static uint32_t g_37 = 0x0EB60F9AL;
        -:   33:
        -:   34:static int16_t func_1(void);
        -:   35:static int16_t func_10(int32_t *p_11, int32_t p_12, uint64_t p_13);
        -:   36:
        1:   37:static int16_t func_1(void) {
        1:   38:  int32_t *l_3 = &g_4;
        1:   39:  int32_t *l_16 = (void *)0;
        1:   40:  int32_t **l_15 = &l_16;
        1:   41:  int16_t *l_17 = &g_18[2][0];
        1:   42:  int16_t *l_19 = &g_20;
        1:   43:  int64_t l_35 = 0xCE005AB1361131E3LL;
        -:   44:  int32_t l_36[4][4];
        -:   45:  int i, j;
        5:   46:  for (i = 0; i < 4; i++) {
       20:   47:    for (j = 0; j < 4; j++)
       16:   48:      l_36[i][j] = 0x62C80F3BL;
        -:   49:  }
        1:   50:  (*l_3) = g_2;
       1*:   51:  g_37 &= (safe_lshift_func_int32_t_s_s(((safe_add_func_uint32_t_u_u((*l_3), (l_36[0][2] = ((~func_10(l_3, g_4, (g_29 = ((0xA7L < (((*l_19) = ((*l_17) |= (g_14, (((*l_15) = l_3) != &g_4)))) | (safe_rshift_func_int64_t_s_u(((safe_mod_func_uint8_t_u_u((g_4 || (safe_mul_func_int16_t_s_s((((((-3L) || (-7L)), g_27) != &l_3) <= g_2), 0x95DBL))), g_2)), 0xC87778E10A3BDF78LL), 1)))) != g_2)))) | l_35)))) || 0xDEB2L), g_2));
        1:   52:  return (*l_16);
        -:   53:}
        -:   54:
        1:   55:static int16_t func_10(int32_t *p_11, int32_t p_12, uint64_t p_13) {
        1:   56:  volatile struct S0 *l_33 = &g_32;
        1:   57:  int32_t l_34 = 0xE45DB0FFL;
        1:   58:  (*g_30) &= (*p_11);
        1:   59:  (*l_33) = g_32;
        1:   60:  return l_34;
        -:   61:}
        -:   62:
        1:   63:int main(int argc, char *argv[]) {
        -:   64:  int i, j;
        1:   65:  int print_hash_value = 0;
       1*:   66:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   67:    print_hash_value = 1;
        1:   68:  platform_main_begin();
        1:   69:  crc32_gentab();
        1:   70:  func_1();
        1:   71:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   72:  transparent_crc(g_4, "g_4", print_hash_value);
        1:   73:  transparent_crc(g_14.f0, "g_14.f0", print_hash_value);
        5:   74:  for (i = 0; i < 4; i++) {
       12:   75:    for (j = 0; j < 2; j++) {
        8:   76:      transparent_crc(g_18[i][j], "g_18[i][j]", print_hash_value);
        8:   77:      if (print_hash_value)
    #####:   78:        printf("index = [%d][%d]\n", i, j);
        -:   79:    }
        -:   80:  }
        1:   81:  transparent_crc(g_20, "g_20", print_hash_value);
        1:   82:  transparent_crc(g_29, "g_29", print_hash_value);
        1:   83:  transparent_crc(g_31, "g_31", print_hash_value);
        1:   84:  transparent_crc(g_32.f0, "g_32.f0", print_hash_value);
        1:   85:  transparent_crc(g_32.f1, "g_32.f1", print_hash_value);
        1:   86:  transparent_crc(g_32.f2, "g_32.f2", print_hash_value);
        1:   87:  transparent_crc(g_37, "g_37", print_hash_value);
        1:   88:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   89:  return 0;
        -:   90:}

        -:    0:Source:577.c
        -:    0:Graph:577.gcno
        -:    0:Data:577.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_2[5][2][1] = {{{0x03342EB9L}, {(-7L)}}, {{0x252CB136L}, {0x252CB136L}}, {{(-7L)}, {0x03342EB9L}}, {{(-7L)}, {0x252CB136L}}, {{0x252CB136L}, {(-7L)}}};
        -:    7:static int32_t g_5 = (-1L);
        -:    8:static int32_t g_8 = 0x08CCCDDDL;
        -:    9:static int16_t g_20 = 7L;
        -:   10:static uint16_t g_40 = 1UL;
        -:   11:static int32_t g_59[5] = {0xDCCC76BFL, 0xDCCC76BFL, 0xDCCC76BFL, 0xDCCC76BFL, 0xDCCC76BFL};
        -:   12:static int32_t *volatile g_58 = &g_59[2];
        -:   13:static int32_t *g_64[5] = {&g_59[2], &g_59[2], &g_59[2], &g_59[2], &g_59[2]};
        -:   14:static int32_t **volatile g_63 = &g_64[1];
        -:   15:static uint64_t g_76 = 0x2D96A127326B3026LL;
        -:   16:static uint32_t g_126 = 4UL;
        -:   17:static int64_t g_129 = 0x970AEDAF9C58AC2CLL;
        -:   18:static int32_t g_131 = 0x72D27105L;
        -:   19:
        -:   20:static uint32_t func_1(void);
        -:   21:static uint32_t func_11(int32_t p_12);
        -:   22:
        1:   23:static uint32_t func_1(void) {
        1:   24:  int32_t *l_121 = &g_8;
       1*:   25:  for (g_2[4][0][0] = 4; (g_2[4][0][0] > 11); g_2[4][0][0] = safe_add_func_uint8_t_u_u(g_2[4][0][0], 5)) {
    #####:   26:    uint16_t **l_98 = (void *)0;
    #####:   27:    int32_t *l_122 = &g_2[0][0][0];
    #####:   28:    uint64_t l_132 = 0x2DDD91154651966ELL;
    #####:   29:    for (g_5 = 8; (g_5 <= 5); g_5 = safe_sub_func_uint32_t_u_u(g_5, 1)) {
    #####:   30:      int64_t l_92 = 0xE781FF1C73263BB6LL;
    #####:   31:      int32_t l_93 = 1L;
    #####:   32:      uint16_t *l_95 = &g_40;
    #####:   33:      int32_t l_127 = (-1L);
    #####:   34:      for (g_8 = 0; (g_8 < (-21)); g_8 = safe_sub_func_int16_t_s_s(g_8, 4)) {
    #####:   35:        int32_t *l_94 = &g_59[4];
        -:   36:      }
    #####:   37:      if ((((*l_95)--) > l_92)) {
        -:   38:        int32_t l_99[2][4];
    #####:   39:        int16_t *l_123 = (void *)0;
        -:   40:        int16_t *l_124[1];
    #####:   41:        uint32_t *l_125[2][3] = {{(void *)0, (void *)0, (void *)0}, {&g_126, &g_126, &g_126}};
    #####:   42:        int64_t *l_128 = &g_129;
    #####:   43:        int32_t *l_130 = &g_131;
        -:   44:        int i, j;
    #####:   45:        for (i = 0; i < 2; i++) {
    #####:   46:          for (j = 0; j < 4; j++)
    #####:   47:            l_99[i][j] = 0x7660C929L;
        -:   48:        }
    #####:   49:        for (i = 0; i < 1; i++)
    #####:   50:          l_124[i] = &g_20;
    #####:   51:        (*l_130) |= (((l_98 == (void *)0) >= l_99[1][2]) > (((safe_rshift_func_uint32_t_u_u(g_59[2], 12)) && (safe_lshift_func_int32_t_s_s((safe_div_func_int8_t_s_s(((((!(~(safe_sub_func_int64_t_s_s((((safe_add_func_uint32_t_u_u(((g_8 >= ((*l_128) |= ((l_127 = ((safe_unary_minus_func_int16_t_s((safe_rshift_func_uint16_t_u_s((safe_div_func_uint16_t_u_u((((g_126 = (l_92 >= ((safe_add_func_int16_t_s_s((l_93 = (l_121 == l_122)), (0xB9EEC298L > (*l_122)))) >= 0x1667F30DL))) < (*g_58)) != g_76), 0xB93CL)), g_5)))) & 0x8CB29726E9565209LL)) > (*l_122)))) || 0x217A8330C07BB3E8LL), 0xB3387B99L)) > (*l_122)), l_99[1][2]), g_2[4][0][0])))) <= l_92) && g_40) < 0L), l_92)), l_92))) != 0UL));
        -:   52:      } else {
    #####:   53:        if (l_132)
    #####:   54:          break;
        -:   55:      }
        -:   56:    }
        -:   57:  }
        1:   58:  return g_129;
        -:   59:}
        -:   60:
    #####:   61:static uint32_t func_11(int32_t p_12) {
        -:   62:  int64_t l_15[1];
    #####:   63:  int32_t l_21 = 0x44F4CC51L;
    #####:   64:  uint16_t *l_39[3][2][5] = {{{&g_40, &g_40, &g_40, &g_40, (void *)0}, {&g_40, &g_40, (void *)0, &g_40, &g_40}}, {{&g_40, &g_40, &g_40, (void *)0, &g_40}, {&g_40, &g_40, (void *)0, &g_40, (void *)0}}, {{&g_40, &g_40, &g_40, &g_40, (void *)0}, {&g_40, (void *)0, &g_40, &g_40, (void *)0}}};
    #####:   65:  uint16_t *l_49 = &g_40;
    #####:   66:  uint32_t l_87 = 3UL;
        -:   67:  int i, j, k;
    #####:   68:  for (i = 0; i < 1; i++)
    #####:   69:    l_15[i] = 0xA7B7E80D68F98558LL;
    #####:   70:lbl_43:
    #####:   71:  l_21 &= (p_12 || (((g_2[4][0][0], (g_2[4][0][0] == (safe_add_func_int64_t_s_s(p_12, (g_2[4][0][0], ((l_15[0], ((((g_2[4][0][0] & ((g_20 = (g_8, (safe_mul_func_uint8_t_u_u((safe_div_func_uint8_t_u_u(0x01L, g_2[4][0][0])), p_12)))) >= g_2[4][1][0])) >= p_12) != p_12) ^ g_2[2][0][0])) >= p_12)))))) >= g_2[0][1][0]), p_12));
    #####:   72:  if (((safe_rshift_func_uint64_t_u_s(p_12, g_2[0][0][0])) || (safe_mod_func_int32_t_s_s((((((safe_mul_func_uint64_t_u_u(0x7AB5BF7C295A5277LL, (safe_mul_func_uint16_t_u_u(((g_8 | g_8) | p_12), (((+((~l_15[0]), (!(l_21 &= ((safe_lshift_func_uint32_t_u_u((safe_div_func_int64_t_s_s((p_12 || (((safe_rshift_func_int32_t_s_s((l_15[0], 1L), 9)) & 0UL), g_5)), l_15[0])), 9)) ^ p_12))))), l_15[0]) != l_15[0]))))) >= 0xF54C3DC4D7E3C239LL) || l_15[0]) & 0xD5EBL) <= p_12), l_15[0])))) {
    #####:   73:    uint16_t **l_44 = &l_39[1][0][1];
    #####:   74:    int32_t l_54 = 0xDB06D673L;
    #####:   75:    for (g_40 = 0; (g_40 < 13); g_40 = safe_add_func_int32_t_s_s(g_40, 5)) {
    #####:   76:      if (g_8)
    #####:   77:        goto lbl_43;
        -:   78:    }
    #####:   79:    if ((((*l_44) = &g_40) != (void *)0)) {
    #####:   80:      uint16_t *l_57 = &g_40;
    #####:   81:      (*g_58) |= ((safe_sub_func_int16_t_s_s((p_12 & (g_20 || ((0x5FL && (((*l_44) = &g_40) != l_49)) <= ((safe_mul_func_int8_t_s_s((((safe_lshift_func_uint64_t_u_u(l_54, l_54)), (safe_mul_func_uint16_t_u_u(((&g_40 != l_57) <= 5UL), l_15[0]))) < 0UL), 253UL)) >= 0x42BF6251L)))), g_2[3][0][0])) <= (-1L));
        -:   82:    } else {
        -:   83:      for (p_12 = 0; (p_12 <= (-21)); p_12 = safe_sub_func_int8_t_s_s(p_12, 1)) {
        -:   84:        int32_t **l_62 = (void *)0;
        -:   85:        (*g_63) = &l_54;
        -:   86:      }
        -:   87:      for (l_54 = 0; (l_54 >= 0); l_54 -= 1) {
        -:   88:        int i;
        -:   89:        if (l_15[l_54])
        -:   90:          break;
        -:   91:      }
        -:   92:    }
        -:   93:  } else {
    #####:   94:    uint8_t l_83 = 0x68L;
    #####:   95:    uint16_t *l_84 = &g_40;
        -:   96:    int32_t l_86[4];
        -:   97:    int i;
    #####:   98:    for (i = 0; i < 4; i++)
    #####:   99:      l_86[i] = 0x20B1A556L;
    #####:  100:    for (g_40 = 0; (g_40 <= 4); g_40 += 1) {
    #####:  101:      int32_t **l_79 = &g_64[2];
    #####:  102:      if (l_15[0]) {
        -:  103:        int i;
    #####:  104:        g_64[g_40] = &p_12;
        -:  105:      } else {
    #####:  106:        uint16_t **l_71[2][3] = {{&l_49, &l_49, &l_49}, {&l_39[0][0][3], &l_39[0][0][3], &l_39[0][0][3]}};
    #####:  107:        int32_t l_74 = 0x64CC4390L;
    #####:  108:        uint64_t *l_75 = &g_76;
    #####:  109:        int32_t **l_81 = &g_64[1];
    #####:  110:        int32_t ***l_80 = &l_81;
    #####:  111:        int64_t *l_82 = &l_15[0];
    #####:  112:        uint8_t *l_85 = (void *)0;
        -:  113:        int i, j;
    #####:  114:        (**l_79) = (safe_sub_func_int16_t_s_s((l_21 |= (((safe_add_func_int8_t_s_s(((0x62DE1B45L > (safe_lshift_func_int8_t_s_u(((l_39[1][0][2] = &g_40) == ((l_86[2] ^= (safe_rshift_func_uint32_t_u_s(((((l_74 ^= 0x7B6FF578636BC847LL) || ((*l_75) = 0UL)), ((((((-3L) != (((safe_add_func_uint16_t_u_u((((((l_79 != ((*l_80) = &g_64[1])), ((*l_82) = g_2[4][0][0])), l_15[0]) != (**l_79)) >= p_12), l_83)) == g_20), l_15[0])), &g_40) == l_84) >= 0xA7FFL) < g_76)) <= g_20), 31))), (void *)0)), 3))) | p_12), l_87)) || (***l_80)) > 4L)), g_2[4][0][0]));
        -:  115:      }
    #####:  116:      for (p_12 = 9; (p_12 > 24); p_12 = safe_add_func_uint32_t_u_u(p_12, 1)) {
    #####:  117:        (*l_79) = (*l_79);
        -:  118:      }
        -:  119:    }
        -:  120:  }
    #####:  121:  return l_87;
        -:  122:}
        -:  123:
        1:  124:int main(int argc, char *argv[]) {
        -:  125:  int i, j, k;
        1:  126:  int print_hash_value = 0;
       1*:  127:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  128:    print_hash_value = 1;
        1:  129:  platform_main_begin();
        1:  130:  crc32_gentab();
        1:  131:  func_1();
        6:  132:  for (i = 0; i < 5; i++) {
       15:  133:    for (j = 0; j < 2; j++) {
       20:  134:      for (k = 0; k < 1; k++) {
       10:  135:        transparent_crc(g_2[i][j][k], "g_2[i][j][k]", print_hash_value);
       10:  136:        if (print_hash_value)
    #####:  137:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  138:      }
        -:  139:    }
        -:  140:  }
        1:  141:  transparent_crc(g_5, "g_5", print_hash_value);
        1:  142:  transparent_crc(g_8, "g_8", print_hash_value);
        1:  143:  transparent_crc(g_20, "g_20", print_hash_value);
        1:  144:  transparent_crc(g_40, "g_40", print_hash_value);
        6:  145:  for (i = 0; i < 5; i++) {
        5:  146:    transparent_crc(g_59[i], "g_59[i]", print_hash_value);
        5:  147:    if (print_hash_value)
    #####:  148:      printf("index = [%d]\n", i);
        -:  149:  }
        1:  150:  transparent_crc(g_76, "g_76", print_hash_value);
        1:  151:  transparent_crc(g_126, "g_126", print_hash_value);
        1:  152:  transparent_crc(g_129, "g_129", print_hash_value);
        1:  153:  transparent_crc(g_131, "g_131", print_hash_value);
        1:  154:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  155:  return 0;
        -:  156:}

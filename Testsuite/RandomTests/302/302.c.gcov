        -:    0:Source:302.c
        -:    0:Graph:302.gcno
        -:    0:Data:302.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_3 = 0xA3DF603FL;
        -:    7:static volatile int32_t g_4 = 0L;
        -:    8:static volatile int32_t g_5[2] = {0xA654FDDDL, 0xA654FDDDL};
        -:    9:static volatile int32_t g_6 = 0x5912491EL;
        -:   10:static volatile int32_t g_7[5] = {(-6L), (-6L), (-6L), (-6L), (-6L)};
        -:   11:static volatile int32_t g_8 = (-3L);
        -:   12:static volatile int32_t g_9 = 0x4800FA72L;
        -:   13:static volatile int32_t g_10 = 0xFCC58A01L;
        -:   14:static int32_t g_11 = 0L;
        -:   15:static volatile int32_t g_12[5][5][2] = {{{(-6L), (-10L)}, {0x292978D8L, 0x83303773L}, {0x4E703026L, (-6L)}, {0x478C38ECL, 0x4E703026L}, {3L, 0x4E665969L}}, {{3L, 0x4E703026L}, {0x478C38ECL, (-6L)}, {0x4E703026L, 0x83303773L}, {0x292978D8L, (-10L)}, {(-6L), 1L}}, {{1L, 1L}, {(-6L), (-10L)}, {0x292978D8L, 0x83303773L}, {0x4E703026L, (-6L)}, {0x478C38ECL, 0x4E703026L}}, {{3L, 0x4E665969L}, {3L, 0x4E703026L}, {0x478C38ECL, (-6L)}, {0x4E703026L, 0x83303773L}, {0x292978D8L, (-6L)}}, {{1L, (-4L)}, {(-4L), (-4L)}, {1L, (-6L)}, {3L, 0x478C38ECL}, {0x4E665969L, 1L}}};
        -:   16:static int32_t g_13 = 4L;
        -:   17:static uint16_t g_44 = 0xB5A4L;
        -:   18:static uint32_t g_45 = 0UL;
        -:   19:static int32_t g_47 = (-1L);
        -:   20:static int32_t g_50 = 0L;
        -:   21:static int32_t g_66 = 0x3B0F6051L;
        -:   22:static uint32_t g_79[1] = {18446744073709551609UL};
        -:   23:static int8_t g_81 = 0L;
        -:   24:static uint32_t g_84 = 3UL;
        -:   25:
        -:   26:static int8_t func_1(void);
        -:   27:static int32_t *func_14(int32_t p_15, uint32_t p_16, int32_t *p_17, int32_t *const p_18);
        -:   28:
        1:   29:static int8_t func_1(void) {
        -:   30:  uint32_t l_2[5];
        -:   31:  uint32_t l_42[3];
        1:   32:  int32_t *l_51[5][2] = {{&g_11, &g_13}, {&g_13, &g_13}, {&g_11, &g_13}, {&g_11, &g_11}, {&g_11, &g_13}};
        1:   33:  int64_t l_64 = 0xE8E05992E414E4A4LL;
        1:   34:  int32_t l_69[4] = {0x6D8D46D8L, 0x6D8D46D8L, 0x6D8D46D8L, 0x6D8D46D8L};
        1:   35:  uint32_t l_73 = 0x484D54FCL;
        1:   36:  uint16_t l_88 = 0xB227L;
        -:   37:  int i, j;
        6:   38:  for (i = 0; i < 5; i++)
        5:   39:    l_2[i] = 0x124F01C0L;
        4:   40:  for (i = 0; i < 3; i++)
        3:   41:    l_42[i] = 0UL;
        5:   42:  for (g_11 = 4; (g_11 >= 1); g_11 -= 1) {
        4:   43:    uint32_t l_23 = 1UL;
        4:   44:    int32_t *l_55 = &g_50;
        4:   45:    int32_t l_85 = (-1L);
        4:   46:    int32_t l_86 = (-7L);
        4:   47:    int32_t l_87 = (-7L);
       20:   48:    for (g_13 = 4; (g_13 >= 1); g_13 -= 1) {
       16:   49:      uint16_t *l_43[4][4][5] = {{{&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}}, {{&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}}, {{&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}}, {{&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}}};
       16:   50:      int32_t *l_46 = &g_47;
       16:   51:      int32_t *l_48 = (void *)0;
        -:   52:      int32_t *l_49[3];
        -:   53:      int32_t **l_54[4];
        -:   54:      int i, j, k;
       64:   55:      for (i = 0; i < 3; i++)
       48:   56:        l_49[i] = &g_50;
       80:   57:      for (i = 0; i < 4; i++)
       64:   58:        l_54[i] = &l_51[2][1];
      16*:   59:      l_55 = func_14((g_50 = (safe_lshift_func_int32_t_s_s(((*l_46) = ((&g_9 == (((safe_div_func_uint16_t_u_u(l_2[g_11], l_2[g_13])) | (l_23 >= (!(g_45 = (safe_mul_func_uint16_t_u_u(((g_44 = (safe_mod_func_int16_t_s_s((g_6 < (safe_sub_func_int64_t_s_s((safe_rshift_func_int32_t_s_u((g_11 && ((safe_rshift_func_int32_t_s_s(0xAEABA4A2L, ((safe_div_func_uint16_t_u_u(((safe_rshift_func_uint32_t_u_u(((+0UL) != ((-10L) == g_13)), g_11)) != 0xF7CC73EE49CE5708LL), g_11)) <= g_11))) | 0xCDFFA870L)), g_11)), 0x124C6E12CDFD7F7FLL))), l_42[0]))) > g_11), l_42[0])))))), &g_10)) == 0xCF8610F1L)), l_23))), g_13, l_51[2][0], l_51[2][0]);
       80:   60:      for (g_44 = 1; (g_44 <= 4); g_44 += 1) {
        -:   61:        uint32_t *l_65[2][4];
       64:   62:        int64_t *l_67 = (void *)0;
       64:   63:        int64_t *l_68 = (void *)0;
       64:   64:        uint16_t **l_70 = &l_43[2][1][1];
       64:   65:        int32_t l_78 = 0x99D32817L;
       64:   66:        int8_t *l_80 = &g_81;
       64:   67:        uint16_t *l_83 = &g_44;
       64:   68:        uint16_t **l_82 = &l_83;
        -:   69:        int i, j;
      192:   70:        for (i = 0; i < 2; i++) {
      640:   71:          for (j = 0; j < 4; j++)
      512:   72:            l_65[i][j] = (void *)0;
        -:   73:        }
       64:   74:        (*l_46) = (safe_mod_func_int8_t_s_s(0xB5L, g_50));
      64*:   75:        g_84 &= (safe_sub_func_uint64_t_u_u(((safe_mul_func_uint64_t_u_u(g_44, 0xED226F84B879C935LL)) >= (safe_mul_func_uint64_t_u_u(((l_69[2] = (l_64 >= (g_66 &= g_47))) && (((*l_70) = l_43[1][3][2]) != ((*l_82) = (((*l_80) ^= (safe_sub_func_int8_t_s_s(((g_79[0] = (l_73 > (((1UL | ((g_7[1] ^ (safe_sub_func_int32_t_s_s(((*l_55) = (safe_mul_func_int16_t_s_s(g_66, l_78))), g_13))) < 0x1A9D0E46L)) && g_5[0]), g_7[3]))) > l_78), g_44))), (void *)0)))), 0x0716CFB31DF95200LL))), g_45));
        -:   76:      }
        -:   77:    }
        4:   78:    l_88--;
        -:   79:  }
       1*:   80:  for (g_81 = 0; (g_81 > 17); ++g_81) {
    #####:   81:    int32_t l_97 = (-3L);
        -:   82:    int32_t l_110[3][1];
    #####:   83:    uint64_t l_111 = 0x8C56EC938AAB9AC8LL;
        -:   84:    int i, j;
    #####:   85:    for (i = 0; i < 3; i++) {
    #####:   86:      for (j = 0; j < 1; j++)
    #####:   87:        l_110[i][j] = 0xE5966A8FL;
        -:   88:    }
    #####:   89:    for (g_66 = 0; (g_66 > 10); g_66 = safe_add_func_int8_t_s_s(g_66, 8)) {
    #####:   90:      if (g_12[2][3][0])
    #####:   91:        break;
    #####:   92:      for (g_84 = (-24); (g_84 < 8); g_84 = safe_add_func_int16_t_s_s(g_84, 7)) {
    #####:   93:        uint8_t l_98 = 0xCDL;
    #####:   94:        l_98 &= l_97;
        -:   95:      }
        -:   96:    }
    #####:   97:    g_50 ^= (((safe_add_func_int32_t_s_s((safe_div_func_uint64_t_u_u((g_5[0], l_97), g_84)), (&l_51[0][0] == (void *)0))) && (((((((((g_9 && ((safe_sub_func_uint32_t_u_u((((l_110[2][0] = (safe_rshift_func_uint32_t_u_u((+((safe_div_func_int16_t_s_s(g_4, ((0L ^ (g_81, 251UL)), l_97))) < l_97)), g_45))) && 0xC9B47AF9L) & g_47), g_47)) < l_111)), g_3) < 0x4296L), g_45) || g_66) != l_97) ^ g_44), g_10) > l_111)) && l_110[1][0]);
        -:   98:  }
        1:   99:  return g_45;
        -:  100:}
        -:  101:
       16:  102:static int32_t *func_14(int32_t p_15, uint32_t p_16, int32_t *p_17, int32_t *const p_18) {
       16:  103:  int32_t *l_53 = &g_13;
       16:  104:  int32_t **l_52 = &l_53;
       16:  105:  (*l_52) = &p_15;
       16:  106:  return &g_50;
        -:  107:}
        -:  108:
        1:  109:int main(int argc, char *argv[]) {
        -:  110:  int i, j, k;
        1:  111:  int print_hash_value = 0;
       1*:  112:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  113:    print_hash_value = 1;
        1:  114:  platform_main_begin();
        1:  115:  crc32_gentab();
        1:  116:  func_1();
        1:  117:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  118:  transparent_crc(g_4, "g_4", print_hash_value);
        3:  119:  for (i = 0; i < 2; i++) {
        2:  120:    transparent_crc(g_5[i], "g_5[i]", print_hash_value);
        2:  121:    if (print_hash_value)
    #####:  122:      printf("index = [%d]\n", i);
        -:  123:  }
        1:  124:  transparent_crc(g_6, "g_6", print_hash_value);
        6:  125:  for (i = 0; i < 5; i++) {
        5:  126:    transparent_crc(g_7[i], "g_7[i]", print_hash_value);
        5:  127:    if (print_hash_value)
    #####:  128:      printf("index = [%d]\n", i);
        -:  129:  }
        1:  130:  transparent_crc(g_8, "g_8", print_hash_value);
        1:  131:  transparent_crc(g_9, "g_9", print_hash_value);
        1:  132:  transparent_crc(g_10, "g_10", print_hash_value);
        1:  133:  transparent_crc(g_11, "g_11", print_hash_value);
        6:  134:  for (i = 0; i < 5; i++) {
       30:  135:    for (j = 0; j < 5; j++) {
       75:  136:      for (k = 0; k < 2; k++) {
       50:  137:        transparent_crc(g_12[i][j][k], "g_12[i][j][k]", print_hash_value);
       50:  138:        if (print_hash_value)
    #####:  139:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  140:      }
        -:  141:    }
        -:  142:  }
        1:  143:  transparent_crc(g_13, "g_13", print_hash_value);
        1:  144:  transparent_crc(g_44, "g_44", print_hash_value);
        1:  145:  transparent_crc(g_45, "g_45", print_hash_value);
        1:  146:  transparent_crc(g_47, "g_47", print_hash_value);
        1:  147:  transparent_crc(g_50, "g_50", print_hash_value);
        1:  148:  transparent_crc(g_66, "g_66", print_hash_value);
        2:  149:  for (i = 0; i < 1; i++) {
        1:  150:    transparent_crc(g_79[i], "g_79[i]", print_hash_value);
        1:  151:    if (print_hash_value)
    #####:  152:      printf("index = [%d]\n", i);
        -:  153:  }
        1:  154:  transparent_crc(g_81, "g_81", print_hash_value);
        1:  155:  transparent_crc(g_84, "g_84", print_hash_value);
        1:  156:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  157:  return 0;
        -:  158:}

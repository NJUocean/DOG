        -:    0:Source:312.c
        -:    0:Graph:312.gcno
        -:    0:Data:312.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U0 {
        -:    7:  uint16_t f0;
        -:    8:  volatile int8_t f1;
        -:    9:  int32_t f2;
        -:   10:  int32_t f3;
        -:   11:};
        -:   12:
        -:   13:static volatile int32_t g_4 = 1L;
        -:   14:static int64_t g_14[1][1][5] = {{{0xA3C0BF90A2337124LL, 0xA3C0BF90A2337124LL, 0xA3C0BF90A2337124LL, 0xA3C0BF90A2337124LL, 0xA3C0BF90A2337124LL}}};
        -:   15:static int16_t g_18 = 1L;
        -:   16:static int32_t g_25 = 0x06BDE64FL;
        -:   17:static int32_t g_27 = 0xAE735984L;
        -:   18:static uint32_t g_28 = 0x62B56095L;
        -:   19:static const union U0 g_32 = {0x6540L};
        -:   20:
        -:   21:static const union U0 func_1(void);
        -:   22:static int8_t func_9(uint8_t p_10, int16_t p_11, uint64_t p_12, const uint64_t p_13);
        -:   23:
        1:   24:static const union U0 func_1(void) {
        1:   25:  uint32_t l_17 = 4294967291UL;
        1:   26:  int32_t *l_31 = &g_27;
        1:   27:  (*l_31) = (safe_rshift_func_int16_t_s_u(g_4, (safe_div_func_int32_t_s_s((safe_div_func_uint8_t_u_u((func_9(g_14[0][0][4], g_14[0][0][4], (safe_add_func_int8_t_s_s(g_14[0][0][4], l_17)), (g_18 = g_14[0][0][0])) < (((void *)0 != l_31) != 0x5B45L)), 0xACL)), g_27))));
        1:   28:  return g_32;
        -:   29:}
        -:   30:
        1:   31:static int8_t func_9(uint8_t p_10, int16_t p_11, uint64_t p_12, const uint64_t p_13) {
        1:   32:  uint16_t l_23 = 0x6284L;
        -:   33:  int32_t *l_26[3];
        -:   34:  int i;
        4:   35:  for (i = 0; i < 3; i++)
        3:   36:    l_26[i] = &g_25;
       1*:   37:  for (p_12 = 2; (p_12 == 3); ++p_12) {
    #####:   38:    if (p_12)
    #####:   39:      break;
    #####:   40:    for (p_11 = 0; (p_11 >= (-28)); p_11--) {
    #####:   41:      int32_t *l_24 = &g_25;
    #####:   42:      (*l_24) ^= l_23;
        -:   43:    }
        -:   44:  }
        1:   45:  g_28--;
        1:   46:  return p_13;
        -:   47:}
        -:   48:
        1:   49:int main(int argc, char *argv[]) {
        -:   50:  int i, j, k;
        1:   51:  int print_hash_value = 0;
       1*:   52:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   53:    print_hash_value = 1;
        1:   54:  platform_main_begin();
        1:   55:  crc32_gentab();
        1:   56:  func_1();
        1:   57:  transparent_crc(g_4, "g_4", print_hash_value);
        2:   58:  for (i = 0; i < 1; i++) {
        2:   59:    for (j = 0; j < 1; j++) {
        6:   60:      for (k = 0; k < 5; k++) {
        5:   61:        transparent_crc(g_14[i][j][k], "g_14[i][j][k]", print_hash_value);
        5:   62:        if (print_hash_value)
    #####:   63:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   64:      }
        -:   65:    }
        -:   66:  }
        1:   67:  transparent_crc(g_18, "g_18", print_hash_value);
        1:   68:  transparent_crc(g_25, "g_25", print_hash_value);
        1:   69:  transparent_crc(g_27, "g_27", print_hash_value);
        1:   70:  transparent_crc(g_28, "g_28", print_hash_value);
        1:   71:  transparent_crc(g_32.f0, "g_32.f0", print_hash_value);
        1:   72:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   73:  return 0;
        -:   74:}

        -:    0:Source:812.c
        -:    0:Graph:812.gcno
        -:    0:Data:812.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U1 {
        -:    7:  volatile uint32_t f0;
        -:    8:  const uint16_t f1;
        -:    9:  uint32_t f2;
        -:   10:  volatile int8_t f3;
        -:   11:  int16_t f4;
        -:   12:};
        -:   13:
        -:   14:union U3 {
        -:   15:  int32_t f0;
        -:   16:  volatile uint32_t f1;
        -:   17:  uint64_t f2;
        -:   18:};
        -:   19:
        -:   20:union U5 {
        -:   21:  const uint32_t f0;
        -:   22:  int32_t f1;
        -:   23:};
        -:   24:
        -:   25:static uint32_t g_8[2][3] = {{0x42170591L, 0x42170591L, 0x42170591L}, {0x21324561L, 0x21324561L, 0x21324561L}};
        -:   26:static union U5 g_9 = {0UL};
        -:   27:static int32_t g_11[1] = {0x303F0244L};
        -:   28:static volatile union U1 *volatile g_18 = (void *)0;
        -:   29:static volatile union U1 *volatile *volatile g_19 = &g_18;
        -:   30:static int16_t g_25 = 0x4D91L;
        -:   31:static int16_t g_31 = 4L;
        -:   32:static int16_t *g_30 = &g_31;
        -:   33:static int32_t g_35 = 0x52DD8607L;
        -:   34:static uint64_t g_38 = 0x5752783DE769035ALL;
        -:   35:static uint64_t g_74 = 18446744073709551615UL;
        -:   36:static int32_t *volatile g_75 = &g_11[0];
        -:   37:static const int32_t *g_80 = &g_35;
        -:   38:static const int32_t **volatile g_79 = &g_80;
        -:   39:static union U3 g_81 = {0xF04E4CABL};
        -:   40:static union U3 g_83 = {-10L};
        -:   41:static union U3 g_87 = {3L};
        -:   42:
        -:   43:static union U3 func_1(void);
        -:   44:static uint8_t func_4(int64_t p_5, uint8_t p_6, union U5 p_7);
        -:   45:
        1:   46:static union U3 func_1(void) {
        1:   47:  int16_t *l_24 = &g_25;
        1:   48:  int16_t **l_32 = &g_30;
        1:   49:  int32_t l_33 = (-1L);
        1:   50:  int32_t *l_34 = &g_35;
        1:   51:  int32_t *l_36 = &l_33;
        1:   52:  int32_t l_37 = 0x09020024L;
        -:   53:  const uint32_t l_73[5][2] = {{0x03BA2937L, 0x153D5795L}, {5UL, 5UL}, {5UL, 0x153D5795L}, {0x03BA2937L, 0UL}, {0x153D5795L, 0UL}};
        -:   54:  int i, j;
       1*:   55:  if ((g_38 |= (safe_rshift_func_uint8_t_u_s(func_4(g_8[0][0], g_8[1][2], g_9), (((!(((*l_36) = ((*l_34) |= ((safe_div_func_int16_t_s_s(((*l_24) = ((g_11[0] < (+0x9DC86695L)), g_8[1][0])), (safe_mod_func_uint64_t_u_u((safe_mul_func_int16_t_s_s(0xCBBBL, ((((*l_32) = g_30) == &g_31) < l_33))), g_11[0])))) || g_8[0][0]))) >= (-1L))) || (-6L)), l_37))))) {
        1:   56:    int32_t l_71 = (-1L);
        -:   57:    uint16_t *l_72[2][4];
        -:   58:    int i, j;
        3:   59:    for (i = 0; i < 2; i++) {
       10:   60:      for (j = 0; j < 4; j++)
        8:   61:        l_72[i][j] = (void *)0;
        -:   62:    }
        1:   63:    (*g_75) = ((*l_36) = (safe_mul_func_int8_t_s_s(
       1*:   64:                   (safe_rshift_func_int8_t_s_s(g_9.f0, (safe_rshift_func_uint64_t_u_u((safe_lshift_func_int8_t_s_s(((((7UL != (safe_add_func_int16_t_s_s(((safe_mul_func_uint64_t_u_u((safe_sub_func_int16_t_s_s(((safe_add_func_int64_t_s_s(g_38, (safe_mul_func_uint64_t_u_u(g_31, ((((+((safe_lshift_func_uint32_t_u_u((safe_lshift_func_int32_t_s_u((&l_33 != &l_33), 22)), 7)) != ((*l_34) &= (~(safe_rshift_func_int16_t_s_s((safe_mod_func_uint8_t_u_u((0xCEL >= ((g_38 | (safe_div_func_uint8_t_u_u((safe_rshift_func_uint32_t_u_s((((((*l_24) = ((g_9.f0 ^ 0xF9L) && l_71)) && 0L) && g_8[0][0]) && g_9.f0), 13)), l_71))) & (*l_36))), 0xBAL)), 0)))))) > l_73[3][0]) || 2L) < 0L))))) != 0xCEL), 0x6CA2L)), g_11[0])) || g_74), (*l_36)))) != g_11[0]) ^ 0xFD08915CC6C9DB45LL) != 0x77D8L), g_31)), 57)))), g_38)));
        -:   65:  } else {
    #####:   66:    int64_t l_86 = (-1L);
    #####:   67:    for (g_35 = (-8); (g_35 >= (-17)); g_35 = safe_sub_func_uint8_t_u_u(g_35, 4)) {
    #####:   68:      int32_t l_82 = 0xC86D9E1BL;
    #####:   69:      if ((*g_75)) {
    #####:   70:        const int32_t *l_78 = (void *)0;
    #####:   71:        (*g_79) = l_78;
    #####:   72:        return g_81;
        -:   73:      } else {
    #####:   74:        l_82 |= (*g_80);
    #####:   75:        return g_83;
        -:   76:      }
        -:   77:    }
    #####:   78:    (*l_36) = (safe_rshift_func_int64_t_s_s(l_86, 40));
        -:   79:  }
        1:   80:  return g_87;
        -:   81:}
        -:   82:
        1:   83:static uint8_t func_4(int64_t p_5, uint8_t p_6, union U5 p_7) {
        1:   84:  int32_t *l_10 = &g_11[0];
        1:   85:  l_10 = l_10;
       17:   86:  for (p_5 = 23; (p_5 > 7); --p_5) {
       96:   87:    for (p_6 = (-5); (p_6 >= 19); ++p_6) {
      400:   88:      for (p_7.f1 = 0; (p_7.f1 != (-4)); --p_7.f1) {
      320:   89:        (*g_19) = g_18;
        -:   90:      }
        -:   91:    }
        -:   92:  }
        1:   93:  return (*l_10);
        -:   94:}
        -:   95:
        1:   96:int main(int argc, char *argv[]) {
        -:   97:  int i, j;
        1:   98:  int print_hash_value = 0;
       1*:   99:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  100:    print_hash_value = 1;
        1:  101:  platform_main_begin();
        1:  102:  crc32_gentab();
        1:  103:  func_1();
        3:  104:  for (i = 0; i < 2; i++) {
        8:  105:    for (j = 0; j < 3; j++) {
        6:  106:      transparent_crc(g_8[i][j], "g_8[i][j]", print_hash_value);
        6:  107:      if (print_hash_value)
    #####:  108:        printf("index = [%d][%d]\n", i, j);
        -:  109:    }
        -:  110:  }
        1:  111:  transparent_crc(g_9.f0, "g_9.f0", print_hash_value);
        2:  112:  for (i = 0; i < 1; i++) {
        1:  113:    transparent_crc(g_11[i], "g_11[i]", print_hash_value);
        1:  114:    if (print_hash_value)
    #####:  115:      printf("index = [%d]\n", i);
        -:  116:  }
        1:  117:  transparent_crc(g_25, "g_25", print_hash_value);
        1:  118:  transparent_crc(g_31, "g_31", print_hash_value);
        1:  119:  transparent_crc(g_35, "g_35", print_hash_value);
        1:  120:  transparent_crc(g_38, "g_38", print_hash_value);
        1:  121:  transparent_crc(g_74, "g_74", print_hash_value);
        1:  122:  transparent_crc(g_81.f0, "g_81.f0", print_hash_value);
        1:  123:  transparent_crc(g_83.f0, "g_83.f0", print_hash_value);
        1:  124:  transparent_crc(g_87.f0, "g_87.f0", print_hash_value);
        1:  125:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  126:  return 0;
        -:  127:}

        -:    0:Source:335.c
        -:    0:Graph:335.gcno
        -:    0:Data:335.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static uint16_t g_4[2] = {0xA42BL, 0xA42BL};
        -:    7:static int16_t g_8 = 0L;
        -:    8:static int16_t g_12 = 2L;
        -:    9:static int16_t g_16[3] = {1L, 1L, 1L};
        -:   10:static int16_t *g_15 = &g_16[2];
        -:   11:static uint32_t g_19 = 3UL;
        -:   12:
        -:   13:static uint32_t func_1(void);
        -:   14:static uint32_t func_13(int16_t *p_14);
        -:   15:
        1:   16:static uint32_t func_1(void) {
        1:   17:  int16_t *l_5 = (void *)0;
        1:   18:  int16_t *l_6 = (void *)0;
        1:   19:  int16_t *l_7 = &g_8;
        1:   20:  int32_t l_11[1][2][4] = {{{(-6L), (-6L), (-6L), (-6L)}, {(-6L), (-6L), (-6L), (-6L)}}};
        1:   21:  uint32_t *l_18 = &g_19;
        1:   22:  int32_t l_20 = 0xA0C8D467L;
        -:   23:  int i, j, k;
        1:   24:  l_11[0][0][3] = ((g_12 &= (safe_mul_func_int16_t_s_s(((*l_7) = g_4[1]), (!(safe_unary_minus_func_int8_t_s(l_11[0][0][3])))))) <= (l_20 = (((*l_18) = func_13(g_15)), l_11[0][0][1])));
        1:   25:  return g_4[1];
        -:   26:}
        -:   27:
        1:   28:static uint32_t func_13(int16_t *p_14) {
        1:   29:  int8_t l_17 = 0L;
        1:   30:  return l_17;
        -:   31:}
        -:   32:
        1:   33:int main(int argc, char *argv[]) {
        -:   34:  int i;
        1:   35:  int print_hash_value = 0;
       1*:   36:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   37:    print_hash_value = 1;
        1:   38:  platform_main_begin();
        1:   39:  crc32_gentab();
        1:   40:  func_1();
        3:   41:  for (i = 0; i < 2; i++) {
        2:   42:    transparent_crc(g_4[i], "g_4[i]", print_hash_value);
        2:   43:    if (print_hash_value)
    #####:   44:      printf("index = [%d]\n", i);
        -:   45:  }
        1:   46:  transparent_crc(g_8, "g_8", print_hash_value);
        1:   47:  transparent_crc(g_12, "g_12", print_hash_value);
        4:   48:  for (i = 0; i < 3; i++) {
        3:   49:    transparent_crc(g_16[i], "g_16[i]", print_hash_value);
        3:   50:    if (print_hash_value)
    #####:   51:      printf("index = [%d]\n", i);
        -:   52:  }
        1:   53:  transparent_crc(g_19, "g_19", print_hash_value);
        1:   54:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   55:  return 0;
        -:   56:}

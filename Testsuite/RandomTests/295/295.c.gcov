        -:    0:Source:295.c
        -:    0:Graph:295.gcno
        -:    0:Data:295.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  const unsigned f0 : 27;
        -:   10:};
        -:   11:#pragma pack(pop)
        -:   12:
        -:   13:static volatile int32_t g_3 = 0xD149FEBBL;
        -:   14:static int32_t g_4 = 0x8F69F7FDL;
        -:   15:static uint32_t g_19 = 18446744073709551615UL;
        -:   16:static int8_t g_28 = 0x29L;
        -:   17:static uint16_t g_30 = 0UL;
        -:   18:static uint64_t g_32 = 0xDE81D534A2C930F8LL;
        -:   19:static uint32_t *volatile g_59 = (void *)0;
        -:   20:static uint32_t *volatile *volatile g_58 = &g_59;
        -:   21:static uint32_t *g_61 = &g_19;
        -:   22:static uint32_t *volatile *g_60 = &g_61;
        -:   23:static int32_t g_72[4][2][4] = {{{0xCF8314CDL, 7L, 0x24CED0F2L, 0xFBB1CA98L}, {3L, (-10L), 3L, 0xFBB1CA98L}}, {{0x24CED0F2L, 7L, 0xCF8314CDL, (-1L)}, {5L, 1L, 7L, 7L}}, {{6L, 6L, 7L, 3L}, {5L, 0xA0D1F898L, 0xCF8314CDL, 1L}}, {{0x24CED0F2L, 0xCF8314CDL, 3L, 0xCF8314CDL}, {3L, 0xCF8314CDL, 0x24CED0F2L, 1L}}};
        -:   24:static int32_t g_74[2][4][1] = {{{0x7CAD959FL}, {0x7CAD959FL}, {0x7CAD959FL}, {0x7CAD959FL}}, {{0x7CAD959FL}, {0x7CAD959FL}, {0x7CAD959FL}, {0x7CAD959FL}}};
        -:   25:static volatile int32_t g_87 = 0x814A766FL;
        -:   26:static int8_t g_90 = 0x3BL;
        -:   27:static uint32_t g_92 = 0xBBA217E5L;
        -:   28:static int64_t g_108 = (-1L);
        -:   29:static int64_t *g_107 = &g_108;
        -:   30:static int32_t *g_112[4][3][4] = {{{&g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0]}, {&g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0]}, {&g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0]}},
        -:   31:                                  {{&g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0]}, {&g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0]}, {&g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0]}},
        -:   32:                                  {{&g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0]}, {&g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0]}, {&g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0]}},
        -:   33:                                  {{&g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0]}, {&g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0]}, {&g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0], &g_72[1][0][0]}}};
        -:   34:
        -:   35:static uint32_t func_1(void);
        -:   36:static int32_t *func_6(uint64_t p_7, uint16_t p_8, int32_t *p_9, int32_t *p_10, uint64_t p_11);
        -:   37:
        1:   38:static uint32_t func_1(void) {
        -:   39:  uint32_t l_2[1];
        1:   40:  int32_t *l_5 = &g_4;
        1:   41:  int32_t *l_33 = &g_4;
        -:   42:  uint32_t *l_40[5];
        1:   43:  uint32_t **l_39 = &l_40[3];
        1:   44:  uint8_t l_51 = 0x3CL;
        1:   45:  int16_t l_52 = 0xF8B1L;
        1:   46:  uint64_t *l_66 = &g_32;
        1:   47:  int32_t l_76 = (-1L);
        1:   48:  int32_t l_80 = (-8L);
        1:   49:  int32_t l_84[4] = {(-2L), (-2L), (-2L), (-2L)};
        -:   50:  int i;
        2:   51:  for (i = 0; i < 1; i++)
        1:   52:    l_2[i] = 0xA32B1CECL;
        6:   53:  for (i = 0; i < 5; i++)
        5:   54:    l_40[i] = &l_2[0];
        2:   55:  for (g_4 = 0; (g_4 <= 0); g_4 += 1) {
        1:   56:    uint32_t *l_18 = &g_19;
        1:   57:    uint32_t **l_26 = &l_18;
        1:   58:    int8_t *l_27 = &g_28;
        1:   59:    uint16_t *l_29 = &g_30;
        -:   60:    uint64_t *l_31[3];
        1:   61:    int32_t *l_34[3][3] = {{&g_4, &g_4, &g_4}, {(void *)0, (void *)0, (void *)0}, {&g_4, &g_4, &g_4}};
        1:   62:    int32_t **l_38 = &l_33;
        -:   63:    int i, j;
        4:   64:    for (i = 0; i < 3; i++)
        3:   65:      l_31[i] = &g_32;
        1:   66:    (*l_38) = (((void *)0 == l_5), func_6((g_32 = (safe_rshift_func_uint16_t_u_s(l_2[g_4], (safe_lshift_func_int32_t_s_s(((safe_div_func_uint16_t_u_u((((((*l_18)--), ((void *)0 != &g_19)) || (safe_mod_func_uint16_t_u_u(((*l_29) = ((((*l_27) = (safe_sub_func_int64_t_s_s((&g_19 == ((*l_26) = &g_19)), g_3))) < g_19) & 18446744073709551615UL)), g_19))) >= 0x9BC00EADL), (*l_5))) || 9UL), l_2[g_4]))))), (*l_5), l_33, l_34[1][2], (*l_33)));
        -:   67:  }
       1*:   68:  if ((l_39 == (((((((((*l_33) |= 0x411E69D0L) <= l_2[0]) > (safe_rshift_func_int32_t_s_u(((safe_mul_func_uint32_t_u_u(g_32, ((safe_div_func_uint32_t_u_u(l_2[0], ((safe_div_func_uint8_t_u_u(g_19, ((l_51 != g_19) | (0UL == g_3)))) && 0x3F7CL))) == g_32))) & l_52), g_32))) >= 0x74D4A52DL) || (*l_5)) != 18446744073709551608UL), 3L), (void *)0))) {
        -:   69:    uint32_t l_53[2][1];
    #####:   70:    uint32_t **l_68 = &l_40[1];
    #####:   71:    uint32_t ***l_69 = &l_68;
    #####:   72:    uint32_t ***l_70 = &l_39;
    #####:   73:    int32_t *l_71 = &g_72[1][0][0];
    #####:   74:    int32_t *l_73 = &g_74[1][2][0];
    #####:   75:    int32_t l_77 = 0x04DBB371L;
    #####:   76:    int32_t l_78 = 0xCAF05E37L;
    #####:   77:    int32_t l_79 = (-2L);
    #####:   78:    int32_t l_81 = 0xE4CDB194L;
    #####:   79:    int32_t l_83 = 0x9C7346DDL;
    #####:   80:    int32_t l_85 = 0x956BE94CL;
        -:   81:    int32_t l_86[4];
    #####:   82:    int64_t l_88 = 0x8987753CBC617211LL;
        -:   83:    int i, j;
    #####:   84:    for (i = 0; i < 2; i++) {
    #####:   85:      for (j = 0; j < 1; j++)
    #####:   86:        l_53[i][j] = 0x056E99FDL;
        -:   87:    }
    #####:   88:    for (i = 0; i < 4; i++)
    #####:   89:      l_86[i] = 1L;
    #####:   90:    if (((*l_73) |= ((*l_71) |= ((l_53[1][0] <= (safe_lshift_func_uint8_t_u_u((((safe_mod_func_uint64_t_u_u((g_58 == g_60), ((safe_lshift_func_int16_t_s_u(l_53[1][0], (safe_rshift_func_int64_t_s_u((l_66 == l_66), 1)))) | (safe_unary_minus_func_uint16_t_u(((((*l_69) = l_68) == ((*l_70) = &g_61)) > ((-1L) && (*l_5)))))))) ^ 0xCAA0L) || (*l_33)), (*l_33)))) != g_4)))) {
    #####:   91:      int32_t *l_75[1][5] = {{(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}};
    #####:   92:      int16_t l_82 = 0L;
        -:   93:      int32_t l_89[5];
    #####:   94:      int8_t l_91[5][3][2] = {{{0x66L, 0x66L}, {1L, 0x66L}, {0x66L, 1L}}, {{0x66L, 0x66L}, {1L, 0x66L}, {0x66L, 1L}}, {{0x66L, 0x66L}, {1L, 0x66L}, {0x66L, 1L}}, {{0x66L, 0x66L}, {1L, 0x66L}, {0x66L, 1L}}, {{0x66L, 0x66L}, {1L, 0x66L}, {0x66L, 1L}}};
        -:   95:      int i, j, k;
    #####:   96:      for (i = 0; i < 5; i++)
    #####:   97:        l_89[i] = 0xFCB5441FL;
    #####:   98:      g_92++;
        -:   99:    } else {
    #####:  100:      if ((*l_5)) {
    #####:  101:        int64_t *l_99 = &l_88;
    #####:  102:        int64_t *l_100 = (void *)0;
    #####:  103:        int32_t l_101 = 0xF728D4A7L;
    #####:  104:        (*l_5) |= (safe_lshift_func_uint32_t_u_u(g_30, 9));
    #####:  105:        (*l_71) ^= (safe_mul_func_int64_t_s_s(((*l_99) = 0xD5033BB9946DB040LL), (l_101 ^= (*l_5))));
        -:  106:      } else {
    #####:  107:        (*l_73) = 0x00C7963AL;
        -:  108:      }
    #####:  109:      for (l_51 = 0; l_51 < 4; l_51 += 1) {
    #####:  110:        for (l_76 = 0; l_76 < 2; l_76 += 1) {
    #####:  111:          for (g_28 = 0; g_28 < 4; g_28 += 1) {
    #####:  112:            g_72[l_51][l_76][g_28] = 0xA2FDC879L;
        -:  113:          }
        -:  114:        }
        -:  115:      }
        -:  116:    }
        -:  117:  } else {
        1:  118:    int64_t *l_106 = (void *)0;
        1:  119:    int64_t *l_109 = &g_108;
        1:  120:    int32_t *l_110 = &g_72[0][1][3];
       1*:  121:    for (g_30 = 0; (g_30 == 56); ++g_30) {
    #####:  122:      int32_t **l_111 = &l_5;
    #####:  123:      (*l_111) = func_6((((g_112[1][1][1] = func_6((+(~(l_106 == (l_109 = g_107)))), (((((*l_111) = l_110) == &g_72[1][0][0]), g_30) <= (*l_110)), &l_76, l_110, ((*l_110) && g_108))) != (void *)0), g_72[1][0][3]), (*l_33), l_110, &g_72[0][0][3], g_72[1][0][0]);
        -:  124:    }
        -:  125:  }
        1:  126:  return (*l_5);
        -:  127:}
        -:  128:
        1:  129:static int32_t *func_6(uint64_t p_7, uint16_t p_8, int32_t *p_9, int32_t *p_10, uint64_t p_11) {
        1:  130:  int32_t *l_36[4] = {&g_4, &g_4, &g_4, &g_4};
        1:  131:  int32_t **l_35 = &l_36[3];
        -:  132:  int32_t *l_37[5];
        -:  133:  int i;
        6:  134:  for (i = 0; i < 5; i++)
        5:  135:    l_37[i] = &g_4;
        1:  136:  g_3 = (((*l_35) = p_10) != (void *)0);
        1:  137:  return l_37[4];
        -:  138:}
        -:  139:
        1:  140:int main(int argc, char *argv[]) {
        -:  141:  int i, j, k;
        1:  142:  int print_hash_value = 0;
       1*:  143:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  144:    print_hash_value = 1;
        1:  145:  platform_main_begin();
        1:  146:  crc32_gentab();
        1:  147:  func_1();
        1:  148:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  149:  transparent_crc(g_4, "g_4", print_hash_value);
        1:  150:  transparent_crc(g_19, "g_19", print_hash_value);
        1:  151:  transparent_crc(g_28, "g_28", print_hash_value);
        1:  152:  transparent_crc(g_30, "g_30", print_hash_value);
        1:  153:  transparent_crc(g_32, "g_32", print_hash_value);
        5:  154:  for (i = 0; i < 4; i++) {
       12:  155:    for (j = 0; j < 2; j++) {
       40:  156:      for (k = 0; k < 4; k++) {
       32:  157:        transparent_crc(g_72[i][j][k], "g_72[i][j][k]", print_hash_value);
       32:  158:        if (print_hash_value)
    #####:  159:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  160:      }
        -:  161:    }
        -:  162:  }
        3:  163:  for (i = 0; i < 2; i++) {
       10:  164:    for (j = 0; j < 4; j++) {
       16:  165:      for (k = 0; k < 1; k++) {
        8:  166:        transparent_crc(g_74[i][j][k], "g_74[i][j][k]", print_hash_value);
        8:  167:        if (print_hash_value)
    #####:  168:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  169:      }
        -:  170:    }
        -:  171:  }
        1:  172:  transparent_crc(g_87, "g_87", print_hash_value);
        1:  173:  transparent_crc(g_90, "g_90", print_hash_value);
        1:  174:  transparent_crc(g_92, "g_92", print_hash_value);
        1:  175:  transparent_crc(g_108, "g_108", print_hash_value);
        1:  176:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  177:  return 0;
        -:  178:}

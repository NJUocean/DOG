        -:    0:Source:713.c
        -:    0:Graph:713.gcno
        -:    0:Data:713.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int64_t g_15 = 0x7C1188E17B844A75LL;
        -:    7:static uint8_t g_37[3][5] = {{0x96L, 1UL, 0UL, 0UL, 1UL}, {0x96L, 1UL, 0UL, 0UL, 1UL}, {0x96L, 1UL, 0UL, 0UL, 1UL}};
        -:    8:static int16_t g_42 = 1L;
        -:    9:static uint16_t g_45 = 0x40B3L;
        -:   10:static uint64_t g_49 = 18446744073709551615UL;
        -:   11:static uint32_t g_50 = 4294967289UL;
        -:   12:static int32_t g_59 = 0xC0953B22L;
        -:   13:static int32_t *volatile g_58 = &g_59;
        -:   14:
        -:   15:static const uint64_t func_1(void);
        -:   16:static uint64_t func_4(uint32_t p_5, uint64_t p_6, uint16_t p_7, int8_t p_8, int32_t p_9);
        -:   17:
        1:   18:static const uint64_t func_1(void) {
        1:   19:  const int32_t l_14 = 0xBF2121F9L;
        1:   20:  uint8_t l_18 = 0UL;
        1:   21:  int32_t l_27 = 0xA7B5CF1CL;
        1:   22:  uint8_t *l_36 = &g_37[2][0];
        1:   23:  uint16_t *l_43 = (void *)0;
        1:   24:  uint16_t *l_44[4][5] = {{&g_45, (void *)0, (void *)0, (void *)0, (void *)0}, {(void *)0, &g_45, &g_45, &g_45, &g_45}, {&g_45, (void *)0, (void *)0, (void *)0, (void *)0}, {(void *)0, &g_45, &g_45, &g_45, &g_45}};
        -:   25:  uint8_t l_46[3];
        1:   26:  uint32_t *l_47 = (void *)0;
        1:   27:  uint32_t *l_48 = (void *)0;
        -:   28:  int i, j;
        4:   29:  for (i = 0; i < 3; i++)
        3:   30:    l_46[i] = 0x07L;
       1*:   31:  (*g_58) = (safe_add_func_int64_t_s_s(1L, func_4((g_49 = (((((safe_div_func_int64_t_s_s(l_14, g_15)) & (((safe_add_func_int16_t_s_s((((l_18 & ((g_45 &= ((safe_mod_func_uint16_t_u_u((safe_add_func_int16_t_s_s(((((safe_lshift_func_int64_t_s_u(l_18, (safe_div_func_uint16_t_u_u(l_27, ((safe_sub_func_uint8_t_u_u((((safe_rshift_func_uint16_t_u_u((((safe_div_func_uint64_t_u_u(l_18, l_18)) | ((g_42 = ((safe_lshift_func_uint8_t_u_s(((*l_36)++), ((((safe_rshift_func_int32_t_s_u(l_14, 15)) != 0x2DL) > 0xD7L), g_15))) < g_15)) >= l_14)) && g_15), 5)), g_42) & g_15), 0x52L)) | g_15))))) | 1UL) | g_15), 1L), g_15)), l_27)) ^ g_15)), l_46[0])) == 65535UL) == l_18), g_15)) == 0xF079038991F32AFCLL) != 0UL)) & g_15), 0x0C1731D4L) & 0xC242EA6AL)), g_15, g_50, g_50, l_27)));
        1:   32:  return g_15;
        -:   33:}
        -:   34:
        1:   35:static uint64_t func_4(uint32_t p_5, uint64_t p_6, uint16_t p_7, int8_t p_8, int32_t p_9) {
       1*:   36:  for (p_5 = 17; (p_5 <= 12); p_5 = safe_sub_func_uint8_t_u_u(p_5, 8)) {
    #####:   37:    for (p_9 = (-23); (p_9 > (-5)); p_9 = safe_add_func_uint16_t_u_u(p_9, 1)) {
        -:   38:      uint32_t l_57[3];
        -:   39:      int i;
    #####:   40:      for (i = 0; i < 3; i++)
    #####:   41:        l_57[i] = 4294967295UL;
    #####:   42:      for (p_7 = 11; (p_7 != 8); p_7--) {
    #####:   43:        return l_57[2];
        -:   44:      }
        -:   45:    }
        -:   46:  }
        1:   47:  return g_45;
        -:   48:}
        -:   49:
        1:   50:int main(int argc, char *argv[]) {
        -:   51:  int i, j;
        1:   52:  int print_hash_value = 0;
       1*:   53:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   54:    print_hash_value = 1;
        1:   55:  platform_main_begin();
        1:   56:  crc32_gentab();
        1:   57:  func_1();
        1:   58:  transparent_crc(g_15, "g_15", print_hash_value);
        4:   59:  for (i = 0; i < 3; i++) {
       18:   60:    for (j = 0; j < 5; j++) {
       15:   61:      transparent_crc(g_37[i][j], "g_37[i][j]", print_hash_value);
       15:   62:      if (print_hash_value)
    #####:   63:        printf("index = [%d][%d]\n", i, j);
        -:   64:    }
        -:   65:  }
        1:   66:  transparent_crc(g_42, "g_42", print_hash_value);
        1:   67:  transparent_crc(g_45, "g_45", print_hash_value);
        1:   68:  transparent_crc(g_49, "g_49", print_hash_value);
        1:   69:  transparent_crc(g_50, "g_50", print_hash_value);
        1:   70:  transparent_crc(g_59, "g_59", print_hash_value);
        1:   71:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   72:  return 0;
        -:   73:}

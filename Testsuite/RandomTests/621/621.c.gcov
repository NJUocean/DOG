        -:    0:Source:621.c
        -:    0:Graph:621.gcno
        -:    0:Data:621.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  const volatile unsigned f0 : 10;
        -:   10:  volatile signed f1 : 23;
        -:   11:};
        -:   12:#pragma pack(pop)
        -:   13:
        -:   14:union U1 {
        -:   15:  uint64_t f0;
        -:   16:};
        -:   17:
        -:   18:static struct S0 g_22 = {21, 1552};
        -:   19:static struct S0 g_30 = {0, -2664};
        -:   20:static uint32_t g_32 = 0xB5CFDA6CL;
        -:   21:static uint64_t g_34 = 5UL;
        -:   22:static struct S0 g_38[2] = {{1, 1946}, {1, 1946}};
        -:   23:static struct S0 *g_37 = &g_38[1];
        -:   24:static uint64_t g_59[2] = {1UL, 1UL};
        -:   25:static int8_t g_79[3] = {0L, 0L, 0L};
        -:   26:static const volatile int32_t g_81 = (-1L);
        -:   27:static int64_t g_86 = 0L;
        -:   28:static uint8_t g_89[2][1][1] = {{{253UL}}, {{253UL}}};
        -:   29:static uint64_t *volatile g_91 = &g_59[0];
        -:   30:static uint64_t *volatile *volatile g_90 = &g_91;
        -:   31:static uint64_t *volatile *volatile *volatile g_92 = &g_90;
        -:   32:static uint8_t g_94 = 255UL;
        -:   33:static int32_t g_100 = 8L;
        -:   34:static int32_t g_105[5][3] = {{8L, 0x58B78450L, 8L}, {0x0A8D4FF7L, 0x0A8D4FF7L, 0x0A8D4FF7L}, {8L, 0x58B78450L, 8L}, {0x0A8D4FF7L, 0x0A8D4FF7L, 0x0A8D4FF7L}, {8L, 0x58B78450L, 8L}};
        -:   35:static volatile uint64_t g_106 = 0UL;
        -:   36:static volatile union U1 g_119 = {1UL};
        -:   37:static uint32_t g_127 = 0x7404BFF7L;
        -:   38:static struct S0 **volatile g_133 = &g_37;
        -:   39:static int32_t *g_136 = (void *)0;
        -:   40:static int32_t **volatile g_135 = &g_136;
        -:   41:
        -:   42:static int16_t func_1(void);
        -:   43:static struct S0 *func_2(uint32_t p_3, struct S0 *p_4, struct S0 *p_5, uint64_t p_6, uint16_t p_7);
        -:   44:
        1:   45:static int16_t func_1(void) {
        -:   46:  const uint8_t l_19[3][1][2] = {{{0UL, 0UL}}, {{0UL, 0UL}}, {{0UL, 0UL}}};
        1:   47:  struct S0 *l_29 = &g_30;
        1:   48:  struct S0 *l_31 = &g_30;
        1:   49:  uint64_t *l_33 = &g_34;
        1:   50:  int32_t l_35 = (-1L);
        1:   51:  int16_t l_36 = 0x98C2L;
        1:   52:  int32_t *const l_134 = (void *)0;
        -:   53:  int i, j, k;
       1*:   54:  (*g_133) = func_2((((safe_unary_minus_func_uint16_t_u((1L && (safe_lshift_func_int64_t_s_s((safe_mul_func_int16_t_s_s((safe_add_func_uint32_t_u_u((((safe_div_func_int64_t_s_s((((l_19[0][0][0] >= ((((65535UL <= ((safe_mul_func_int16_t_s_s((g_22, (safe_lshift_func_uint64_t_u_u(l_19[0][0][0], ((((safe_add_func_int64_t_s_s(l_19[0][0][0], (safe_mul_func_int8_t_s_s(((((*l_33) = ((((l_29 = &g_22) == l_31) <= (g_30.f1 <= g_32)) == l_19[0][0][0])) <= l_19[2][0][0]) | 0xC79EL), g_32)))) | l_35) > 0x64548797L) & g_32)))), l_35)) && 4294967293UL)) & g_32), 0L) >= 1L)) != l_36), (-1L)), (-1L))), 0xB7A2E255BB5FB49ALL), 0xC821F997L), g_32)), g_32)), 55))))), 2UL) != 0xBEL), g_37, l_31, g_32, g_32);
        1:   55:  (*g_135) = l_134;
        1:   56:  return l_35;
        -:   57:}
        -:   58:
        1:   59:static struct S0 *func_2(uint32_t p_3, struct S0 *p_4, struct S0 *p_5, uint64_t p_6, uint16_t p_7) {
        1:   60:  int32_t l_39 = 0x40C2C6F7L;
        1:   61:  uint16_t l_80 = 2UL;
        1:   62:  union U1 l_117 = {0UL};
        1:   63:  int8_t *const l_125 = &g_79[1];
        1:   64:  if ((l_39 > 0x8071081B27067D5BLL)) {
    #####:   65:    uint16_t l_84 = 0x0516L;
    #####:   66:    for (g_34 = 21; (g_34 == 8); g_34 = safe_sub_func_uint8_t_u_u(g_34, 5)) {
    #####:   67:      uint64_t *l_58 = &g_59[1];
    #####:   68:      uint64_t *l_67 = &g_34;
    #####:   69:      uint64_t **l_66 = &l_67;
        -:   70:      int8_t *l_78[1][2];
    #####:   71:      uint16_t l_82 = 0x6F27L;
    #####:   72:      int32_t l_83 = 0L;
    #####:   73:      int64_t *l_85 = &g_86;
        -:   74:      int32_t l_87[4][1][1];
    #####:   75:      uint8_t *l_88 = &g_89[1][0][0];
        -:   76:      int i, j, k;
    #####:   77:      for (i = 0; i < 1; i++) {
    #####:   78:        for (j = 0; j < 2; j++)
    #####:   79:          l_78[i][j] = &g_79[0];
        -:   80:      }
    #####:   81:      for (i = 0; i < 4; i++) {
    #####:   82:        for (j = 0; j < 1; j++) {
    #####:   83:          for (k = 0; k < 1; k++)
    #####:   84:            l_87[i][j][k] = 0x9DBC3306L;
        -:   85:        }
        -:   86:      }
    #####:   87:            (*g_92) = ((((*l_88) = (safe_sub_func_uint8_t_u_u((((safe_div_func_int8_t_s_s(((safe_mul_func_uint64_t_u_u(((safe_sub_func_uint16_t_u_u((l_87[1][0][0] = ((safe_div_func_uint8_t_u_u(((255UL && ((safe_div_func_uint8_t_u_u((safe_lshift_func_uint32_t_u_u((((safe_mul_func_uint64_t_u_u((++(*l_58)), ((*l_85) = (65531UL == (((&p_6 != ((safe_sub_func_int64_t_s_s((0UL == ((((((safe_rshift_func_uint8_t_u_s(((&p_6 == ((*l_66) = &g_34)) , ((safe_lshift_func_int8_t_s_u(((l_83 &= ((((safe_mod_func_uint8_t_u_u(((((safe_rshift_func_uint64_t_u_u(l_39, 28)) ^ (((safe_lshift_func_int64_t_s_u(((l_80 = g_38[1].f1) ^ (-6L)), 20)) >= 0L) , 0xBA4BDACAL)) ^ p_7) && g_81), l_82)) ^ 4UL) ^ p_3) ^ p_6)) > l_84), 4)) >= 0xB388L)), g_79[0])) == 0UL) > g_79[2]) , p_6) > g_32) ^ l_82)), 0UL)) , &g_34)) || p_6) <= p_7))))) != g_79[2]) > g_34), 15)), 1UL)) != g_34)) < g_34), g_34)) || l_82)), p_3)) || l_84), p_6)) , g_59[1]), 0xDCL)) & p_3) && g_22.f0), l_39))) > 8L) , g_90);
    #####:   88:            if (g_59[1]) {
    #####:   89:              if (l_80)
    #####:   90:                break;
        -:   91:            } else {
    #####:   92:              int32_t *l_93[2][5] = {{&l_87[1][0][0], &l_87[1][0][0], &l_87[1][0][0], &l_87[1][0][0], &l_87[1][0][0]}, {&l_83, &l_83, &l_83, &l_83, &l_83}};
        -:   93:              int i, j;
    #####:   94:              ++g_94;
        -:   95:            }
        -:   96:    }
        -:   97:  } else {
        1:   98:    int64_t l_102 = 0xE6DEAED54F57EB90LL;
        1:   99:    int32_t l_104 = 0xEF1402E7L;
       1*:  100:    for (l_39 = 0; (l_39 == (-14)); l_39 = safe_sub_func_int32_t_s_s(l_39, 1)) {
    #####:  101:      int32_t *l_99 = &g_100;
        -:  102:      int32_t *l_101[2];
    #####:  103:      int32_t l_103[4][1] = {{1L}, {0x8BAA40D6L}, {1L}, {0x8BAA40D6L}};
        -:  104:      uint64_t *l_118[1];
    #####:  105:      int8_t *l_124 = &g_79[1];
    #####:  106:      uint32_t *l_126 = &g_127;
    #####:  107:      int8_t **l_128 = &l_124;
    #####:  108:      uint32_t l_130 = 2UL;
        -:  109:      int i, j;
    #####:  110:      for (i = 0; i < 2; i++)
    #####:  111:        l_101[i] = &g_100;
    #####:  112:      for (i = 0; i < 1; i++)
    #####:  113:        l_118[i] = &g_34;
    #####:  114:      ++g_106;
    #####:  115:      if ((p_3 & ((*l_99) = (safe_rshift_func_uint8_t_u_u((safe_rshift_func_int32_t_s_s((6L && 0L), 5)), (safe_div_func_int16_t_s_s(((((safe_mod_func_uint32_t_u_u((&g_79[2] == ((*l_128) = (l_117, (((0x85BCF721L ^ ((*l_126) = (((p_6 = p_6) && ((g_119, (safe_lshift_func_int64_t_s_s((safe_add_func_uint16_t_u_u((l_124 == l_125), 3UL)), l_104))) == g_59[1])) < g_100))) | p_3), (void *)0)))), p_7)) >= 18446744073709551615UL) ^ l_80) >= (*l_99)), 1UL))))))) {
    #####:  116:        uint64_t l_129 = 18446744073709551612UL;
    #####:  117:        if (l_129)
    #####:  118:          break;
    #####:  119:        l_130--;
        -:  120:      } else {
    #####:  121:        return &g_30;
        -:  122:      }
        -:  123:    }
        -:  124:  }
        1:  125:  return p_5;
        -:  126:}
        -:  127:
        1:  128:int main(int argc, char *argv[]) {
        -:  129:  int i, j, k;
        1:  130:  int print_hash_value = 0;
       1*:  131:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  132:    print_hash_value = 1;
        1:  133:  platform_main_begin();
        1:  134:  crc32_gentab();
        1:  135:  func_1();
        1:  136:  transparent_crc(g_22.f0, "g_22.f0", print_hash_value);
        1:  137:  transparent_crc(g_22.f1, "g_22.f1", print_hash_value);
        1:  138:  transparent_crc(g_30.f0, "g_30.f0", print_hash_value);
        1:  139:  transparent_crc(g_30.f1, "g_30.f1", print_hash_value);
        1:  140:  transparent_crc(g_32, "g_32", print_hash_value);
        1:  141:  transparent_crc(g_34, "g_34", print_hash_value);
        3:  142:  for (i = 0; i < 2; i++) {
        2:  143:    transparent_crc(g_38[i].f0, "g_38[i].f0", print_hash_value);
        2:  144:    transparent_crc(g_38[i].f1, "g_38[i].f1", print_hash_value);
        2:  145:    if (print_hash_value)
    #####:  146:      printf("index = [%d]\n", i);
        -:  147:  }
        3:  148:  for (i = 0; i < 2; i++) {
        2:  149:    transparent_crc(g_59[i], "g_59[i]", print_hash_value);
        2:  150:    if (print_hash_value)
    #####:  151:      printf("index = [%d]\n", i);
        -:  152:  }
        4:  153:  for (i = 0; i < 3; i++) {
        3:  154:    transparent_crc(g_79[i], "g_79[i]", print_hash_value);
        3:  155:    if (print_hash_value)
    #####:  156:      printf("index = [%d]\n", i);
        -:  157:  }
        1:  158:  transparent_crc(g_81, "g_81", print_hash_value);
        1:  159:  transparent_crc(g_86, "g_86", print_hash_value);
        3:  160:  for (i = 0; i < 2; i++) {
        4:  161:    for (j = 0; j < 1; j++) {
        4:  162:      for (k = 0; k < 1; k++) {
        2:  163:        transparent_crc(g_89[i][j][k], "g_89[i][j][k]", print_hash_value);
        2:  164:        if (print_hash_value)
    #####:  165:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  166:      }
        -:  167:    }
        -:  168:  }
        1:  169:  transparent_crc(g_94, "g_94", print_hash_value);
        1:  170:  transparent_crc(g_100, "g_100", print_hash_value);
        6:  171:  for (i = 0; i < 5; i++) {
       20:  172:    for (j = 0; j < 3; j++) {
       15:  173:      transparent_crc(g_105[i][j], "g_105[i][j]", print_hash_value);
       15:  174:      if (print_hash_value)
    #####:  175:        printf("index = [%d][%d]\n", i, j);
        -:  176:    }
        -:  177:  }
        1:  178:  transparent_crc(g_106, "g_106", print_hash_value);
        1:  179:  transparent_crc(g_119.f0, "g_119.f0", print_hash_value);
        1:  180:  transparent_crc(g_127, "g_127", print_hash_value);
        1:  181:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  182:  return 0;
        -:  183:}

        -:    0:Source:605.c
        -:    0:Graph:605.gcno
        -:    0:Data:605.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S1 {
        -:    9:  unsigned f0 : 1;
        -:   10:};
        -:   11:#pragma pack(pop)
        -:   12:
        -:   13:union U2 {
        -:   14:  uint32_t f0;
        -:   15:  int16_t f1;
        -:   16:};
        -:   17:
        -:   18:union U3 {
        -:   19:  volatile int16_t f0;
        -:   20:  volatile uint64_t f1;
        -:   21:};
        -:   22:
        -:   23:static int32_t g_2 = 1L;
        -:   24:static struct S1 g_11 = {0};
        -:   25:static int64_t g_13 = 0x8F985589B58331C5LL;
        -:   26:static uint16_t g_31 = 0x3423L;
        -:   27:static int8_t g_37[2] = {0xAEL, 0xAEL};
        -:   28:static uint64_t g_40 = 0x95DD68647D02C9AALL;
        -:   29:static int32_t *g_43 = (void *)0;
        -:   30:static uint32_t g_60[2] = {0x94A22835L, 0x94A22835L};
        -:   31:static uint8_t g_63 = 255UL;
        -:   32:static uint32_t g_64[2][4] = {{1UL, 1UL, 1UL, 1UL}, {1UL, 1UL, 1UL, 1UL}};
        -:   33:static volatile union U3 g_82 = {1L};
        -:   34:
        -:   35:static int8_t func_1(void);
        -:   36:static int32_t *func_5(struct S1 p_6, int64_t p_7, int32_t p_8, uint8_t p_9, uint32_t p_10);
        -:   37:
        1:   38:static int8_t func_1(void) {
        1:   39:  int32_t l_34 = 0x082F4E55L;
        1:   40:  int32_t l_35 = 1L;
        1:   41:  const int64_t *l_47 = (void *)0;
        -:   42:  int8_t *l_83[2];
        -:   43:  int i;
        3:   44:  for (i = 0; i < 2; i++)
        2:   45:    l_83[i] = &g_37[0];
        2:   46:  for (g_2 = 0; (g_2 > (-24)); g_2--) {
        2:   47:    int64_t *l_12 = &g_13;
        -:   48:    int32_t l_18[1];
        2:   49:    uint16_t *l_30[4] = {&g_31, &g_31, &g_31, &g_31};
        2:   50:    int8_t *l_36 = &g_37[1];
        2:   51:    uint16_t l_38 = 65535UL;
        -:   52:    int32_t *l_42[5];
        2:   53:    int32_t **l_41 = &l_42[3];
        2:   54:    union U2 l_57 = {2UL};
        2:   55:    const uint8_t l_69 = 0x4CL;
        -:   56:    int i;
        4:   57:    for (i = 0; i < 1; i++)
        2:   58:      l_18[i] = 1L;
       12:   59:    for (i = 0; i < 5; i++)
       10:   60:      l_42[i] = &l_18[0];
       2*:   61:    g_43 = ((*l_41) = func_5(g_11, ((((&g_2 != &g_2) != ((*l_36) = (g_11.f0 & ((((*l_12) |= 1L) && (((safe_mod_func_uint16_t_u_u((safe_lshift_func_uint16_t_u_u(l_18[0], 5)), (safe_sub_func_int32_t_s_s((-1L), (safe_mod_func_int64_t_s_s((((safe_sub_func_int16_t_s_s((safe_mul_func_uint32_t_u_u(((((safe_rshift_func_uint64_t_u_u(((l_34 ^= (!(++g_31))) || ((void *)0 != &g_31)), l_35)) && l_34) && 0x27L) == 0x0104353EL), 0x1EBC5F93L)), g_13)) | l_35) ^ l_18[0]), g_11.f0)))))) ^ l_35) ^ g_13)) == l_18[0])))) && g_2) > l_35), l_38, g_11.f0, l_18[0]));
        8:   62:    for (l_34 = 0; (l_34 >= (-15)); l_34 = safe_sub_func_int32_t_s_s(l_34, 3)) {
        7:   63:      const int64_t **l_48 = &l_47;
        7:   64:      int32_t l_51 = 8L;
        -:   65:      const int64_t **l_56[4];
        7:   66:      union U2 *l_58 = &l_57;
        -:   67:      uint32_t *l_59[3];
        7:   68:      uint8_t *l_61 = (void *)0;
        7:   69:      uint8_t *l_62 = &g_63;
        7:   70:      int8_t *l_76[5] = {&g_37[1], &g_37[1], &g_37[1], &g_37[1], &g_37[1]};
        -:   71:      int i;
       35:   72:      for (i = 0; i < 4; i++)
       28:   73:        l_56[i] = (void *)0;
       28:   74:      for (i = 0; i < 3; i++)
       21:   75:        l_59[i] = &g_60[0];
        7:   76:      g_64[1][3] = ((safe_unary_minus_func_uint64_t_u((((*l_48) = l_47) == (void *)0))) ^ (safe_rshift_func_uint16_t_u_s(l_51, (safe_sub_func_uint8_t_u_u(((*l_62) = ((((safe_mul_func_uint32_t_u_u((g_60[1] ^= ((((void *)0 != l_56[1]), ((*l_58) = l_57)), (**l_41))), 0x6723FF49L)) > (&g_43 == (void *)0)), l_51) < 0x51CA2AE3L)), 0xDCL)))));
        7:   77:      if ((((g_11.f0 | ((*l_36) ^= (safe_sub_func_uint16_t_u_u(l_51, (safe_div_func_int8_t_s_s(((l_69 != 0x7CCB2DC5L) && ((((safe_rshift_func_int16_t_s_u((0xB79E2962DE1B453FLL || ((safe_add_func_int32_t_s_s((safe_add_func_uint32_t_u_u((g_60[1] = (((l_76[3] == l_36) | (safe_unary_minus_func_int64_t_s((g_11, (safe_sub_func_int64_t_s_s(((safe_rshift_func_int32_t_s_u(((g_82, &g_60[0]) != (void *)0), 19)) > g_63), g_40)))))), l_34)), 0xE0EC9289L)), l_35)) >= (**l_41))), g_31)) < g_11.f0) >= g_11.f0) || 0xCCDDL)), 1UL)))))), 0x85AC0FE8B8566A4DLL) >= (**l_41))) {
        6:   78:        int8_t **l_84 = &l_83[0];
        6:   79:        l_35 ^= (((*l_84) = l_83[0]) == &g_37[1]);
        -:   80:      } else {
        1:   81:        int64_t l_85 = 0x2C5A173F203748AALL;
        1:   82:        g_43 = &g_2;
        1:   83:        return l_85;
        -:   84:      }
        -:   85:    }
        -:   86:  }
    #####:   87:  return l_35;
        -:   88:}
        -:   89:
        2:   90:static int32_t *func_5(struct S1 p_6, int64_t p_7, int32_t p_8, uint8_t p_9, uint32_t p_10) {
        -:   91:  int32_t *l_39[1];
        -:   92:  int i;
        4:   93:  for (i = 0; i < 1; i++)
        2:   94:    l_39[i] = &g_2;
        6:   95:  for (p_8 = 1; (p_8 >= 0); p_8 -= 1) {
        4:   96:    l_39[0] = l_39[0];
        8:   97:    for (g_31 = 0; (g_31 <= 0); g_31 += 1) {
        -:   98:      int i;
        4:   99:      g_40 = g_37[g_31];
        -:  100:    }
        -:  101:  }
        2:  102:  return l_39[0];
        -:  103:}
        -:  104:
        1:  105:int main(int argc, char *argv[]) {
        -:  106:  int i, j;
        1:  107:  int print_hash_value = 0;
       1*:  108:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  109:    print_hash_value = 1;
        1:  110:  platform_main_begin();
        1:  111:  crc32_gentab();
        1:  112:  func_1();
        1:  113:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  114:  transparent_crc(g_11.f0, "g_11.f0", print_hash_value);
        1:  115:  transparent_crc(g_13, "g_13", print_hash_value);
        1:  116:  transparent_crc(g_31, "g_31", print_hash_value);
        3:  117:  for (i = 0; i < 2; i++) {
        2:  118:    transparent_crc(g_37[i], "g_37[i]", print_hash_value);
        2:  119:    if (print_hash_value)
    #####:  120:      printf("index = [%d]\n", i);
        -:  121:  }
        1:  122:  transparent_crc(g_40, "g_40", print_hash_value);
        3:  123:  for (i = 0; i < 2; i++) {
        2:  124:    transparent_crc(g_60[i], "g_60[i]", print_hash_value);
        2:  125:    if (print_hash_value)
    #####:  126:      printf("index = [%d]\n", i);
        -:  127:  }
        1:  128:  transparent_crc(g_63, "g_63", print_hash_value);
        3:  129:  for (i = 0; i < 2; i++) {
       10:  130:    for (j = 0; j < 4; j++) {
        8:  131:      transparent_crc(g_64[i][j], "g_64[i][j]", print_hash_value);
        8:  132:      if (print_hash_value)
    #####:  133:        printf("index = [%d][%d]\n", i, j);
        -:  134:    }
        -:  135:  }
        1:  136:  transparent_crc(g_82.f0, "g_82.f0", print_hash_value);
        1:  137:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  138:  return 0;
        -:  139:}

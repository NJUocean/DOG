        -:    0:Source:271.c
        -:    0:Graph:271.gcno
        -:    0:Data:271.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_2 = 0xA654FDDDL;
        -:    7:static volatile int32_t g_3[2][5] = {{0x9FB37B04L, 0x67215912L, 0x9FB37B04L, 0x9FB37B04L, 0x67215912L}, {0x67215912L, 0x9FB37B04L, 0x9FB37B04L, 0x67215912L, 0x9FB37B04L}};
        -:    8:static volatile int32_t g_4[5] = {0x72C25FCCL, 0x72C25FCCL, 0x72C25FCCL, 0x72C25FCCL, 0x72C25FCCL};
        -:    9:static volatile int32_t g_5 = (-1L);
        -:   10:static volatile int32_t g_6 = 0x091DF82DL;
        -:   11:static volatile int32_t g_7 = 0x78398922L;
        -:   12:static int32_t g_8 = 0x12FBB6BCL;
        -:   13:static int32_t g_12[3][4] = {{(-2L), (-2L), (-2L), (-2L)}, {(-2L), (-2L), (-2L), (-2L)}, {(-2L), (-2L), (-2L), (-2L)}};
        -:   14:
        -:   15:static int16_t func_1(void);
        -:   16:
        1:   17:static int16_t func_1(void) {
        1:   18:  uint32_t l_13 = 0xA22DB785L;
       25:   19:  for (g_8 = 0; (g_8 > (-24)); --g_8) {
       24:   20:    int32_t *l_11 = &g_12[1][2];
       24:   21:    (*l_11) ^= 0x83303773L;
        -:   22:  }
        1:   23:  return l_13;
        -:   24:}
        -:   25:
        1:   26:int main(int argc, char *argv[]) {
        -:   27:  int i, j;
        1:   28:  int print_hash_value = 0;
       1*:   29:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   30:    print_hash_value = 1;
        1:   31:  platform_main_begin();
        1:   32:  crc32_gentab();
        1:   33:  func_1();
        1:   34:  transparent_crc(g_2, "g_2", print_hash_value);
        3:   35:  for (i = 0; i < 2; i++) {
       12:   36:    for (j = 0; j < 5; j++) {
       10:   37:      transparent_crc(g_3[i][j], "g_3[i][j]", print_hash_value);
       10:   38:      if (print_hash_value)
    #####:   39:        printf("index = [%d][%d]\n", i, j);
        -:   40:    }
        -:   41:  }
        6:   42:  for (i = 0; i < 5; i++) {
        5:   43:    transparent_crc(g_4[i], "g_4[i]", print_hash_value);
        5:   44:    if (print_hash_value)
    #####:   45:      printf("index = [%d]\n", i);
        -:   46:  }
        1:   47:  transparent_crc(g_5, "g_5", print_hash_value);
        1:   48:  transparent_crc(g_6, "g_6", print_hash_value);
        1:   49:  transparent_crc(g_7, "g_7", print_hash_value);
        1:   50:  transparent_crc(g_8, "g_8", print_hash_value);
        4:   51:  for (i = 0; i < 3; i++) {
       15:   52:    for (j = 0; j < 4; j++) {
       12:   53:      transparent_crc(g_12[i][j], "g_12[i][j]", print_hash_value);
       12:   54:      if (print_hash_value)
    #####:   55:        printf("index = [%d][%d]\n", i, j);
        -:   56:    }
        -:   57:  }
        1:   58:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   59:  return 0;
        -:   60:}

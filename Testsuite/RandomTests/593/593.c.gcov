        -:    0:Source:593.c
        -:    0:Graph:593.gcno
        -:    0:Data:593.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_2 = 6L;
        -:    7:static int32_t g_6 = 0x8FAAAEB9L;
        -:    8:static volatile int8_t g_20 = 0xF6L;
        -:    9:static uint64_t g_22[2][5] = {{0x9E071A05132D7AF2LL, 0x9E071A05132D7AF2LL, 0x9E071A05132D7AF2LL, 0x9E071A05132D7AF2LL, 0x9E071A05132D7AF2LL}, {1UL, 18446744073709551615UL, 1UL, 18446744073709551615UL, 1UL}};
        -:   10:static int64_t g_47 = (-10L);
        -:   11:static int32_t *g_50 = &g_6;
        -:   12:static int8_t *g_57 = (void *)0;
        -:   13:static int8_t **g_56[5] = {&g_57, &g_57, &g_57, &g_57, &g_57};
        -:   14:
        -:   15:static int16_t func_1(void);
        -:   16:static int32_t func_25(int32_t p_26, int32_t *p_27, const int64_t p_28, uint64_t p_29, int32_t *p_30);
        -:   17:
        1:   18:static int16_t func_1(void) {
        1:   19:  int8_t l_8 = (-6L);
        -:   20:  int32_t l_21[4];
        1:   21:  int32_t l_52 = 0xA67B1108L;
        1:   22:  int8_t *l_54 = &l_8;
        1:   23:  int8_t **l_53 = &l_54;
        1:   24:  int8_t ***l_55 = &l_53;
        -:   25:  int i;
        5:   26:  for (i = 0; i < 4; i++)
        4:   27:    l_21[i] = 0L;
       1*:   28:  for (g_2 = (-1); (g_2 < (-14)); --g_2) {
    #####:   29:    int32_t *l_5 = &g_6;
    #####:   30:    int32_t l_7 = 0x3921DED6L;
    #####:   31:    int32_t *l_9 = &g_6;
    #####:   32:    int32_t *l_10 = (void *)0;
    #####:   33:    int32_t *l_11 = &g_6;
    #####:   34:    int32_t *l_12 = &g_6;
    #####:   35:    int32_t *l_13 = &g_6;
    #####:   36:    int32_t *l_14 = &l_7;
    #####:   37:    int32_t *l_15 = &g_6;
    #####:   38:    int32_t *l_16 = &g_6;
    #####:   39:    int32_t *l_17 = &l_7;
    #####:   40:    int32_t *l_18 = (void *)0;
        -:   41:    int32_t *l_19[1];
    #####:   42:    int8_t *l_45 = &l_8;
    #####:   43:    uint32_t l_46 = 0x85A1EC8FL;
        -:   44:    int i;
    #####:   45:    for (i = 0; i < 1; i++)
    #####:   46:      l_19[i] = (void *)0;
    #####:   47:    g_22[1][3]++;
    #####:   48:    l_52 ^= func_25((g_2 == (~((+(safe_div_func_int8_t_s_s(((((255UL <= ((g_2 & (((((*l_12) = (safe_div_func_uint16_t_u_u((g_47 = (safe_mod_func_int8_t_s_s(((*l_45) = (((0x1BL == g_6), ((safe_div_func_int64_t_s_s(((safe_div_func_int8_t_s_s((g_6 || (safe_rshift_func_uint16_t_u_u(65530UL, (0L > 1L)))), 1L)) && g_22[1][3]), 0x2097E65FBC01D4C3LL)), l_21[3])), 0L)), l_46))), 0x7E52L))) != (-1L)) == g_2), 1UL)) ^ 1UL)) >= 5L) < 7L) || g_47), 246UL))) || 0x5E0EL))), &l_21[1], g_22[1][3], l_21[1], &l_21[3]);
        -:   49:  }
        1:   50:  g_56[4] = ((*l_55) = l_53);
        1:   51:  return l_8;
        -:   52:}
        -:   53:
    #####:   54:static int32_t func_25(int32_t p_26, int32_t *p_27, const int64_t p_28, uint64_t p_29, int32_t *p_30) {
    #####:   55:  int16_t l_51 = 0x762CL;
    #####:   56:  for (p_29 = 14; (p_29 <= 56); p_29++) {
    #####:   57:    g_50 = &p_26;
        -:   58:  }
    #####:   59:  return l_51;
        -:   60:}
        -:   61:
        1:   62:int main(int argc, char *argv[]) {
        -:   63:  int i, j;
        1:   64:  int print_hash_value = 0;
       1*:   65:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   66:    print_hash_value = 1;
        1:   67:  platform_main_begin();
        1:   68:  crc32_gentab();
        1:   69:  func_1();
        1:   70:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   71:  transparent_crc(g_6, "g_6", print_hash_value);
        1:   72:  transparent_crc(g_20, "g_20", print_hash_value);
        3:   73:  for (i = 0; i < 2; i++) {
       12:   74:    for (j = 0; j < 5; j++) {
       10:   75:      transparent_crc(g_22[i][j], "g_22[i][j]", print_hash_value);
       10:   76:      if (print_hash_value)
    #####:   77:        printf("index = [%d][%d]\n", i, j);
        -:   78:    }
        -:   79:  }
        1:   80:  transparent_crc(g_47, "g_47", print_hash_value);
        1:   81:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   82:  return 0;
        -:   83:}

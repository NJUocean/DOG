        -:    0:Source:528.c
        -:    0:Graph:528.gcno
        -:    0:Data:528.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U0 {
        -:    7:  const uint64_t f0;
        -:    8:  int64_t f1;
        -:    9:};
        -:   10:
        -:   11:static volatile int32_t g_3 = 0x7DC4B4E1L;
        -:   12:static volatile int32_t g_4 = (-1L);
        -:   13:static volatile int32_t g_5 = 0L;
        -:   14:static int32_t g_6 = 0xCDB8FAAAL;
        -:   15:static int32_t g_7 = 0x44555950L;
        -:   16:static volatile int32_t g_9[5][2][2] = {{{0x414B58E1L, 1L}, {1L, 0x414B58E1L}}, {{1L, 1L}, {0x414B58E1L, 1L}}, {{1L, 0x414B58E1L}, {1L, 1L}}, {{0x414B58E1L, 1L}, {1L, 0x414B58E1L}}, {{1L, 1L}, {0x414B58E1L, 1L}}};
        -:   17:static int32_t g_10 = 0x7E4A9061L;
        -:   18:static int32_t g_12 = 0x085E0710L;
        -:   19:static int32_t *g_26 = &g_12;
        -:   20:static const int32_t g_34 = 0x2633933BL;
        -:   21:static int32_t *g_36 = &g_12;
        -:   22:static uint8_t g_48 = 247UL;
        -:   23:static uint32_t g_52 = 18446744073709551615UL;
        -:   24:static uint8_t g_65 = 1UL;
        -:   25:static uint16_t g_74 = 4UL;
        -:   26:static union U0 g_75 = {0x933308626224F168LL};
        -:   27:static const int16_t g_86[1] = {0x74A7L};
        -:   28:static int32_t *g_88 = &g_12;
        -:   29:static uint8_t g_90 = 7UL;
        -:   30:static int32_t **volatile g_92[1] = {&g_88};
        -:   31:static int32_t **volatile g_93 = (void *)0;
        -:   32:static int32_t **const volatile g_94 = &g_26;
        -:   33:
        -:   34:static int32_t func_1(void);
        -:   35:static int32_t *func_27(int32_t p_28, int8_t p_29, int32_t *p_30, int64_t p_31);
        -:   36:
        1:   37:static int32_t func_1(void) {
        1:   38:  uint8_t l_2[4] = {0xADL, 0xADL, 0xADL, 0xADL};
        1:   39:  uint32_t l_19 = 0UL;
        1:   40:  int32_t l_91 = 0xDFF66F6CL;
        -:   41:  int i;
        5:   42:  for (g_6 = 0; (g_6 <= 3); g_6 += 1) {
        -:   43:    uint8_t l_8[4];
        4:   44:    uint32_t l_37 = 0xBC01D4C3L;
        -:   45:    int i;
       20:   46:    for (i = 0; i < 4; i++)
       16:   47:      l_8[i] = 249UL;
       20:   48:    for (g_7 = 0; (g_7 <= 3); g_7 += 1) {
       16:   49:      int32_t *l_24 = (void *)0;
       16:   50:      int32_t *l_35 = &g_7;
       16:   51:      int16_t l_42 = (-5L);
        -:   52:      int i;
       16:   53:      l_8[2] &= l_2[g_6];
       80:   54:      for (g_10 = 3; (g_10 >= 0); g_10 -= 1) {
       64:   55:        int32_t *l_11 = &g_12;
       64:   56:        int32_t *l_13 = &g_12;
       64:   57:        int32_t *l_14 = &g_12;
       64:   58:        int32_t *l_15 = &g_12;
       64:   59:        int32_t *l_16 = &g_12;
       64:   60:        int32_t *l_17 = (void *)0;
       64:   61:        int32_t *l_18[5][2] = {{&g_12, &g_6}, {&g_12, &g_12}, {&g_6, &g_12}, {&g_12, &g_6}, {&g_12, &g_12}};
        -:   62:        int32_t **l_25[2];
       64:   63:        const int32_t *l_33 = &g_34;
       64:   64:        const int32_t **l_32 = &l_33;
        -:   65:        uint32_t *l_40[1];
       64:   66:        uint16_t l_41 = 0x6954L;
       64:   67:        uint16_t *l_89 = &g_74;
        -:   68:        int i, j;
      192:   69:        for (i = 0; i < 2; i++)
      128:   70:          l_25[i] = &l_18[2][0];
      128:   71:        for (i = 0; i < 1; i++)
       64:   72:          l_40[i] = &l_19;
       64:   73:        l_19--;
       64:   74:        l_91 &= (g_90 &= (safe_add_func_uint16_t_u_u(((*l_89) = ((g_26 = l_24) != (g_88 = func_27((&g_10 == ((*l_32) = l_24)), ((((g_36 = l_35) != (void *)0), ((l_2[g_7] = (l_37 == (l_8[2] && g_4))), (safe_lshift_func_uint16_t_u_s(((l_41 = g_34), l_42), l_2[0])))) >= (*l_15)), &g_7, g_6)))), 5UL)));
        -:   75:      }
        -:   76:    }
        4:   77:    (*g_94) = &l_91;
        -:   78:  }
        1:   79:  return g_9[4][0][0];
        -:   80:}
        -:   81:
       64:   82:static int32_t *func_27(int32_t p_28, int8_t p_29, int32_t *p_30, int64_t p_31) {
       64:   83:  int32_t **l_47[5][3][5] = {{{&g_36, &g_36, &g_36, &g_36, &g_36}, {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}, {&g_36, &g_36, &g_36, &g_36, &g_36}}, {{(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}, {&g_36, &g_36, &g_36, &g_36, &g_36}, {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}}, {{&g_36, &g_36, &g_36, &g_36, &g_36}, {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}, {&g_36, &g_36, &g_36, &g_36, &g_36}}, {{(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}, {&g_36, &g_36, &g_36, &g_36, &g_36}, {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}}, {{&g_36, &g_36, &g_36, &g_36, &g_36}, {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}, {&g_36, &g_36, &g_36, &g_36, &g_36}}};
       64:   84:  uint32_t *l_51 = &g_52;
       64:   85:  int32_t l_70 = 0L;
       64:   86:  uint32_t l_71 = 0x1CC5CA36L;
       64:   87:  uint16_t *l_72 = (void *)0;
       64:   88:  uint16_t *l_73 = &g_74;
       64:   89:  int8_t l_87 = 1L;
        -:   90:  int i, j, k;
      64*:   91:  g_65 &= ((safe_mul_func_uint8_t_u_u((safe_rshift_func_uint32_t_u_s(((g_48 = (l_47[2][0][2] != (p_31, l_47[2][1][1]))) != p_31), (g_12 = (((l_51 == p_30) == ((safe_lshift_func_int32_t_s_u(((safe_mod_func_int64_t_s_s((safe_sub_func_int64_t_s_s((safe_add_func_int8_t_s_s(((safe_div_func_int8_t_s_s(((p_31 > ((0x047CL & (safe_sub_func_int32_t_s_s((g_10 == (-3L)), 0xC19C50EDL))) <= (*p_30))) != p_28), (-2L))) && p_29), 0x7EL)), 0x42A26B13122E3BD6LL)), p_28)) & 0L), p_29)) <= 4294967291UL)) || g_3)))), p_29)), (*g_36));
       64:   92:  l_87 = (safe_mod_func_int8_t_s_s((((++(*l_51)), (((*l_73) ^= (l_70 | l_71)) | (g_75, g_4))), (-8L)), (safe_mul_func_int16_t_s_s(((p_29, (safe_sub_func_uint8_t_u_u(((safe_mul_func_uint8_t_u_u((p_30 != ((safe_add_func_uint64_t_u_u((p_29 <= (safe_mod_func_int8_t_s_s((-2L), g_48))), g_48)), g_36)), g_48)) == g_10), g_86[0]))) ^ 2L), 0x4559L))));
       64:   93:  return &g_7;
        -:   94:}
        -:   95:
        1:   96:int main(int argc, char *argv[]) {
        -:   97:  int i, j, k;
        1:   98:  int print_hash_value = 0;
       1*:   99:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  100:    print_hash_value = 1;
        1:  101:  platform_main_begin();
        1:  102:  crc32_gentab();
        1:  103:  func_1();
        1:  104:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  105:  transparent_crc(g_4, "g_4", print_hash_value);
        1:  106:  transparent_crc(g_5, "g_5", print_hash_value);
        1:  107:  transparent_crc(g_6, "g_6", print_hash_value);
        1:  108:  transparent_crc(g_7, "g_7", print_hash_value);
        6:  109:  for (i = 0; i < 5; i++) {
       15:  110:    for (j = 0; j < 2; j++) {
       30:  111:      for (k = 0; k < 2; k++) {
       20:  112:        transparent_crc(g_9[i][j][k], "g_9[i][j][k]", print_hash_value);
       20:  113:        if (print_hash_value)
    #####:  114:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  115:      }
        -:  116:    }
        -:  117:  }
        1:  118:  transparent_crc(g_10, "g_10", print_hash_value);
        1:  119:  transparent_crc(g_12, "g_12", print_hash_value);
        1:  120:  transparent_crc(g_34, "g_34", print_hash_value);
        1:  121:  transparent_crc(g_48, "g_48", print_hash_value);
        1:  122:  transparent_crc(g_52, "g_52", print_hash_value);
        1:  123:  transparent_crc(g_65, "g_65", print_hash_value);
        1:  124:  transparent_crc(g_74, "g_74", print_hash_value);
        1:  125:  transparent_crc(g_75.f0, "g_75.f0", print_hash_value);
        2:  126:  for (i = 0; i < 1; i++) {
        1:  127:    transparent_crc(g_86[i], "g_86[i]", print_hash_value);
        1:  128:    if (print_hash_value)
    #####:  129:      printf("index = [%d]\n", i);
        -:  130:  }
        1:  131:  transparent_crc(g_90, "g_90", print_hash_value);
        1:  132:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  133:  return 0;
        -:  134:}

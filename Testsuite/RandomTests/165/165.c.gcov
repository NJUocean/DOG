        -:    0:Source:165.c
        -:    0:Graph:165.gcno
        -:    0:Data:165.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S1 {
        -:    9:  volatile int8_t f0;
        -:   10:};
        -:   11:#pragma pack(pop)
        -:   12:
        -:   13:struct S4 {
        -:   14:  signed f0 : 7;
        -:   15:  volatile unsigned f1 : 22;
        -:   16:  signed f2 : 27;
        -:   17:  unsigned f3 : 30;
        -:   18:};
        -:   19:
        -:   20:static int32_t g_6 = 0x6917AB6DL;
        -:   21:static volatile int64_t g_8 = (-2L);
        -:   22:static uint64_t g_9 = 0x8D06721F7D96711DLL;
        -:   23:static struct S1 g_12 = {-9L};
        -:   24:static volatile struct S4 g_13[1][1][3] = {{{{1, 1271, -7955, 17830}, {1, 1271, -7955, 17830}, {1, 1271, -7955, 17830}}}};
        -:   25:static volatile struct S4 g_14 = {7, 1012, 10912, 32303};
        -:   26:
        -:   27:static const int16_t func_1(void);
        -:   28:static struct S1 func_2(int32_t p_3);
        -:   29:
        1:   30:static const int16_t func_1(void) {
        -:   31:  int8_t l_4[4];
        -:   32:  int i;
        5:   33:  for (i = 0; i < 4; i++)
        4:   34:    l_4[i] = 0L;
        1:   35:  g_14 = (func_2(l_4[3]), g_13[0][0][2]);
        1:   36:  return g_13[0][0][2].f1;
        -:   37:}
        -:   38:
        1:   39:static struct S1 func_2(int32_t p_3) {
        1:   40:  int32_t *l_5 = &g_6;
        -:   41:  int32_t *l_7[1][1];
        -:   42:  int i, j;
        2:   43:  for (i = 0; i < 1; i++) {
        2:   44:    for (j = 0; j < 1; j++)
        1:   45:      l_7[i][j] = (void *)0;
        -:   46:  }
        1:   47:  g_9--;
        1:   48:  return g_12;
        -:   49:}
        -:   50:
        1:   51:int main(int argc, char *argv[]) {
        -:   52:  int i, j, k;
        1:   53:  int print_hash_value = 0;
       1*:   54:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   55:    print_hash_value = 1;
        1:   56:  platform_main_begin();
        1:   57:  crc32_gentab();
        1:   58:  func_1();
        1:   59:  transparent_crc(g_6, "g_6", print_hash_value);
        1:   60:  transparent_crc(g_8, "g_8", print_hash_value);
        1:   61:  transparent_crc(g_9, "g_9", print_hash_value);
        1:   62:  transparent_crc(g_12.f0, "g_12.f0", print_hash_value);
        2:   63:  for (i = 0; i < 1; i++) {
        2:   64:    for (j = 0; j < 1; j++) {
        4:   65:      for (k = 0; k < 3; k++) {
        3:   66:        transparent_crc(g_13[i][j][k].f0, "g_13[i][j][k].f0", print_hash_value);
        3:   67:        transparent_crc(g_13[i][j][k].f1, "g_13[i][j][k].f1", print_hash_value);
        3:   68:        transparent_crc(g_13[i][j][k].f2, "g_13[i][j][k].f2", print_hash_value);
        3:   69:        transparent_crc(g_13[i][j][k].f3, "g_13[i][j][k].f3", print_hash_value);
        3:   70:        if (print_hash_value)
    #####:   71:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   72:      }
        -:   73:    }
        -:   74:  }
        1:   75:  transparent_crc(g_14.f0, "g_14.f0", print_hash_value);
        1:   76:  transparent_crc(g_14.f1, "g_14.f1", print_hash_value);
        1:   77:  transparent_crc(g_14.f2, "g_14.f2", print_hash_value);
        1:   78:  transparent_crc(g_14.f3, "g_14.f3", print_hash_value);
        1:   79:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   80:  return 0;
        -:   81:}

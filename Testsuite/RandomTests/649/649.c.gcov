        -:    0:Source:649.c
        -:    0:Graph:649.gcno
        -:    0:Data:649.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_9 = 7L;
        -:    7:static int8_t g_16 = (-5L);
        -:    8:static int8_t g_23 = 0L;
        -:    9:static uint16_t g_25[2] = {65527UL, 65527UL};
        -:   10:static uint64_t g_29[5][1] = {{0x531DEFCECB2EC6F0LL}, {0x769867F5D1CC0C7FLL}, {0x531DEFCECB2EC6F0LL}, {0x769867F5D1CC0C7FLL}, {0x531DEFCECB2EC6F0LL}};
        -:   11:static int32_t g_31 = 0x4B13B106L;
        -:   12:static volatile uint16_t g_36 = 65534UL;
        -:   13:static int32_t g_40 = 4L;
        -:   14:static int32_t *g_62 = (void *)0;
        -:   15:static int32_t *g_70 = &g_31;
        -:   16:static int32_t **volatile g_69[5] = {&g_70, &g_70, &g_70, &g_70, &g_70};
        -:   17:static int32_t **volatile g_71 = &g_70;
        -:   18:static int16_t g_88 = 0xCAA6L;
        -:   19:static int16_t g_90 = (-9L);
        -:   20:static uint8_t g_95[3] = {0x10L, 0x10L, 0x10L};
        -:   21:static uint32_t g_96 = 18446744073709551615UL;
        -:   22:static int64_t g_106[2][1][3] = {{{0xF838922964CB199FLL, (-1L), 0xF838922964CB199FLL}}, {{0xF838922964CB199FLL, (-1L), 0xF838922964CB199FLL}}};
        -:   23:static int64_t g_108 = 0x89C8F7CEBB1B1B7DLL;
        -:   24:static uint32_t g_110 = 1UL;
        -:   25:static int32_t g_112 = 0L;
        -:   26:static int32_t *volatile g_111[5][4][4] = {{{&g_112, (void *)0, (void *)0, (void *)0}, {(void *)0, &g_31, (void *)0, (void *)0}, {(void *)0, (void *)0, (void *)0, (void *)0}, {(void *)0, (void *)0, (void *)0, &g_31}},
        -:   27:                                           {{&g_112, (void *)0, &g_31, &g_31}, {&g_31, &g_31, &g_31, &g_31}, {(void *)0, (void *)0, &g_31, (void *)0}, {&g_31, (void *)0, &g_112, &g_31}},
        -:   28:                                           {{&g_31, (void *)0, (void *)0, (void *)0}, {&g_31, &g_31, &g_112, (void *)0}, {&g_31, (void *)0, &g_31, (void *)0}, {(void *)0, (void *)0, &g_31, &g_31}},
        -:   29:                                           {{(void *)0, (void *)0, (void *)0, (void *)0}, {(void *)0, (void *)0, &g_31, (void *)0}, {(void *)0, &g_31, (void *)0, (void *)0}, {&g_31, (void *)0, (void *)0, &g_31}},
        -:   30:                                           {{(void *)0, (void *)0, &g_31, (void *)0}, {(void *)0, (void *)0, (void *)0, &g_112}, {(void *)0, &g_112, &g_31, &g_112}, {(void *)0, (void *)0, &g_31, (void *)0}}};
        -:   31:
        -:   32:static int8_t func_1(void);
        -:   33:static int32_t func_4(uint32_t p_5, uint64_t p_6);
        -:   34:
        1:   35:static int8_t func_1(void) {
        1:   36:  int32_t l_14 = 0x27213EC7L;
        1:   37:  int8_t *l_15 = &g_16;
        1:   38:  int8_t *l_22 = &g_23;
        1:   39:  int8_t **l_21 = &l_22;
        1:   40:  uint16_t *l_24 = &g_25[1];
        1:   41:  uint32_t l_26 = 0x9C010580L;
        1:   42:  int64_t *l_27 = (void *)0;
        1:   43:  uint32_t l_28 = 0xF1E2CD84L;
        1:   44:  int32_t *l_39[4][1][4] = {{{&g_9, &g_40, &g_9, &g_40}}, {{&g_9, &g_40, &g_9, &g_40}}, {{&g_9, &g_40, &g_9, &g_40}}, {{&g_9, &g_40, &g_9, &g_40}}};
        -:   45:  int32_t l_41[3][1];
        1:   46:  uint32_t l_65 = 0x9E8488E6L;
        1:   47:  int32_t *l_73 = &l_41[1][0];
        -:   48:  uint8_t l_122[3];
        -:   49:  int i, j, k;
        4:   50:  for (i = 0; i < 3; i++) {
        6:   51:    for (j = 0; j < 1; j++)
        3:   52:      l_41[i][j] = 0xD571B4D0L;
        -:   53:  }
        4:   54:  for (i = 0; i < 3; i++)
        3:   55:    l_122[i] = 0xDAL;
       1*:   56:  if ((((l_41[0][0] ^= (safe_add_func_uint64_t_u_u(((func_4((g_29[4][0] |= (safe_lshift_func_int8_t_s_u(g_9, ((l_28 = (safe_mod_func_int32_t_s_s(((0xC3938DD4L && ((safe_div_func_int32_t_s_s((((*l_15) |= l_14) < (((safe_rshift_func_uint8_t_u_s((((((safe_div_func_int32_t_s_s((((((((((*l_24) = (((*l_21) = (void *)0) == (g_9, (void *)0))) | (g_23, g_9)), g_9) > g_23), g_25[0]) && g_23) >= g_23), l_14), g_9)), g_23), 0x281C1D99EA5D840DLL) & g_23) & g_9), 5)) <= 0x8DACB314L) & g_9)), g_23)) ^ (-10L))) && g_16), l_26))), g_16)))), g_23) > g_23) | 3UL), l_14))), 0xE4BCA0F9L), (-1L))) {
        1:   57:    const int32_t *l_43 = (void *)0;
        1:   58:    int32_t l_44 = 0L;
        1:   59:    int16_t l_86 = 0xF3D5L;
        1:   60:    if (l_41[1][0]) {
        1:   61:      int32_t l_53 = 0L;
        1:   62:      int32_t *l_68 = &g_31;
       1*:   63:      if (((+((((void *)0 == l_43), (l_44, l_44)) != ((safe_add_func_uint16_t_u_u((l_28 > (255UL ^ ((safe_mul_func_int64_t_s_s(((safe_add_func_uint64_t_u_u(0x74ED7B9758AC4212LL, 0UL)) <= ((safe_mod_func_uint64_t_u_u(g_36, g_29[1][0])) != l_44)), l_53)) > l_44))), g_31)) && g_29[1][0]))) & g_16)) {
        1:   64:        int32_t *l_54 = (void *)0;
        1:   65:        int32_t *l_55 = &g_31;
        1:   66:        (*l_55) = (-2L);
        1:   67:        if (l_44)
    #####:   68:          goto lbl_72;
        1:   69:        l_44 ^= ((((safe_div_func_uint64_t_u_u(((safe_mod_func_uint8_t_u_u((safe_lshift_func_int8_t_s_u(g_29[4][0], (l_43 != (g_62 = &g_40)))), (+(!(0x06C22AA1L != ((g_31 && l_65) != (safe_add_func_int64_t_s_s((g_16, (&g_31 != (void *)0)), g_36)))))))), g_29[2][0]), l_53)), &g_25[1]) == l_24) & g_16);
        -:   70:      } else {
    #####:   71:      lbl_72:
    #####:   72:        (*g_71) = l_68;
    #####:   73:        l_73 = l_68;
        -:   74:      }
        -:   75:    } else {
    #####:   76:      int16_t *l_87 = &g_88;
    #####:   77:      int16_t *l_89 = &g_90;
    #####:   78:      int32_t l_93 = 0x7436F42BL;
    #####:   79:      uint8_t l_94 = 0xAFL;
    #####:   80:      g_96 |= (4UL | ((g_95[1] ^= ((*l_15) = ((((-1L) ^ (safe_lshift_func_uint64_t_u_u((safe_lshift_func_uint16_t_u_u((((g_23 >= g_29[4][0]) || (safe_div_func_int16_t_s_s(((safe_sub_func_int8_t_s_s(l_44, (g_31 || (safe_mod_func_int16_t_s_s(l_86, ((*l_89) = ((*l_87) = g_16))))))) | (safe_lshift_func_int8_t_s_s(l_93, l_93))), g_29[4][0]))), l_86), 13)), l_94))) >= 0x3B5EL) && g_29[2][0]))) >= g_31));
        -:   81:    }
        -:   82:  } else {
        -:   83:    uint32_t l_98 = 0x5124A769L;
        -:   84:    int64_t *const l_105 = &g_106[0][0][1];
        -:   85:    int32_t l_107 = 1L;
        -:   86:    uint32_t *l_109 = &g_110;
        -:   87:    int32_t *l_113 = &g_112;
        -:   88:    int32_t *l_114 = (void *)0;
        -:   89:    int32_t *l_115 = &g_31;
        -:   90:    int32_t *l_116 = (void *)0;
        -:   91:    int32_t *l_117 = &l_107;
        -:   92:    int32_t *l_118 = &l_41[0][0];
        -:   93:    int32_t *l_119 = &l_107;
        -:   94:    int32_t *l_120 = &l_41[0][0];
        -:   95:    int32_t *l_121[5] = {&l_107, &l_107, &l_107, &l_107, &l_107};
        -:   96:    int i;
        -:   97:    (*l_113) &= ((g_29[4][0] |= (*l_73)) != (((safe_unary_minus_func_int32_t_s(0x8933AC5CL)) | g_9) ^ ((l_98 != ((*l_109) ^= ((g_16 && ((g_108 = (g_40 &= (l_107 = ((safe_lshift_func_int8_t_s_u((safe_mul_func_int16_t_s_s((g_95[2] == ((g_25[0] ^ g_25[1]) && ((((&l_41[0][0] == (void *)0), l_105) == &g_106[0][0][1]) < (*g_70)))), l_98)), 6)) ^ l_98)))), (*l_73))) && g_106[0][0][1]))) || 4294967295UL)));
        -:   98:    ++l_122[1];
        -:   99:  }
        1:  100:  return g_90;
        -:  101:}
        -:  102:
        1:  103:static int32_t func_4(uint32_t p_5, uint64_t p_6) {
        1:  104:  int32_t *l_30 = &g_31;
        1:  105:  int32_t *l_32 = &g_31;
        1:  106:  int32_t *l_33[5][5] = {{&g_31, &g_31, &g_31, &g_31, &g_31}, {&g_31, &g_31, &g_31, &g_31, &g_31}, {&g_31, &g_31, &g_31, &g_31, &g_31}, {&g_31, &g_31, (void *)0, &g_31, (void *)0}, {&g_31, &g_31, &g_31, &g_31, &g_31}};
        1:  107:  int8_t l_34[2][2] = {{0xEBL, 0xEBL}, {0xEBL, 0xEBL}};
        1:  108:  int8_t l_35 = 0x93L;
        -:  109:  int i, j;
        1:  110:  g_36--;
        1:  111:  return (*l_32);
        -:  112:}
        -:  113:
        1:  114:int main(int argc, char *argv[]) {
        -:  115:  int i, j, k;
        1:  116:  int print_hash_value = 0;
       1*:  117:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  118:    print_hash_value = 1;
        1:  119:  platform_main_begin();
        1:  120:  crc32_gentab();
        1:  121:  func_1();
        1:  122:  transparent_crc(g_9, "g_9", print_hash_value);
        1:  123:  transparent_crc(g_16, "g_16", print_hash_value);
        1:  124:  transparent_crc(g_23, "g_23", print_hash_value);
        3:  125:  for (i = 0; i < 2; i++) {
        2:  126:    transparent_crc(g_25[i], "g_25[i]", print_hash_value);
        2:  127:    if (print_hash_value)
    #####:  128:      printf("index = [%d]\n", i);
        -:  129:  }
        6:  130:  for (i = 0; i < 5; i++) {
       10:  131:    for (j = 0; j < 1; j++) {
        5:  132:      transparent_crc(g_29[i][j], "g_29[i][j]", print_hash_value);
        5:  133:      if (print_hash_value)
    #####:  134:        printf("index = [%d][%d]\n", i, j);
        -:  135:    }
        -:  136:  }
        1:  137:  transparent_crc(g_31, "g_31", print_hash_value);
        1:  138:  transparent_crc(g_36, "g_36", print_hash_value);
        1:  139:  transparent_crc(g_40, "g_40", print_hash_value);
        1:  140:  transparent_crc(g_88, "g_88", print_hash_value);
        1:  141:  transparent_crc(g_90, "g_90", print_hash_value);
        4:  142:  for (i = 0; i < 3; i++) {
        3:  143:    transparent_crc(g_95[i], "g_95[i]", print_hash_value);
        3:  144:    if (print_hash_value)
    #####:  145:      printf("index = [%d]\n", i);
        -:  146:  }
        1:  147:  transparent_crc(g_96, "g_96", print_hash_value);
        3:  148:  for (i = 0; i < 2; i++) {
        4:  149:    for (j = 0; j < 1; j++) {
        8:  150:      for (k = 0; k < 3; k++) {
        6:  151:        transparent_crc(g_106[i][j][k], "g_106[i][j][k]", print_hash_value);
        6:  152:        if (print_hash_value)
    #####:  153:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  154:      }
        -:  155:    }
        -:  156:  }
        1:  157:  transparent_crc(g_108, "g_108", print_hash_value);
        1:  158:  transparent_crc(g_110, "g_110", print_hash_value);
        1:  159:  transparent_crc(g_112, "g_112", print_hash_value);
        1:  160:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  161:  return 0;
        -:  162:}

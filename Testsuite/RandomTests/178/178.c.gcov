        -:    0:Source:178.c
        -:    0:Graph:178.gcno
        -:    0:Data:178.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U4 {
        -:    7:  const uint32_t f0;
        -:    8:};
        -:    9:
        -:   10:static int32_t g_3 = (-8L);
        -:   11:static const int32_t *volatile g_2 = &g_3;
        -:   12:static int32_t *g_9 = &g_3;
        -:   13:static int32_t **g_8 = &g_9;
        -:   14:static uint32_t g_10[4] = {4294967295UL, 4294967295UL, 4294967295UL, 4294967295UL};
        -:   15:static volatile int32_t g_11 = (-1L);
        -:   16:static volatile int32_t g_12 = 2L;
        -:   17:static volatile int32_t g_13 = 0x92F20920L;
        -:   18:static int32_t g_14 = (-1L);
        -:   19:static int64_t g_25[2] = {0xDEDC87A9B65CAB43LL, 0xDEDC87A9B65CAB43LL};
        -:   20:static uint64_t g_45 = 1UL;
        -:   21:
        -:   22:static int64_t func_1(void);
        -:   23:static int32_t ***func_6(int32_t **p_7);
        -:   24:
        1:   25:static int64_t func_1(void) {
        1:   26:  const int32_t *volatile *l_4 = (void *)0;
        1:   27:  const int32_t *volatile *l_5[4] = {&g_2, &g_2, &g_2, &g_2};
        -:   28:  int i;
        1:   29:  g_2 = g_2;
        5:   30:  for (g_3 = 3; (g_3 >= 0); g_3 -= 1) {
        4:   31:    int32_t ***l_47 = (void *)0;
        4:   32:    int32_t ****l_46 = &l_47;
        4:   33:    (*l_46) = func_6(g_8);
        -:   34:  }
        1:   35:  return g_45;
        -:   36:}
        -:   37:
        4:   38:static int32_t ***func_6(int32_t **p_7) {
        4:   39:  union U4 l_15 = {18446744073709551614UL};
        -:   40:  int32_t ***l_18[2];
        -:   41:  int i;
       12:   42:  for (i = 0; i < 2; i++)
        8:   43:    l_18[i] = &g_8;
       20:   44:  for (g_14 = 3; (g_14 >= 0); g_14 -= 1) {
       16:   45:    int32_t ***l_20 = &g_8;
       16:   46:    int32_t ****l_19 = &l_20;
       16:   47:    int64_t *l_23 = (void *)0;
       16:   48:    int64_t *l_24[4][3][5] = {{{&g_25[1], &g_25[0], &g_25[0], &g_25[0], &g_25[0]}, {(void *)0, &g_25[0], &g_25[0], (void *)0, &g_25[0]}, {&g_25[0], &g_25[0], &g_25[1], &g_25[0], &g_25[1]}}, {{&g_25[0], &g_25[1], &g_25[1], &g_25[0], &g_25[0]}, {(void *)0, &g_25[1], &g_25[0], &g_25[0], &g_25[0]}, {&g_25[1], &g_25[1], &g_25[1], &g_25[1], &g_25[0]}}, {{&g_25[0], &g_25[0], &g_25[1], &g_25[1], &g_25[0]}, {&g_25[1], &g_25[0], &g_25[0], (void *)0, &g_25[0]}, {&g_25[0], &g_25[1], &g_25[0], &g_25[0], &g_25[1]}}, {{&g_25[0], &g_25[1], &g_25[0], &g_25[0], &g_25[1]}, {&g_25[0], &g_25[0], (void *)0, &g_25[1], &g_25[0]}, {&g_25[1], &g_25[1], &g_25[0], &g_25[1], &g_25[1]}}};
       16:   49:    uint32_t l_30 = 0x111919B1L;
        -:   50:    int32_t l_31[4];
       16:   51:    uint8_t l_44 = 255UL;
        -:   52:    int i, j, k;
       80:   53:    for (i = 0; i < 4; i++)
       64:   54:      l_31[i] = 1L;
       16:   55:    g_12 = (l_15, (safe_lshift_func_int64_t_s_s((l_18[0] != ((*l_19) = &p_7)), ((-4L) <= (l_31[2] = (safe_mod_func_uint16_t_u_u(((((g_25[0] = g_10[g_14]) == 0x47B6C411E69D0863LL) != ((*g_2) == g_3)) > ((safe_sub_func_uint16_t_u_u(((safe_sub_func_uint32_t_u_u((l_30 != g_3), g_14)) ^ g_3), g_10[2])) < g_10[2])), 1L)))))));
      16*:   56:    g_45 &= (safe_mod_func_int32_t_s_s(0x4F7D9FD5L, (safe_mul_func_uint32_t_u_u(((**p_7) ^ g_25[1]), ((safe_div_func_int64_t_s_s(((safe_div_func_uint8_t_u_u(((((g_12 < ((safe_rshift_func_int8_t_s_u((safe_mul_func_int32_t_s_s((g_25[0], (g_25[0], (-9L))), (**g_8))), 1)) ^ (g_25[0] | g_3))) > l_44) > g_25[0]) && g_25[1]), g_14)), g_12), 9UL)), (-2L))))));
        -:   57:  }
        4:   58:  return l_18[0];
        -:   59:}
        -:   60:
        1:   61:int main(int argc, char *argv[]) {
        -:   62:  int i;
        1:   63:  int print_hash_value = 0;
       1*:   64:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   65:    print_hash_value = 1;
        1:   66:  platform_main_begin();
        1:   67:  crc32_gentab();
        1:   68:  func_1();
        1:   69:  transparent_crc(g_3, "g_3", print_hash_value);
        5:   70:  for (i = 0; i < 4; i++) {
        4:   71:    transparent_crc(g_10[i], "g_10[i]", print_hash_value);
        4:   72:    if (print_hash_value)
    #####:   73:      printf("index = [%d]\n", i);
        -:   74:  }
        1:   75:  transparent_crc(g_11, "g_11", print_hash_value);
        1:   76:  transparent_crc(g_12, "g_12", print_hash_value);
        1:   77:  transparent_crc(g_13, "g_13", print_hash_value);
        1:   78:  transparent_crc(g_14, "g_14", print_hash_value);
        3:   79:  for (i = 0; i < 2; i++) {
        2:   80:    transparent_crc(g_25[i], "g_25[i]", print_hash_value);
        2:   81:    if (print_hash_value)
    #####:   82:      printf("index = [%d]\n", i);
        -:   83:  }
        1:   84:  transparent_crc(g_45, "g_45", print_hash_value);
        1:   85:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   86:  return 0;
        -:   87:}

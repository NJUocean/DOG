        -:    0:Source:772.c
        -:    0:Graph:772.gcno
        -:    0:Data:772.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  const volatile int32_t f0;
        -:   10:  volatile uint16_t f1;
        -:   11:};
        -:   12:#pragma pack(pop)
        -:   13:
        -:   14:union U4 {
        -:   15:  const struct S0 f0;
        -:   16:  uint32_t f1;
        -:   17:  volatile uint16_t f2;
        -:   18:};
        -:   19:
        -:   20:static volatile union U4 g_8 = {{1L, 0x7257L}};
        -:   21:static int32_t g_18 = (-9L);
        -:   22:static int32_t *g_19 = &g_18;
        -:   23:static int16_t g_28 = (-1L);
        -:   24:static int32_t g_30 = (-1L);
        -:   25:static uint8_t g_39 = 255UL;
        -:   26:
        -:   27:static struct S0 func_1(void);
        -:   28:static int32_t *func_2(int8_t p_3, uint32_t p_4, int32_t *p_5);
        -:   29:
        1:   30:static struct S0 func_1(void) {
        1:   31:  int32_t l_16 = 0x5EC62BB2L;
        1:   32:  int32_t *l_17 = &g_18;
        1:   33:  int32_t *l_21[4] = {&g_18, &g_18, &g_18, &g_18};
        1:   34:  int32_t **l_20 = &l_21[0];
        1:   35:  int16_t *l_24 = (void *)0;
        1:   36:  int16_t *l_25 = (void *)0;
        1:   37:  int16_t *l_26 = (void *)0;
        1:   38:  int16_t *l_27 = &g_28;
        1:   39:  int8_t *l_29 = (void *)0;
        1:   40:  uint8_t *l_42 = &g_39;
        -:   41:  int i;
        1:   42:  (*l_20) = func_2((g_30 = (safe_rshift_func_uint32_t_u_s((g_8, (((safe_unary_minus_func_uint8_t_u(g_8.f0.f0)), g_8.f0.f0), (~((safe_mul_func_int32_t_s_s((((*l_27) = (g_8.f0.f1 >= (safe_add_func_uint8_t_u_u(((!(255UL ^ l_16)), ((((g_19 = l_17) == ((*l_20) = l_17)) >= (safe_add_func_int64_t_s_s((*l_17), 6L))) > g_18)), (*l_17))))), 0xBC254E7FL), g_18)) > (*l_17))))), g_18))), g_18, &g_18);
        5:   43:  for (g_18 = 10; (g_18 != (-14)); g_18 = safe_sub_func_uint32_t_u_u(g_18, 6)) {
        4:   44:    uint8_t *l_38 = &g_39;
        4:   45:    int32_t l_40[4][3][4] = {{{0xE3E4F6F4L, 0xE3E4F6F4L, (-10L), 1L}, {0x8D9A65C8L, 0L, 0x8D9A65C8L, (-10L)}, {0x8D9A65C8L, (-10L), (-10L), 0x8D9A65C8L}}, {{0xE3E4F6F4L, (-10L), 1L, (-10L)}, {(-10L), 0L, 1L, 1L}, {0xE3E4F6F4L, 0xE3E4F6F4L, (-10L), 1L}}, {{0x8D9A65C8L, 0L, 0x8D9A65C8L, (-10L)}, {0x8D9A65C8L, (-10L), (-10L), 0x8D9A65C8L}, {0xE3E4F6F4L, (-10L), 1L, (-10L)}}, {{(-10L), 0L, 1L, 1L}, {0xE3E4F6F4L, 0xE3E4F6F4L, 0x8D9A65C8L, 0L}, {1L, 0xE3E4F6F4L, 1L, 0x8D9A65C8L}}};
        -:   46:    uint8_t **l_41[5];
        4:   47:    int32_t **l_43 = &l_21[0];
        -:   48:    int8_t l_44[3];
        -:   49:    int i, j, k;
       24:   50:    for (i = 0; i < 5; i++)
       20:   51:      l_41[i] = &l_38;
       16:   52:    for (i = 0; i < 3; i++)
       12:   53:      l_44[i] = 0x3DL;
        4:   54:    l_40[1][1][2] = (safe_rshift_func_int64_t_s_u((((*l_38) = 0x5AL), (&g_39 != (void *)0)), 33));
        4:   55:    l_44[0] ^= ((((l_42 = &g_39) == (void *)0) && g_30) && (g_30 ^ ((l_43 != (void *)0) <= (*g_19))));
        -:   56:  }
        1:   57:  return g_8.f0;
        -:   58:}
        -:   59:
        1:   60:static int32_t *func_2(int8_t p_3, uint32_t p_4, int32_t *p_5) {
        1:   61:  uint8_t l_31[2][5] = {{255UL, 0x0DL, 0x0DL, 255UL, 1UL}, {255UL, 0x0DL, 0x0DL, 255UL, 1UL}};
        -:   62:  int i, j;
        1:   63:  --l_31[1][1];
        1:   64:  return &g_18;
        -:   65:}
        -:   66:
        1:   67:int main(int argc, char *argv[]) {
        1:   68:  int print_hash_value = 0;
       1*:   69:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   70:    print_hash_value = 1;
        1:   71:  platform_main_begin();
        1:   72:  crc32_gentab();
        1:   73:  func_1();
        1:   74:  transparent_crc(g_8.f0.f0, "g_8.f0.f0", print_hash_value);
        1:   75:  transparent_crc(g_8.f0.f1, "g_8.f0.f1", print_hash_value);
        1:   76:  transparent_crc(g_18, "g_18", print_hash_value);
        1:   77:  transparent_crc(g_28, "g_28", print_hash_value);
        1:   78:  transparent_crc(g_30, "g_30", print_hash_value);
        1:   79:  transparent_crc(g_39, "g_39", print_hash_value);
        1:   80:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   81:  return 0;
        -:   82:}

        -:    0:Source:917.c
        -:    0:Graph:917.gcno
        -:    0:Data:917.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int64_t g_2 = 0xF70AD6F2EE76F502LL;
        -:    7:static int32_t g_4[3][5] = {{0x158D32FFL, 0x158D32FFL, 0x158D32FFL, 0x158D32FFL, 0x158D32FFL}, {8L, (-1L), 8L, (-1L), 8L}, {0x158D32FFL, 0x158D32FFL, 0x158D32FFL, 0x158D32FFL, 0x158D32FFL}};
        -:    8:static volatile int16_t g_7 = 0x962EL;
        -:    9:static volatile int32_t g_22[3] = {8L, 8L, 8L};
        -:   10:static volatile int32_t g_23 = 1L;
        -:   11:static volatile int32_t g_24[2] = {0x4CA72CB5L, 0x4CA72CB5L};
        -:   12:static int32_t g_25 = 0xC7E7C0CEL;
        -:   13:static uint64_t g_29 = 18446744073709551615UL;
        -:   14:static uint32_t g_44[3] = {0xF3D0097EL, 0xF3D0097EL, 0xF3D0097EL};
        -:   15:static int32_t *volatile g_50[4][2] = {{&g_4[2][1], &g_4[2][1]}, {&g_4[2][1], &g_4[2][1]}, {&g_4[2][1], &g_4[2][1]}, {&g_4[2][1], &g_4[2][1]}};
        -:   16:static int32_t *volatile g_51[5] = {&g_4[2][1], &g_4[2][1], &g_4[2][1], &g_4[2][1], &g_4[2][1]};
        -:   17:static uint64_t g_69 = 0x7FF73186757AC12ALL;
        -:   18:static uint32_t g_76 = 0UL;
        -:   19:static uint16_t g_102 = 65531UL;
        -:   20:static int32_t g_105 = 1L;
        -:   21:static int16_t g_114[4] = {5L, 5L, 5L, 5L};
        -:   22:static uint16_t g_116 = 0xB077L;
        -:   23:
        -:   24:static const uint8_t func_1(void);
        -:   25:static uint32_t func_32(uint8_t p_33, uint32_t p_34, uint64_t p_35);
        -:   26:
        1:   27:static const uint8_t func_1(void) {
        1:   28:  int32_t *l_3 = &g_4[2][1];
        1:   29:  int32_t *l_5 = &g_4[2][2];
        1:   30:  int32_t *l_6 = &g_4[2][1];
        1:   31:  int32_t *l_8 = &g_4[1][0];
        1:   32:  int32_t *l_9 = (void *)0;
        1:   33:  int32_t *l_10 = &g_4[2][4];
        1:   34:  int32_t *l_11 = &g_4[2][1];
        1:   35:  int32_t *l_12 = &g_4[2][4];
        1:   36:  int32_t *l_13 = &g_4[2][1];
        1:   37:  int32_t *l_14 = (void *)0;
        1:   38:  int32_t *l_15 = &g_4[2][3];
        -:   39:  int32_t *l_16[1][2];
        1:   40:  uint8_t l_17 = 0x77L;
        1:   41:  int32_t l_115 = 0xA0586BC1L;
        -:   42:  int i, j;
        2:   43:  for (i = 0; i < 1; i++) {
        3:   44:    for (j = 0; j < 2; j++)
        2:   45:      l_16[i][j] = &g_4[2][1];
        -:   46:  }
        1:   47:  l_17++;
        1:   48:  for (l_17 = 18; (l_17 != 25); l_17++) {
        1:   49:    uint32_t l_109 = 1UL;
       1*:   50:    for (g_25 = (-1); (g_25 > 7); g_25 = safe_add_func_uint32_t_u_u(g_25, 2)) {
    #####:   51:      uint64_t *l_28 = &g_29;
        -:   52:      int32_t l_110[5];
    #####:   53:      int16_t *l_113 = &g_114[3];
        -:   54:      int i;
    #####:   55:      for (i = 0; i < 5; i++)
    #####:   56:        l_110[i] = 0xC8C67737L;
    #####:   57:      g_116 ^= (((*l_28) = g_2), (((safe_lshift_func_int16_t_s_s((func_32((*l_5), g_22[0], (4294967287UL < 0xCEDB1A73L)) & (l_109, ((l_110[2] != ((*l_113) &= (safe_rshift_func_int32_t_s_u((&g_102 != &g_102), g_105)))) | 0x09L))), 4)) > 0xCC0FEBE71B68C1B8LL), l_115));
        -:   58:    }
        1:   59:    return g_102;
        -:   60:  }
    #####:   61:  return g_4[2][1];
        -:   62:}
        -:   63:
    #####:   64:static uint32_t func_32(uint8_t p_33, uint32_t p_34, uint64_t p_35) {
        -:   65:  uint8_t l_36[1][3];
    #####:   66:  int32_t *l_41 = (void *)0;
    #####:   67:  uint32_t *l_42 = (void *)0;
    #####:   68:  uint32_t *l_43[4][4][4] = {{{(void *)0, (void *)0, &g_44[2], (void *)0}, {(void *)0, (void *)0, &g_44[2], (void *)0}, {&g_44[2], (void *)0, &g_44[2], &g_44[2]}, {(void *)0, (void *)0, (void *)0, (void *)0}}, {{(void *)0, &g_44[2], &g_44[2], (void *)0}, {&g_44[2], (void *)0, &g_44[2], &g_44[2]}, {(void *)0, (void *)0, (void *)0, (void *)0}, {(void *)0, &g_44[2], &g_44[2], (void *)0}}, {{&g_44[2], (void *)0, &g_44[2], &g_44[2]}, {(void *)0, (void *)0, (void *)0, (void *)0}, {(void *)0, &g_44[2], &g_44[2], (void *)0}, {&g_44[2], (void *)0, &g_44[2], &g_44[2]}}, {{(void *)0, (void *)0, (void *)0, (void *)0}, {(void *)0, &g_44[2], &g_44[2], (void *)0}, {&g_44[2], (void *)0, &g_44[2], &g_44[2]}, {(void *)0, (void *)0, (void *)0, (void *)0}}};
    #####:   69:  int32_t *l_52 = &g_4[2][1];
    #####:   70:  uint64_t *l_68 = &g_69;
    #####:   71:  uint64_t *l_80 = &g_69;
    #####:   72:  uint64_t **l_79 = &l_80;
        -:   73:  int i, j, k;
    #####:   74:  for (i = 0; i < 1; i++) {
    #####:   75:    for (j = 0; j < 3; j++)
    #####:   76:      l_36[i][j] = 253UL;
        -:   77:  }
    #####:   78:lbl_81:
    #####:   79:  (*l_52) = (l_36[0][2], ((safe_sub_func_int8_t_s_s(((0UL <= (safe_sub_func_int16_t_s_s(g_4[2][1], ((((void *)0 != l_41) && (g_44[2]++)) & (p_33 < (safe_rshift_func_uint32_t_u_s((!(-1L)), 24))))))), l_36[0][2]), g_22[2])) < p_33));
    #####:   80:  if ((((safe_mod_func_uint16_t_u_u((5UL || ((safe_sub_func_uint32_t_u_u((g_22[2] && ((((safe_mul_func_uint8_t_u_u((7UL <= ((((safe_sub_func_int64_t_s_s((p_34 ^ (safe_mod_func_uint64_t_u_u((g_29 = g_4[0][2]), (safe_mod_func_uint16_t_u_u(((+(((safe_lshift_func_uint64_t_u_u(p_34, (((*l_52), l_68) == ((*l_79) = (((safe_add_func_uint32_t_u_u((safe_lshift_func_int8_t_s_s((safe_mul_func_uint16_t_u_u((++g_76), p_33)), 5)), p_35)) < p_34), &p_35))))) != (*l_52)) ^ p_34)) & g_24[1]), 0x0B69L))))), g_44[1])) || g_7) ^ 8L) < g_44[2])), g_69)) == (-10L)) & p_35), g_24[1])), (*l_52))) & 1L)), 4L)) < p_35) == (*l_52))) {
    #####:   81:    if (p_35)
    #####:   82:      goto lbl_81;
    #####:   83:    (*l_52) |= (safe_rshift_func_int8_t_s_s(0x7BL, (((void *)0 == l_43[0][2][2]), ((3UL == 0x53C2L), (-1L)))));
        -:   84:  } else {
        -:   85:    int64_t l_88[2];
    #####:   86:    int64_t l_93 = 1L;
    #####:   87:    uint64_t *l_103 = &g_29;
        -:   88:    int i;
    #####:   89:    for (i = 0; i < 2; i++)
    #####:   90:      l_88[i] = 0x94FC7A55566EC8B7LL;
    #####:   91:    for (p_33 = (-6); (p_33 == 41); p_33++) {
    #####:   92:      int16_t l_100 = 6L;
    #####:   93:      uint16_t *l_101 = &g_102;
    #####:   94:      int32_t *l_104 = &g_105;
        -:   95:    }
        -:   96:  }
    #####:   97:  return (*l_52);
        -:   98:}
        -:   99:
        1:  100:int main(int argc, char *argv[]) {
        -:  101:  int i, j;
        1:  102:  int print_hash_value = 0;
       1*:  103:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  104:    print_hash_value = 1;
        1:  105:  platform_main_begin();
        1:  106:  crc32_gentab();
        1:  107:  func_1();
        1:  108:  transparent_crc(g_2, "g_2", print_hash_value);
        4:  109:  for (i = 0; i < 3; i++) {
       18:  110:    for (j = 0; j < 5; j++) {
       15:  111:      transparent_crc(g_4[i][j], "g_4[i][j]", print_hash_value);
       15:  112:      if (print_hash_value)
    #####:  113:        printf("index = [%d][%d]\n", i, j);
        -:  114:    }
        -:  115:  }
        1:  116:  transparent_crc(g_7, "g_7", print_hash_value);
        4:  117:  for (i = 0; i < 3; i++) {
        3:  118:    transparent_crc(g_22[i], "g_22[i]", print_hash_value);
        3:  119:    if (print_hash_value)
    #####:  120:      printf("index = [%d]\n", i);
        -:  121:  }
        1:  122:  transparent_crc(g_23, "g_23", print_hash_value);
        3:  123:  for (i = 0; i < 2; i++) {
        2:  124:    transparent_crc(g_24[i], "g_24[i]", print_hash_value);
        2:  125:    if (print_hash_value)
    #####:  126:      printf("index = [%d]\n", i);
        -:  127:  }
        1:  128:  transparent_crc(g_25, "g_25", print_hash_value);
        1:  129:  transparent_crc(g_29, "g_29", print_hash_value);
        4:  130:  for (i = 0; i < 3; i++) {
        3:  131:    transparent_crc(g_44[i], "g_44[i]", print_hash_value);
        3:  132:    if (print_hash_value)
    #####:  133:      printf("index = [%d]\n", i);
        -:  134:  }
        1:  135:  transparent_crc(g_69, "g_69", print_hash_value);
        1:  136:  transparent_crc(g_76, "g_76", print_hash_value);
        1:  137:  transparent_crc(g_102, "g_102", print_hash_value);
        1:  138:  transparent_crc(g_105, "g_105", print_hash_value);
        5:  139:  for (i = 0; i < 4; i++) {
        4:  140:    transparent_crc(g_114[i], "g_114[i]", print_hash_value);
        4:  141:    if (print_hash_value)
    #####:  142:      printf("index = [%d]\n", i);
        -:  143:  }
        1:  144:  transparent_crc(g_116, "g_116", print_hash_value);
        1:  145:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  146:  return 0;
        -:  147:}

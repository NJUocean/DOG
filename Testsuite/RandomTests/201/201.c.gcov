        -:    0:Source:201.c
        -:    0:Graph:201.gcno
        -:    0:Data:201.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U1 {
        -:    7:  volatile uint32_t f0;
        -:    8:  uint64_t f1;
        -:    9:  volatile uint8_t f2;
        -:   10:  const int32_t f3;
        -:   11:  volatile signed f4 : 4;
        -:   12:};
        -:   13:
        -:   14:union U3 {
        -:   15:  int8_t f0;
        -:   16:  uint64_t f1;
        -:   17:  uint8_t f2;
        -:   18:};
        -:   19:
        -:   20:union U5 {
        -:   21:  uint32_t f0;
        -:   22:  volatile int64_t f1;
        -:   23:  int32_t f2;
        -:   24:};
        -:   25:
        -:   26:static int32_t g_2 = 0x415D7249L;
        -:   27:static union U3 g_9[3][1][3] = {{{{0x59L}, {0x59L}, {0x59L}}}, {{{0x59L}, {0x59L}, {0x59L}}}, {{{0x59L}, {0x59L}, {0x59L}}}};
        -:   28:static union U1 g_12[5] = {{0x3D2717F4L}, {0x3D2717F4L}, {0x3D2717F4L}, {0x3D2717F4L}, {0x3D2717F4L}};
        -:   29:static int16_t g_18 = 1L;
        -:   30:static volatile union U5 g_29 = {0x718CE682L};
        -:   31:static volatile union U5 g_30 = {2UL};
        -:   32:static int8_t g_51 = (-1L);
        -:   33:static int8_t *g_52[4][4][5] = {{{&g_51, &g_51, &g_51, &g_51, &g_51}, {&g_51, &g_51, &g_51, &g_51, &g_51}, {&g_51, &g_51, &g_51, &g_51, &g_51}, {&g_51, &g_51, &g_51, &g_51, &g_51}}, {{&g_51, &g_51, &g_51, &g_51, &g_51}, {&g_51, &g_51, &g_51, &g_51, &g_51}, {&g_51, &g_51, &g_51, &g_51, &g_51}, {&g_51, &g_51, &g_51, &g_51, &g_51}}, {{&g_51, &g_51, &g_51, &g_51, &g_51}, {&g_51, &g_51, &g_51, &g_51, &g_51}, {&g_51, &g_51, &g_51, &g_51, &g_51}, {&g_51, &g_51, &g_51, &g_51, &g_51}}, {{&g_51, &g_51, &g_51, &g_51, &g_51}, {&g_51, &g_51, &g_51, &g_51, &g_51}, {&g_51, &g_51, &g_51, &g_51, &g_51}, {&g_51, &g_51, &g_51, &g_51, &g_51}}};
        -:   34:static uint32_t g_56 = 4294967287UL;
        -:   35:static uint16_t g_58 = 0x14C3L;
        -:   36:static volatile int32_t g_63[4] = {6L, 6L, 6L, 6L};
        -:   37:static uint32_t g_97 = 0UL;
        -:   38:
        -:   39:static int32_t func_1(void);
        -:   40:static int32_t *func_6(union U3 p_7, int32_t *p_8);
        -:   41:
        1:   42:static int32_t func_1(void) {
        1:   43:  int8_t *l_53 = &g_51;
        -:   44:  int32_t l_67[4];
        1:   45:  int32_t l_68 = 0x05D1EE04L;
        1:   46:  int32_t l_70 = 0xC7CD66DAL;
        1:   47:  int32_t l_98 = 0xDCBE86AEL;
        -:   48:  int i;
        5:   49:  for (i = 0; i < 4; i++)
        4:   50:    l_67[i] = 0x499195F9L;
       1*:   51:  for (g_2 = 0; (g_2 > 20); g_2 = safe_add_func_int64_t_s_s(g_2, 4)) {
    #####:   52:    uint32_t l_5 = 0xFE23A266L;
    #####:   53:    int8_t *l_50 = &g_51;
    #####:   54:    int32_t l_62 = 0xCC2A30E0L;
    #####:   55:    int32_t l_65[5][3] = {{0L, 0L, 0L}, {(-6L), (-6L), (-6L)}, {0L, 0L, 0L}, {(-6L), (-6L), (-6L)}, {0L, 0L, 0L}};
    #####:   56:    uint32_t *l_78 = (void *)0;
    #####:   57:    uint32_t *l_79 = &g_56;
    #####:   58:    uint32_t *l_96 = &g_97;
        -:   59:    int i, j;
        -:   60:  }
        1:   61:  return l_67[1];
        -:   62:}
        -:   63:
    #####:   64:static int32_t *func_6(union U3 p_7, int32_t *p_8) {
    #####:   65:  int16_t *l_17 = &g_18;
    #####:   66:  int32_t l_24 = 0x94DFD996L;
    #####:   67:  int32_t *l_25[4][5] = {{(void *)0, &g_2, &g_2, (void *)0, &g_2}, {&l_24, &l_24, &l_24, &l_24, &l_24}, {&g_2, (void *)0, &g_2, &g_2, (void *)0}, {&l_24, &l_24, &l_24, &l_24, &l_24}};
    #####:   68:  int8_t *l_31[1][3][2] = {{{&g_9[1][0][2].f0, &g_9[1][0][2].f0}, {&g_9[1][0][2].f0, &g_9[1][0][2].f0}, {&g_9[1][0][2].f0, &g_9[1][0][2].f0}}};
    #####:   69:  uint64_t l_32 = 0xF3E63D4D864B91BFLL;
        -:   70:  int i, j, k;
    #####:   71:  g_12[3].f4 = (safe_add_func_int16_t_s_s(p_7.f0, ((g_12[3], (safe_rshift_func_uint16_t_u_s((!((g_12[3], (~g_12[3].f0)) >= g_9[1][0][2].f0)), 10))) == ((((*l_17) = (-4L)) > (+(0x6EF3B063L == ((safe_rshift_func_int16_t_s_s(0xD2E9L, 12)) < ((safe_mul_func_uint8_t_u_u((((g_9[1][0][2].f0 & l_24) | 1UL) > p_7.f0), 0xC4L)) ^ l_24))))) < 8UL))));
    #####:   72:  g_12[3].f4 = (0UL >= (((0xA6L > (p_7.f0 = ((((~p_7.f0) > ((safe_div_func_int64_t_s_s(0xF0A061FA46B4C01FLL, 0x3A798BE49C906054LL)) > (g_2 > ((g_29, (g_30, p_8)) == p_8)))) < p_7.f0) >= 1UL))) ^ 0x2628L) <= l_32));
    #####:   73:  return p_8;
        -:   74:}
        -:   75:
        1:   76:int main(int argc, char *argv[]) {
        -:   77:  int i, j, k;
        1:   78:  int print_hash_value = 0;
       1*:   79:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   80:    print_hash_value = 1;
        1:   81:  platform_main_begin();
        1:   82:  crc32_gentab();
        1:   83:  func_1();
        1:   84:  transparent_crc(g_2, "g_2", print_hash_value);
        4:   85:  for (i = 0; i < 3; i++) {
        6:   86:    for (j = 0; j < 1; j++) {
       12:   87:      for (k = 0; k < 3; k++) {
        9:   88:        transparent_crc(g_9[i][j][k].f0, "g_9[i][j][k].f0", print_hash_value);
        9:   89:        if (print_hash_value)
    #####:   90:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   91:      }
        -:   92:    }
        -:   93:  }
        6:   94:  for (i = 0; i < 5; i++) {
        5:   95:    transparent_crc(g_12[i].f0, "g_12[i].f0", print_hash_value);
        5:   96:    if (print_hash_value)
    #####:   97:      printf("index = [%d]\n", i);
        -:   98:  }
        1:   99:  transparent_crc(g_18, "g_18", print_hash_value);
        1:  100:  transparent_crc(g_29.f0, "g_29.f0", print_hash_value);
        1:  101:  transparent_crc(g_30.f0, "g_30.f0", print_hash_value);
        1:  102:  transparent_crc(g_51, "g_51", print_hash_value);
        1:  103:  transparent_crc(g_56, "g_56", print_hash_value);
        1:  104:  transparent_crc(g_58, "g_58", print_hash_value);
        5:  105:  for (i = 0; i < 4; i++) {
        4:  106:    transparent_crc(g_63[i], "g_63[i]", print_hash_value);
        4:  107:    if (print_hash_value)
    #####:  108:      printf("index = [%d]\n", i);
        -:  109:  }
        1:  110:  transparent_crc(g_97, "g_97", print_hash_value);
        1:  111:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  112:  return 0;
        -:  113:}

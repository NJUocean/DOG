        -:    0:Source:602.c
        -:    0:Graph:602.gcno
        -:    0:Data:602.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_2 = (-1L);
        -:    7:static int8_t g_19 = 0x72L;
        -:    8:static volatile int32_t g_30 = 1L;
        -:    9:static uint8_t g_32 = 1UL;
        -:   10:static int32_t g_33 = 0L;
        -:   11:static uint32_t g_34 = 4294967288UL;
        -:   12:static int8_t *g_45 = (void *)0;
        -:   13:static int32_t *g_59 = &g_33;
        -:   14:static int32_t **volatile g_58 = &g_59;
        -:   15:static int32_t g_78 = (-5L);
        -:   16:static int32_t g_84[3][1][4] = {{{(-1L), (-1L), (-1L), (-1L)}}, {{(-1L), (-1L), (-1L), (-1L)}}, {{(-1L), (-1L), (-1L), (-1L)}}};
        -:   17:static volatile uint16_t g_85 = 0UL;
        -:   18:
        -:   19:static uint32_t func_1(void);
        -:   20:static const int16_t func_5(uint32_t p_6, int32_t p_7, int8_t p_8, int32_t p_9);
        -:   21:
        1:   22:static uint32_t func_1(void) {
        1:   23:  int16_t l_10 = 0xA956L;
        1:   24:  int32_t *const l_57 = &g_2;
        1:   25:  uint8_t *l_76 = (void *)0;
        -:   26:  int32_t l_80[2];
        1:   27:  int32_t l_83 = 0x79E4B39CL;
        -:   28:  int i;
        3:   29:  for (i = 0; i < 2; i++)
        2:   30:    l_80[i] = 0xB453F477L;
       1*:   31:  for (g_2 = (-20); (g_2 > (-17)); g_2++) {
    #####:   32:    int32_t l_14[4] = {0L, 0L, 0L, 0L};
    #####:   33:    int8_t *l_18 = &g_19;
    #####:   34:    uint8_t *l_31 = &g_32;
    #####:   35:    int32_t l_56[4][3][3] = {{{(-4L), (-8L), 0x39980A6FL}, {0x44E0C42EL, 0x44E0C42EL, 0x37461BCFL}, {(-8L), (-4L), 0x39980A6FL}}, {{(-8L), 1L, 0x37461BCFL}, {0x0E206F6EL, 0x0E206F6EL, 0x39980A6FL}, {1L, (-8L), 0x37461BCFL}}, {{(-4L), (-8L), 0x39980A6FL}, {0x44E0C42EL, 0x44E0C42EL, 0x37461BCFL}, {(-8L), (-4L), 0x39980A6FL}}, {{(-8L), 1L, 0x37461BCFL}, {0x5AB95DFEL, 0x5AB95DFEL, 0x0E206F6EL}, {0x9BABE4A9L, 1L, 0x44E0C42EL}}};
        -:   36:    int i, j, k;
    #####:   37:    l_56[3][2][2] |= (func_5(l_10, (((((safe_mod_func_int32_t_s_s(0x7516A205L, (safe_unary_minus_func_uint32_t_u((l_14[3] != ((safe_rshift_func_uint64_t_u_s((!(((*l_18) = 0xF6L) ^ 253UL)), 55)) != ((safe_rshift_func_int8_t_s_s((safe_sub_func_uint8_t_u_u(g_2, g_2)), 0)), ((*l_31) = (safe_div_func_uint16_t_u_u((g_2 <= ((safe_rshift_func_int16_t_s_s((safe_div_func_uint32_t_u_u((g_2, 0UL), (-8L))), g_2)) ^ 18446744073709551615UL)), g_30)))))))))) & 4294967290UL), l_14[3]) > l_10) < g_2), l_10, l_10) && 1UL);
    #####:   38:    (*g_58) = l_57;
        -:   39:  }
       1*:   40:  for (l_10 = 0; (l_10 > 2); l_10 = safe_add_func_int32_t_s_s(l_10, 2)) {
    #####:   41:    uint8_t l_72 = 249UL;
    #####:   42:    int32_t *l_77 = &g_78;
    #####:   43:    int32_t *l_79 = &g_33;
    #####:   44:    int32_t *l_81 = &l_80[1];
        -:   45:    int32_t *l_82[2];
        -:   46:    int i;
    #####:   47:    for (i = 0; i < 2; i++)
    #####:   48:      l_82[i] = &l_80[1];
    #####:   49:    (*l_77) ^= (((((safe_div_func_int32_t_s_s((safe_sub_func_int8_t_s_s((safe_mul_func_int8_t_s_s(((void *)0 == &g_19), (0UL < (-1L)))), ((safe_mod_func_int8_t_s_s((g_19 ^ (safe_lshift_func_int8_t_s_s(l_72, ((!(0xC3F40837L == (((safe_sub_func_uint16_t_u_u(0xF1D3L, (*l_57))), l_76) == (void *)0))) > (*l_57))))), l_72)) && l_72))), 1L)) <= 1L) >= (*g_59)) <= g_2), (*g_59));
    #####:   50:    ++g_85;
        -:   51:  }
        1:   52:  return g_2;
        -:   53:}
        -:   54:
    #####:   55:static const int16_t func_5(uint32_t p_6, int32_t p_7, int8_t p_8, int32_t p_9) {
    #####:   56:  uint64_t l_41 = 1UL;
    #####:   57:  int8_t *l_44 = &g_19;
    #####:   58:  uint32_t *l_54 = &g_34;
    #####:   59:  int32_t *l_55 = (void *)0;
    #####:   60:  p_9 = (((--g_34), (safe_rshift_func_int32_t_s_u((safe_mod_func_int64_t_s_s(((l_41 && (g_19 | ((safe_mod_func_uint8_t_u_u(l_41, ((&g_32 == ((((g_45 = l_44) == &p_8) | g_34), l_44)) || ((safe_mod_func_int16_t_s_s((((safe_rshift_func_uint64_t_u_s((safe_lshift_func_uint8_t_u_s((safe_add_func_uint32_t_u_u(((*l_54) = ((p_9 && l_41), 0x6DAE1DC6L)), g_30)), 7)), l_41)) ^ g_33) != (*g_45)), 0x1700L)) && 1UL)))) > g_2))) ^ p_7), l_41)), 29))) & 0xC9AA6F57L);
    #####:   61:  return l_41;
        -:   62:}
        -:   63:
        1:   64:int main(int argc, char *argv[]) {
        -:   65:  int i, j, k;
        1:   66:  int print_hash_value = 0;
       1*:   67:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   68:    print_hash_value = 1;
        1:   69:  platform_main_begin();
        1:   70:  crc32_gentab();
        1:   71:  func_1();
        1:   72:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   73:  transparent_crc(g_19, "g_19", print_hash_value);
        1:   74:  transparent_crc(g_30, "g_30", print_hash_value);
        1:   75:  transparent_crc(g_32, "g_32", print_hash_value);
        1:   76:  transparent_crc(g_33, "g_33", print_hash_value);
        1:   77:  transparent_crc(g_34, "g_34", print_hash_value);
        1:   78:  transparent_crc(g_78, "g_78", print_hash_value);
        4:   79:  for (i = 0; i < 3; i++) {
        6:   80:    for (j = 0; j < 1; j++) {
       15:   81:      for (k = 0; k < 4; k++) {
       12:   82:        transparent_crc(g_84[i][j][k], "g_84[i][j][k]", print_hash_value);
       12:   83:        if (print_hash_value)
    #####:   84:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   85:      }
        -:   86:    }
        -:   87:  }
        1:   88:  transparent_crc(g_85, "g_85", print_hash_value);
        1:   89:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   90:  return 0;
        -:   91:}

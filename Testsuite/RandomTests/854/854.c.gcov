        -:    0:Source:854.c
        -:    0:Graph:854.gcno
        -:    0:Data:854.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static uint8_t g_7 = 0xAFL;
        -:    7:static int64_t g_32 = 0x8D2321210CBEDFA9LL;
        -:    8:static int64_t g_34[2][1] = {{(-10L)}, {(-10L)}};
        -:    9:static int16_t g_45 = 1L;
        -:   10:static int16_t g_48 = (-1L);
        -:   11:static int32_t g_50 = (-1L);
        -:   12:static int32_t *volatile g_49 = &g_50;
        -:   13:static int32_t *g_53 = (void *)0;
        -:   14:static int32_t **volatile g_52 = &g_53;
        -:   15:static volatile uint16_t g_80 = 0UL;
        -:   16:
        -:   17:static uint16_t func_1(void);
        -:   18:static uint32_t func_18(uint8_t p_19, uint32_t p_20, int8_t p_21, uint32_t p_22);
        -:   19:
        1:   20:static uint16_t func_1(void) {
        1:   21:  int32_t l_2 = 5L;
        1:   22:  int32_t l_17 = 0x40C18AB9L;
        1:   23:  if (l_2) {
        1:   24:    uint32_t l_14 = 0x58BDFADFL;
        1:   25:    int64_t *l_31 = &g_32;
        1:   26:    int64_t *l_33[5] = {&g_34[0][0], &g_34[0][0], &g_34[0][0], &g_34[0][0], &g_34[0][0]};
        1:   27:    int16_t *l_44[4][2] = {{&g_45, (void *)0}, {&g_45, (void *)0}, {&g_45, (void *)0}, {&g_45, (void *)0}};
        1:   28:    int32_t l_46[4] = {0x615A0349L, 0x615A0349L, 0x615A0349L, 0x615A0349L};
        -:   29:    uint64_t l_47[3];
        -:   30:    int i, j;
        4:   31:    for (i = 0; i < 3; i++)
        3:   32:      l_47[i] = 0x6A6B93DCEDB1A73BLL;
        1:   33:    (*g_49) &= (safe_rshift_func_int64_t_s_u((g_48 = (safe_sub_func_int8_t_s_s(g_7, ((((((((safe_mod_func_uint32_t_u_u(((l_2 > (safe_mod_func_int32_t_s_s((safe_mod_func_int64_t_s_s((l_14, (g_34[1][0] = (((*l_31) = ((safe_lshift_func_int16_t_s_u((l_46[3] &= (((l_17 = (-1L)) | func_18((g_7, g_7), (safe_lshift_func_int16_t_s_u(((safe_sub_func_int8_t_s_s((safe_div_func_int32_t_s_s(l_14, ((g_34[1][0] = ((*l_31) = (((((((safe_mod_func_uint8_t_u_u((l_2 <= g_7), 0x74L)) | 0xC099L) != g_7) != 0x4ADCL), g_7) | l_2), l_2))), g_34[0][0]))), l_2)), l_2), g_7)), g_7, g_7)), l_14)), l_47[1])) ^ (-2L))) >= 1L))), 7UL)), g_45))) ^ g_7), g_7)), 0x19L) == g_45) < g_7) <= g_7) ^ g_45), 1UL), 0x31L)))), 0));
        -:   34:  } else {
    #####:   35:    int32_t *l_51 = (void *)0;
    #####:   36:    (*g_52) = l_51;
    #####:   37:    for (g_48 = 0; (g_48 == 8); ++g_48) {
    #####:   38:      int32_t *l_56 = &l_17;
    #####:   39:      int32_t **l_83 = &l_56;
    #####:   40:      if (((*l_56) = (*g_49))) {
    #####:   41:        int32_t **l_57 = &l_56;
    #####:   42:        (*l_56) &= (-5L);
    #####:   43:        (*l_57) = (void *)0;
        -:   44:      } else {
    #####:   45:        int32_t *l_60 = &g_50;
    #####:   46:        int32_t *l_61 = &g_50;
    #####:   47:        int32_t *l_62 = &l_17;
    #####:   48:        int32_t *l_63 = &g_50;
    #####:   49:        int32_t *l_64 = &l_17;
    #####:   50:        int32_t *l_65 = (void *)0;
    #####:   51:        int32_t *l_66 = (void *)0;
    #####:   52:        int32_t *l_67 = &g_50;
    #####:   53:        int32_t *l_68 = &g_50;
        -:   54:        int32_t l_69[1];
    #####:   55:        int32_t *l_70 = (void *)0;
    #####:   56:        int32_t *l_71 = &g_50;
    #####:   57:        int32_t *l_72 = &l_2;
    #####:   58:        int32_t *l_73 = (void *)0;
    #####:   59:        int32_t *l_74 = (void *)0;
    #####:   60:        int32_t *l_75 = &g_50;
    #####:   61:        int32_t *l_76 = &l_17;
    #####:   62:        int32_t *l_77 = &l_17;
    #####:   63:        int32_t *l_78 = &l_2;
        -:   64:        int32_t *l_79[1];
        -:   65:        int i;
    #####:   66:        for (i = 0; i < 1; i++)
    #####:   67:          l_69[i] = 0xEB03C758L;
    #####:   68:        for (i = 0; i < 1; i++)
    #####:   69:          l_79[i] = &l_17;
    #####:   70:        (*l_56) |= (!(~g_34[0][0]));
    #####:   71:        --g_80;
        -:   72:      }
    #####:   73:      l_51 = ((*l_83) = (*g_52));
        -:   74:    }
        -:   75:  }
        1:   76:  return g_7;
        -:   77:}
        -:   78:
        1:   79:static uint32_t func_18(uint8_t p_19, uint32_t p_20, int8_t p_21, uint32_t p_22) {
        1:   80:  int32_t l_43 = 1L;
       1*:   81:  for (g_32 = 0; (g_32 == 20); g_32 = safe_add_func_int32_t_s_s(g_32, 6)) {
    #####:   82:    for (p_19 = 20; (p_19 > 40); p_19 = safe_add_func_int32_t_s_s(p_19, 4)) {
    #####:   83:      for (p_21 = 9; (p_21 < 11); p_21++) {
    #####:   84:        int64_t **l_42 = (void *)0;
    #####:   85:        int64_t ***l_41 = &l_42;
    #####:   86:        (*l_41) = (void *)0;
        -:   87:      }
        -:   88:    }
        -:   89:  }
        1:   90:  l_43 = g_34[0][0];
        1:   91:  return g_32;
        -:   92:}
        -:   93:
        1:   94:int main(int argc, char *argv[]) {
        -:   95:  int i, j;
        1:   96:  int print_hash_value = 0;
       1*:   97:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   98:    print_hash_value = 1;
        1:   99:  platform_main_begin();
        1:  100:  crc32_gentab();
        1:  101:  func_1();
        1:  102:  transparent_crc(g_7, "g_7", print_hash_value);
        1:  103:  transparent_crc(g_32, "g_32", print_hash_value);
        3:  104:  for (i = 0; i < 2; i++) {
        4:  105:    for (j = 0; j < 1; j++) {
        2:  106:      transparent_crc(g_34[i][j], "g_34[i][j]", print_hash_value);
        2:  107:      if (print_hash_value)
    #####:  108:        printf("index = [%d][%d]\n", i, j);
        -:  109:    }
        -:  110:  }
        1:  111:  transparent_crc(g_45, "g_45", print_hash_value);
        1:  112:  transparent_crc(g_48, "g_48", print_hash_value);
        1:  113:  transparent_crc(g_50, "g_50", print_hash_value);
        1:  114:  transparent_crc(g_80, "g_80", print_hash_value);
        1:  115:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  116:  return 0;
        -:  117:}

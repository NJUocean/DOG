        -:    0:Source:54.c
        -:    0:Graph:54.gcno
        -:    0:Data:54.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_2 = 3L;
        -:    7:static volatile int32_t g_3 = 0xAD6F2EE7L;
        -:    8:static int32_t g_4 = 8L;
        -:    9:static uint32_t g_32 = 0x95A2E712L;
        -:   10:static int8_t g_36[5] = {2L, 2L, 2L, 2L, 2L};
        -:   11:static int64_t g_41 = 0L;
        -:   12:static int64_t *g_40 = &g_41;
        -:   13:static int32_t g_44 = (-3L);
        -:   14:static int32_t *g_46 = &g_44;
        -:   15:static int32_t *g_67 = &g_4;
        -:   16:static int32_t g_102[3][3] = {{(-1L), (-1L), (-1L)}, {0xC85B7F5DL, 0xC85B7F5DL, 0xC85B7F5DL}, {(-1L), (-1L), (-1L)}};
        -:   17:
        -:   18:static int32_t func_1(void);
        -:   19:static int32_t func_9(const int16_t p_10, uint16_t p_11);
        -:   20:
        1:   21:static int32_t func_1(void) {
        1:   22:  int32_t l_14 = (-1L);
        1:   23:  int32_t l_47 = (-1L);
        1:   24:  int8_t l_97 = 0L;
        1:   25:  int32_t l_98 = 0x5E3094FCL;
        1:   26:  int8_t l_99 = 0x16L;
        1:   27:  for (g_4 = 0; (g_4 > 13); g_4++) {
    #####:   28:    uint32_t l_30 = 18446744073709551615UL;
    #####:   29:    uint32_t *l_31[3][5][2] = {{{&g_32, &g_32}, {&g_32, (void *)0}, {&g_32, &g_32}, {&g_32, (void *)0}, {&g_32, &g_32}}, {{&g_32, (void *)0}, {&g_32, &g_32}, {&g_32, (void *)0}, {&g_32, &g_32}, {&g_32, (void *)0}}, {{&g_32, &g_32}, {&g_32, (void *)0}, {&g_32, &g_32}, {&g_32, (void *)0}, {&g_32, &g_32}}};
    #####:   30:    uint32_t *l_33 = &g_32;
    #####:   31:    int8_t *l_34 = (void *)0;
    #####:   32:    int8_t *l_35 = &g_36[2];
    #####:   33:    int32_t l_37 = 1L;
    #####:   34:    int64_t *l_38 = (void *)0;
    #####:   35:    int32_t l_39 = (-9L);
    #####:   36:    int32_t *l_60 = &l_47;
        -:   37:    int i, j, k;
    #####:   38:    if ((l_47 = (0x52C58FB770A77C87LL != (safe_add_func_int32_t_s_s((func_9((((((safe_lshift_func_int16_t_s_s(l_14, (safe_rshift_func_int64_t_s_s((l_39 ^= (g_3 || (safe_div_func_int64_t_s_s(((safe_div_func_uint32_t_u_u((l_37 = (((safe_mul_func_int8_t_s_s(((safe_mul_func_uint16_t_u_u((((safe_unary_minus_func_uint32_t_u(((g_2, l_14) || ((((*l_35) = (((safe_div_func_int16_t_s_s((safe_mul_func_int32_t_s_s(((l_30 ^ (((g_32 |= g_4), 18446744073709551613UL), (l_33 != &g_32))) <= 0x874ACC0136EF6F0CLL), g_3)), l_30)), g_4) != g_4)) | 0xA8L) != l_14)))) || l_30), l_30), l_30)) || 1UL), g_4)) != l_30) ^ g_4)), l_30)) > l_14), 1L)))), l_30)))) && 255UL) >= g_4) || 1UL) & 3UL), g_4) && l_39), (-2L)))))) {
    #####:   39:      uint32_t l_48 = 0x2EFAADADL;
    #####:   40:      int8_t **l_51 = &l_35;
        -:   41:      int32_t *l_54[2][4];
    #####:   42:      uint16_t l_55 = 0x8146L;
        -:   43:      int i, j;
    #####:   44:      for (i = 0; i < 2; i++) {
    #####:   45:        for (j = 0; j < 4; j++)
    #####:   46:          l_54[i][j] = &l_47;
        -:   47:      }
    #####:   48:      (*g_46) |= ((g_36[2] = g_4), ((l_14 == l_48) & (safe_mod_func_int16_t_s_s(((((*l_51) = (void *)0) == &g_36[2]), g_36[4]), (safe_lshift_func_int8_t_s_s(((void *)0 != &g_32), 4))))));
    #####:   49:      l_55--;
        -:   50:    } else {
        -:   51:      int32_t **l_61 = &g_46;
        -:   52:      for (g_32 = 0; (g_32 < 45); ++g_32) {
        -:   53:        l_60 = &g_4;
        -:   54:        if ((*g_46))
        -:   55:          continue;
        -:   56:      }
        -:   57:      (*l_61) = &g_44;
        -:   58:    }
    #####:   59:    return g_44;
        -:   60:  }
        1:   61:  if (((*g_46) = (*g_46))) {
        1:   62:    int8_t l_68[2][2][2] = {{{0xB0L, 0xB0L}, {0xB0L, 0xB0L}}, {{0xB0L, 0xB0L}, {0xB0L, 0xB0L}}};
        -:   63:    int i, j, k;
        2:   64:    for (g_41 = 0; (g_41 < 5); g_41 = safe_add_func_int64_t_s_s(g_41, 6)) {
        1:   65:      int32_t *l_64[2][1][3] = {{{&g_4, &g_4, &l_47}}, {{&g_4, &g_4, &l_47}}};
        -:   66:      int i, j, k;
        6:   67:      for (l_14 = 0; (l_14 <= 4); l_14 += 1) {
        5:   68:        int32_t **l_65 = &g_46;
        5:   69:        int32_t **l_66[5][2] = {{&l_64[0][0][0], &l_64[0][0][1]}, {(void *)0, &l_64[0][0][1]}, {&l_64[0][0][0], (void *)0}, {&l_64[0][0][1], &l_64[0][0][1]}, {&l_64[0][0][1], (void *)0}};
        -:   70:        int i, j;
        5:   71:        g_67 = ((*l_65) = l_64[0][0][1]);
        -:   72:      }
        -:   73:    }
        1:   74:    (*g_46) ^= l_68[1][1][0];
        -:   75:  } else {
    #####:   76:    int8_t l_78 = 0x57L;
        -:   77:    const uint32_t l_100[4][5] = {{18446744073709551608UL, 0xDB06F5C0L, 0xDB06F5C0L, 18446744073709551608UL, 0xDB06F5C0L}, {18446744073709551608UL, 18446744073709551608UL, 0UL, 18446744073709551608UL, 18446744073709551608UL}, {0xDB06F5C0L, 18446744073709551608UL, 0xDB06F5C0L, 0xDB06F5C0L, 18446744073709551608UL}, {18446744073709551608UL, 0xDB06F5C0L, 0xDB06F5C0L, 18446744073709551608UL, 0xDB06F5C0L}};
    #####:   78:    int32_t *l_101 = &g_102[0][1];
        -:   79:    int i, j;
    #####:   80:    for (g_44 = (-28); (g_44 == 23); g_44++) {
        -:   81:      uint32_t l_73[5];
        -:   82:      int i;
    #####:   83:      for (i = 0; i < 5; i++)
    #####:   84:        l_73[i] = 1UL;
    #####:   85:      for (l_47 = (-18); (l_47 == (-16)); l_47++) {
    #####:   86:        if (l_73[2])
    #####:   87:          break;
        -:   88:      }
        -:   89:    }
    #####:   90:    (*l_101) ^= (safe_rshift_func_uint8_t_u_u((((safe_mul_func_int64_t_s_s((0x9DL || l_78), ((((g_41, ((safe_mod_func_int16_t_s_s((safe_mul_func_int16_t_s_s((g_36[1] != (safe_mod_func_int32_t_s_s(((((safe_div_func_uint64_t_u_u(((g_36[2] < (safe_sub_func_uint64_t_u_u(g_44, (((((safe_div_func_uint16_t_u_u((safe_rshift_func_uint8_t_u_u(((safe_rshift_func_int32_t_s_s((((safe_lshift_func_uint32_t_u_s((0x3BL & ((g_3, (((((l_47 && g_4) != 0xEA79F159E9DC621CLL) == 0xD762L) > g_2), g_2)), 0xC8L)), 21)) && 0x3B6D63D4L) ^ l_97), 12)) | 0x0B167AC4L), l_98)), 0xC8B7L)) || 5L) != g_36[2]) <= g_36[2]), g_36[1])))) ^ (-4L)), l_14)) <= (*g_40)) == 3UL) != g_4), g_36[4]))), 0x2FCFL)), g_36[1])) && 0xF3L)) != l_78) == l_99) <= 0x2562E968F5B2801FLL))) && l_100[3][3]) ^ l_14), 3));
        -:   91:  }
        1:   92:  return g_4;
        -:   93:}
        -:   94:
    #####:   95:static int32_t func_9(const int16_t p_10, uint16_t p_11) {
    #####:   96:  int64_t **l_42 = &g_40;
    #####:   97:  int32_t *l_43 = &g_44;
    #####:   98:  int32_t **l_45[4] = {&l_43, &l_43, &l_43, &l_43};
        -:   99:  int i;
    #####:  100:  (*l_43) = (((*l_42) = g_40) != (void *)0);
    #####:  101:  g_46 = l_43;
    #####:  102:  return (*g_46);
        -:  103:}
        -:  104:
        1:  105:int main(int argc, char *argv[]) {
        -:  106:  int i, j;
        1:  107:  int print_hash_value = 0;
       1*:  108:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  109:    print_hash_value = 1;
        1:  110:  platform_main_begin();
        1:  111:  crc32_gentab();
        1:  112:  func_1();
        1:  113:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  114:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  115:  transparent_crc(g_4, "g_4", print_hash_value);
        1:  116:  transparent_crc(g_32, "g_32", print_hash_value);
        6:  117:  for (i = 0; i < 5; i++) {
        5:  118:    transparent_crc(g_36[i], "g_36[i]", print_hash_value);
        5:  119:    if (print_hash_value)
    #####:  120:      printf("index = [%d]\n", i);
        -:  121:  }
        1:  122:  transparent_crc(g_41, "g_41", print_hash_value);
        1:  123:  transparent_crc(g_44, "g_44", print_hash_value);
        4:  124:  for (i = 0; i < 3; i++) {
       12:  125:    for (j = 0; j < 3; j++) {
        9:  126:      transparent_crc(g_102[i][j], "g_102[i][j]", print_hash_value);
        9:  127:      if (print_hash_value)
    #####:  128:        printf("index = [%d][%d]\n", i, j);
        -:  129:    }
        -:  130:  }
        1:  131:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  132:  return 0;
        -:  133:}

        -:    0:Source:457.c
        -:    0:Graph:457.gcno
        -:    0:Data:457.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  volatile unsigned f0 : 1;
        -:    8:  signed f1 : 18;
        -:    9:  unsigned f2 : 12;
        -:   10:};
        -:   11:
        -:   12:struct S1 {
        -:   13:  uint32_t f0;
        -:   14:  int8_t f1;
        -:   15:  volatile int32_t f2;
        -:   16:  int8_t f3;
        -:   17:  volatile uint16_t f4;
        -:   18:};
        -:   19:
        -:   20:#pragma pack(push)
        -:   21:#pragma pack(1)
        -:   22:struct S2 {
        -:   23:  volatile int16_t f0;
        -:   24:  int16_t f1;
        -:   25:};
        -:   26:#pragma pack(pop)
        -:   27:
        -:   28:static volatile int32_t g_2 = 0x9CC14173L;
        -:   29:static int32_t g_3 = 2L;
        -:   30:static int32_t g_18 = 0xFBDE283BL;
        -:   31:static int16_t g_39 = 0x6232L;
        -:   32:static volatile uint32_t g_43 = 7UL;
        -:   33:static int32_t *g_51 = &g_3;
        -:   34:static int32_t *volatile *g_50 = &g_51;
        -:   35:static int32_t *volatile **volatile g_49[1] = {&g_50};
        -:   36:static int32_t *g_58 = &g_18;
        -:   37:static uint64_t g_60[3] = {0x07E09FA00A4EDB9DLL, 0x07E09FA00A4EDB9DLL, 0x07E09FA00A4EDB9DLL};
        -:   38:static volatile struct S0 g_65 = {0, -193, 41};
        -:   39:static int32_t *g_69 = &g_18;
        -:   40:static int32_t **g_68 = &g_69;
        -:   41:static int16_t g_80[2][3][3] = {{{0x3DE9L, 0x3DE9L, 0x3DE9L}, {0x5B36L, 0x285EL, 0x5B36L}, {0x3DE9L, 0x3DE9L, 0x3DE9L}}, {{0x5B36L, 0x285EL, 0x5B36L}, {0x3DE9L, 0x3DE9L, 0x3DE9L}, {0x5B36L, 0x285EL, 0x5B36L}}};
        -:   42:static struct S2 g_82 = {-7L, 0xE04BL};
        -:   43:static struct S2 *volatile g_81 = &g_82;
        -:   44:static struct S2 *volatile *volatile g_83[4] = {(void *)0, (void *)0, (void *)0, (void *)0};
        -:   45:static struct S2 *volatile *volatile g_84 = &g_81;
        -:   46:static struct S2 *g_88[5] = {&g_82, &g_82, &g_82, &g_82, &g_82};
        -:   47:static struct S2 **volatile g_87 = &g_88[1];
        -:   48:static int32_t *const ***g_93 = (void *)0;
        -:   49:static int32_t *const ****const volatile g_92 = &g_93;
        -:   50:static volatile struct S1 g_103 = {1UL, 0x0EL, -1L, 0x2BL, 65535UL};
        -:   51:static uint32_t g_110 = 0x8CB8F1E7L;
        -:   52:static struct S0 g_114 = {0, 225, 22};
        -:   53:static struct S0 *volatile g_113 = &g_114;
        -:   54:static struct S2 g_115 = {0x1148L, 0x2689L};
        -:   55:
        -:   56:static struct S2 func_1(void);
        -:   57:static struct S0 func_6(uint64_t p_7, uint16_t p_8, int16_t p_9);
        -:   58:
        1:   59:static struct S2 func_1(void) {
        1:   60:  uint8_t l_16 = 6UL;
        1:   61:  int32_t *l_21 = &g_3;
       1*:   62:  for (g_3 = 0; (g_3 > 14); g_3 = safe_add_func_int8_t_s_s(g_3, 8)) {
    #####:   63:    int32_t **l_34 = (void *)0;
    #####:   64:    uint8_t l_36 = 0UL;
        -:   65:  }
        1:   66:  return g_115;
        -:   67:}
        -:   68:
    #####:   69:static struct S0 func_6(uint64_t p_7, uint16_t p_8, int16_t p_9) {
    #####:   70:  int32_t *l_40 = (void *)0;
    #####:   71:  int32_t *l_41 = (void *)0;
        -:   72:  int32_t *l_42[2][1];
    #####:   73:  int16_t *l_46 = &g_39;
    #####:   74:  struct S2 *const l_86 = (void *)0;
        -:   75:  int i, j;
    #####:   76:  for (i = 0; i < 2; i++) {
    #####:   77:    for (j = 0; j < 1; j++)
    #####:   78:      l_42[i][j] = &g_18;
        -:   79:  }
    #####:   80:lbl_102:
    #####:   81:  g_43--;
    #####:   82:  if (((void *)0 == l_46)) {
    #####:   83:    int16_t l_52 = 0xBD8EL;
    #####:   84:    int32_t l_53[3][2] = {{0xBF39352AL, 0xBF39352AL}, {7L, 0xBF39352AL}, {0xBF39352AL, 7L}};
    #####:   85:    int32_t l_54 = 4L;
    #####:   86:    int32_t **l_66 = &l_41;
        -:   87:    int64_t l_89[3];
    #####:   88:    int32_t *const **l_91 = (void *)0;
        -:   89:    int32_t *const ***l_90[1][3][3];
    #####:   90:    uint64_t l_94[3][5] = {{1UL, 1UL, 0UL, 1UL, 1UL}, {0xCE46C46319CD64B8LL, 1UL, 0xCE46C46319CD64B8LL, 0xCE46C46319CD64B8LL, 0xCE46C46319CD64B8LL}, {0xCE46C46319CD64B8LL, 0UL, 0UL, 0xCE46C46319CD64B8LL, 0UL}};
        -:   91:    int i, j, k;
    #####:   92:    for (i = 0; i < 3; i++)
    #####:   93:      l_89[i] = 0x7896B8AE43225DEALL;
    #####:   94:    for (i = 0; i < 1; i++) {
    #####:   95:      for (j = 0; j < 3; j++) {
    #####:   96:        for (k = 0; k < 3; k++)
    #####:   97:          l_90[i][j][k] = &l_91;
        -:   98:      }
        -:   99:    }
    #####:  100:    if ((safe_sub_func_int32_t_s_s((l_53[2][0] = (l_52 = ((void *)0 != g_49[0]))), (l_54 = (g_18 & (p_7 = l_54)))))) {
    #####:  101:      int32_t *l_57 = (void *)0;
    #####:  102:      uint64_t *l_59 = &g_60[1];
    #####:  103:      int32_t ***l_67 = (void *)0;
    #####:  104:      int32_t *l_85 = &g_18;
    #####:  105:      if ((g_80[1][0][0] &= ((safe_rshift_func_int64_t_s_u(((*g_50) == (g_58 = l_57)), (++(*l_59)))) != (((((0xCFL ^ (-1L)), g_65), (l_66 = l_66)) == (g_68 = &g_51)) >= ((((safe_mod_func_int64_t_s_s(((safe_sub_func_int32_t_s_s((((safe_rshift_func_int64_t_s_u((l_53[1][1] = g_3), (((safe_div_func_uint16_t_u_u(((safe_sub_func_int32_t_s_s(((*g_69) |= (&l_42[0][0] == &l_42[0][0])), 4294967290UL)) >= p_9), g_3)) <= l_54) | p_9))), (void *)0) != &l_54), 0x5F4F6E08L)) | l_52), g_39)) | g_39) <= p_8) <= g_3))))) {
    #####:  106:        (*g_84) = g_81;
    #####:  107:        (*g_69) |= (*g_51);
        -:  108:      } else {
    #####:  109:        l_85 = ((*l_66) = ((*g_68) = l_42[0][0]));
        -:  110:      }
        -:  111:    } else {
    #####:  112:      if (p_7) {
    #####:  113:        (*g_87) = l_86;
        -:  114:      } else {
    #####:  115:        (*g_69) = p_9;
    #####:  116:        (*g_92) = (l_89[2], l_90[0][1][0]);
        -:  117:      }
        -:  118:    }
    #####:  119:    l_94[0][1]--;
        -:  120:  } else {
    #####:  121:    uint64_t l_97 = 0x71EE0ECED6D9707ELL;
    #####:  122:    --l_97;
    #####:  123:    if (p_9) {
    #####:  124:      for (g_18 = 0; (g_18 < 2); g_18++) {
    #####:  125:        volatile struct S1 *l_104 = &g_103;
    #####:  126:        if (p_8)
    #####:  127:          goto lbl_102;
    #####:  128:        (*l_104) = g_103;
        -:  129:      }
        -:  130:    } else {
    #####:  131:      uint32_t *l_109 = &g_110;
    #####:  132:      int32_t **const l_111 = &g_58;
    #####:  133:      (*g_58) = ((safe_rshift_func_int16_t_s_s((safe_mul_func_int32_t_s_s(((0xFE13L < (((((*l_109) ^= (((void *)0 != &g_103) > (l_46 == &g_39))), l_111) != (void *)0) || p_9)), (+p_9)), 0xE2A38A8CL)), 1)) > p_9);
        -:  134:    }
        -:  135:  }
    #####:  136:  return g_65;
        -:  137:}
        -:  138:
        1:  139:int main(int argc, char *argv[]) {
        -:  140:  int i, j, k;
        1:  141:  int print_hash_value = 0;
       1*:  142:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  143:    print_hash_value = 1;
        1:  144:  platform_main_begin();
        1:  145:  crc32_gentab();
        1:  146:  func_1();
        1:  147:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  148:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  149:  transparent_crc(g_18, "g_18", print_hash_value);
        1:  150:  transparent_crc(g_39, "g_39", print_hash_value);
        1:  151:  transparent_crc(g_43, "g_43", print_hash_value);
        4:  152:  for (i = 0; i < 3; i++) {
        3:  153:    transparent_crc(g_60[i], "g_60[i]", print_hash_value);
        3:  154:    if (print_hash_value)
    #####:  155:      printf("index = [%d]\n", i);
        -:  156:  }
        1:  157:  transparent_crc(g_65.f0, "g_65.f0", print_hash_value);
        1:  158:  transparent_crc(g_65.f1, "g_65.f1", print_hash_value);
        1:  159:  transparent_crc(g_65.f2, "g_65.f2", print_hash_value);
        3:  160:  for (i = 0; i < 2; i++) {
        8:  161:    for (j = 0; j < 3; j++) {
       24:  162:      for (k = 0; k < 3; k++) {
       18:  163:        transparent_crc(g_80[i][j][k], "g_80[i][j][k]", print_hash_value);
       18:  164:        if (print_hash_value)
    #####:  165:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  166:      }
        -:  167:    }
        -:  168:  }
        1:  169:  transparent_crc(g_82.f0, "g_82.f0", print_hash_value);
        1:  170:  transparent_crc(g_82.f1, "g_82.f1", print_hash_value);
        1:  171:  transparent_crc(g_103.f0, "g_103.f0", print_hash_value);
        1:  172:  transparent_crc(g_103.f1, "g_103.f1", print_hash_value);
        1:  173:  transparent_crc(g_103.f2, "g_103.f2", print_hash_value);
        1:  174:  transparent_crc(g_103.f3, "g_103.f3", print_hash_value);
        1:  175:  transparent_crc(g_103.f4, "g_103.f4", print_hash_value);
        1:  176:  transparent_crc(g_110, "g_110", print_hash_value);
        1:  177:  transparent_crc(g_114.f0, "g_114.f0", print_hash_value);
        1:  178:  transparent_crc(g_114.f1, "g_114.f1", print_hash_value);
        1:  179:  transparent_crc(g_114.f2, "g_114.f2", print_hash_value);
        1:  180:  transparent_crc(g_115.f0, "g_115.f0", print_hash_value);
        1:  181:  transparent_crc(g_115.f1, "g_115.f1", print_hash_value);
        1:  182:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  183:  return 0;
        -:  184:}

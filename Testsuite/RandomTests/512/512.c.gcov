        -:    0:Source:512.c
        -:    0:Graph:512.gcno
        -:    0:Data:512.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_2 = 7L;
        -:    7:static volatile int32_t g_3 = 0L;
        -:    8:static int32_t g_4 = 8L;
        -:    9:static volatile int32_t g_7 = 0xFADF6285L;
        -:   10:static int32_t g_8 = 0x5B8B78ACL;
        -:   11:static int32_t g_13 = 1L;
        -:   12:static int32_t *volatile g_12[4][2][2] = {{{&g_13, &g_13}, {&g_13, &g_13}}, {{&g_13, &g_13}, {&g_13, &g_13}}, {{&g_13, &g_13}, {&g_13, &g_13}}, {{&g_13, &g_13}, {&g_13, &g_13}}};
        -:   13:static int32_t *volatile g_14 = (void *)0;
        -:   14:static int32_t *volatile g_15 = &g_13;
        -:   15:static uint32_t g_32[3][2] = {{0xE0512ED4L, 0xE0512ED4L}, {0xE0512ED4L, 0xE0512ED4L}, {0xE0512ED4L, 0xE0512ED4L}};
        -:   16:static uint32_t g_38 = 0xCF54CEAAL;
        -:   17:static int16_t g_49 = 0x8F30L;
        -:   18:static int32_t *volatile g_52 = &g_13;
        -:   19:static const int32_t *g_54 = (void *)0;
        -:   20:static const int32_t **g_53[2] = {&g_54, &g_54};
        -:   21:static const int32_t ***volatile g_57 = &g_53[0];
        -:   22:
        -:   23:static uint32_t func_1(void);
        -:   24:static const int32_t **func_16(uint32_t p_17, uint8_t p_18, const int8_t p_19);
        -:   25:
        1:   26:static uint32_t func_1(void) {
        -:   27:  uint32_t l_20[2];
        1:   28:  int32_t **const l_26 = (void *)0;
        1:   29:  int32_t l_58 = 0x06680214L;
        -:   30:  int i;
        3:   31:  for (i = 0; i < 2; i++)
        2:   32:    l_20[i] = 0x462CCD20L;
       1*:   33:  for (g_4 = (-28); (g_4 == 10); g_4 = safe_add_func_int16_t_s_s(g_4, 1)) {
    #####:   34:    int64_t l_21 = 0x712C51978E60D743LL;
    #####:   35:    const int32_t ***l_55 = (void *)0;
    #####:   36:    const int32_t ***l_56 = (void *)0;
    #####:   37:    for (g_8 = 0; (g_8 != (-22)); g_8--) {
    #####:   38:      int32_t l_11 = 0xC6D21CD4L;
    #####:   39:      (*g_15) = l_11;
        -:   40:    }
    #####:   41:    (*g_57) = func_16(l_20[1], (((0xCC5CL || ((l_21 != l_20[1]), ((g_8 & ((l_20[1] == (g_8 <= ((safe_add_func_uint32_t_u_u(l_21, (((l_20[1] & 1L), l_26) == &g_14))) < g_7))) == g_4)) && g_13))) <= g_4) > g_4), l_21);
        -:   42:  }
        1:   43:  return l_58;
        -:   44:}
        -:   45:
    #####:   46:static const int32_t **func_16(uint32_t p_17, uint8_t p_18, const int8_t p_19) {
    #####:   47:  int32_t *l_29 = (void *)0;
        -:   48:  uint32_t *l_37[1];
    #####:   49:  int32_t l_39 = 1L;
    #####:   50:  int16_t *l_48 = &g_49;
    #####:   51:  int32_t *l_50 = &l_39;
    #####:   52:  int32_t *l_51 = (void *)0;
        -:   53:  int i;
    #####:   54:  for (i = 0; i < 1; i++)
    #####:   55:    l_37[i] = &g_38;
    #####:   56:  (*l_50) ^= (safe_mod_func_int16_t_s_s(((l_29 == l_29) >= ((*g_15) = 0L)), (((safe_rshift_func_int64_t_s_s(((((*l_48) &= ((((g_32[0][1] = g_4), g_32[2][0]) | ((safe_rshift_func_uint64_t_u_s((safe_lshift_func_uint32_t_u_u((p_17++), 19)), 33)) == ((safe_add_func_int64_t_s_s(8L, (((g_8 > p_18) | (safe_div_func_int64_t_s_s((safe_lshift_func_int16_t_s_u(((0xD55FAF230988A21DLL >= 0x74357240E60136B8LL), p_19), 2)), p_19))) == g_38))) >= g_38))), 0x9032L)) >= 0x42FCL) <= 0x8456A9E5FAF1BECDLL), 24)) <= p_19), p_19)));
    #####:   57:  (*g_52) ^= ((*l_50) = 1L);
    #####:   58:  return g_53[0];
        -:   59:}
        -:   60:
        1:   61:int main(int argc, char *argv[]) {
        -:   62:  int i, j, k;
        1:   63:  int print_hash_value = 0;
       1*:   64:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   65:    print_hash_value = 1;
        1:   66:  platform_main_begin();
        1:   67:  crc32_gentab();
        1:   68:  func_1();
        1:   69:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   70:  transparent_crc(g_3, "g_3", print_hash_value);
        1:   71:  transparent_crc(g_4, "g_4", print_hash_value);
        1:   72:  transparent_crc(g_7, "g_7", print_hash_value);
        1:   73:  transparent_crc(g_8, "g_8", print_hash_value);
        1:   74:  transparent_crc(g_13, "g_13", print_hash_value);
        4:   75:  for (i = 0; i < 3; i++) {
        9:   76:    for (j = 0; j < 2; j++) {
        6:   77:      transparent_crc(g_32[i][j], "g_32[i][j]", print_hash_value);
        6:   78:      if (print_hash_value)
    #####:   79:        printf("index = [%d][%d]\n", i, j);
        -:   80:    }
        -:   81:  }
        1:   82:  transparent_crc(g_38, "g_38", print_hash_value);
        1:   83:  transparent_crc(g_49, "g_49", print_hash_value);
        1:   84:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   85:  return 0;
        -:   86:}

        -:    0:Source:691.c
        -:    0:Graph:691.gcno
        -:    0:Data:691.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U0 {
        -:    7:  int16_t f0;
        -:    8:  int8_t f1;
        -:    9:  uint32_t f2;
        -:   10:  unsigned : 0;
        -:   11:};
        -:   12:
        -:   13:static volatile int32_t g_2 = (-1L);
        -:   14:static volatile int32_t g_3 = 0xB1658084L;
        -:   15:static volatile int32_t g_4 = 1L;
        -:   16:static int32_t g_5 = 0x1F07B4BCL;
        -:   17:static int32_t g_8 = 0xFC3938DDL;
        -:   18:static int32_t g_19 = 0L;
        -:   19:static int32_t *g_18 = &g_19;
        -:   20:static int64_t g_31 = (-1L);
        -:   21:static int8_t g_36 = 0xCBL;
        -:   22:static const volatile int64_t *volatile g_44 = (void *)0;
        -:   23:static int32_t g_45 = (-3L);
        -:   24:static union U0 g_70 = {0x6394L};
        -:   25:static int32_t g_88 = 0x2E5CE9E3L;
        -:   26:static uint8_t g_90 = 0xA1L;
        -:   27:static int64_t g_110 = 5L;
        -:   28:static uint64_t g_114 = 2UL;
        -:   29:static uint16_t g_116[2][1] = {{0xE5C3L}, {0xE5C3L}};
        -:   30:
        -:   31:static int64_t func_1(void);
        -:   32:static int32_t *func_11(int8_t p_12);
        -:   33:
        1:   34:static int64_t func_1(void) {
        1:   35:  uint64_t l_24 = 0UL;
        1:   36:  uint32_t l_25 = 0x11DB6084L;
        1:   37:  int64_t *l_30 = &g_31;
        1:   38:  int8_t *l_35 = &g_36;
        1:   39:  int32_t **l_37 = &g_18;
        1:   40:  int32_t ***l_38 = &l_37;
        1:   41:  int64_t **l_41 = (void *)0;
        1:   42:  int64_t **l_42 = (void *)0;
        1:   43:  int64_t *l_43 = (void *)0;
        1:   44:  int8_t l_91 = (-5L);
       1*:   45:  for (g_5 = 0; (g_5 == (-28)); g_5 = safe_sub_func_uint16_t_u_u(g_5, 6)) {
    #####:   46:    for (g_8 = 0; (g_8 < 26); g_8 = safe_add_func_uint16_t_u_u(g_8, 9)) {
    #####:   47:      int32_t *l_17 = (void *)0;
    #####:   48:      int32_t **l_16[2][2] = {{&l_17, &l_17}, {&l_17, &l_17}};
        -:   49:      int i, j;
    #####:   50:      g_18 = func_11(g_5);
        -:   51:    }
        -:   52:  }
        1:   53:  if ((safe_div_func_uint16_t_u_u(((((l_24 > ((((l_25 != (((safe_mod_func_int16_t_s_s((safe_lshift_func_int8_t_s_s(((((*l_30) &= l_24) <= (safe_lshift_func_uint16_t_u_u((((*l_35) = (+6UL)) ^ (((((((*l_38) = l_37) == (void *)0), l_35) == (((safe_lshift_func_int8_t_s_s((g_19 < ((l_43 = l_30) != g_44)), 1)), g_2), l_35)) > g_5), 251UL)), g_8))) == g_45), 3)), g_5)) | l_24) & (-1L))) ^ g_8) >= (*g_18)) < (*g_18))) ^ g_19), 65535UL), 1UL), g_8))) {
    #####:   54:    int32_t l_46[5][1][2] = {{{0xB3E1984BL, 0xB3E1984BL}}, {{0xB3E1984BL, 0xB3E1984BL}}, {{0xB3E1984BL, 0xB3E1984BL}}, {{0xB3E1984BL, 0xB3E1984BL}}, {{0xB3E1984BL, 0xB3E1984BL}}};
    #####:   55:    int16_t l_47 = 5L;
    #####:   56:    int8_t l_74 = 0L;
    #####:   57:    int16_t l_76 = 1L;
        -:   58:    int i, j, k;
    #####:   59:    for (g_36 = 0; (g_36 <= 0); g_36 += 1) {
    #####:   60:      int32_t **l_71 = &g_18;
    #####:   61:      for (g_31 = 0; (g_31 >= 0); g_31 -= 1) {
    #####:   62:        const int8_t l_75 = 1L;
    #####:   63:        (*g_18) |= l_47;
    #####:   64:        g_18 = func_11((((0x2BD68E480B0DEBF6LL ^ ((***l_38) | (safe_lshift_func_int8_t_s_s((g_70.f1 = (safe_mod_func_uint32_t_u_u(4294967289UL, (safe_lshift_func_uint16_t_u_s((safe_mul_func_int8_t_s_s((safe_rshift_func_int16_t_s_s((safe_mod_func_int8_t_s_s(((safe_rshift_func_uint32_t_u_s(g_4, (safe_div_func_int8_t_s_s((safe_div_func_uint16_t_u_u((l_47 && ((safe_add_func_int16_t_s_s((safe_sub_func_int64_t_s_s((g_70, (((((((l_71 == &g_18) >= ((((safe_lshift_func_int64_t_s_s(0x870B1CB45490A9DALL, 46)) & l_46[4][0][0]), (*g_18)) == (-3L))) & g_45) != g_45), (-1L)), 1UL) & 247UL)), l_74)), l_75)), 0x41179D740F48B4F1LL)), l_76)), g_31)))) || g_4), l_75)), 7)), g_8)), g_5))))), 7)))) && g_31) | 0x433A0315L));
        -:   65:      }
    #####:   66:      for (l_76 = 0; (l_76 <= 0); l_76 += 1) {
    #####:   67:        uint32_t l_79 = 0x211FA8BFL;
    #####:   68:        int32_t l_85 = 0xD5A8D4E4L;
    #####:   69:        uint8_t *l_89[4] = {&g_90, &g_90, &g_90, &g_90};
        -:   70:        int i;
    #####:   71:        (***l_38) = (safe_mul_func_int16_t_s_s((g_19 ^ (l_79 ^= 0UL)), (~(255UL == (safe_mul_func_int32_t_s_s(((void *)0 != &g_18), (((safe_add_func_int32_t_s_s((l_85 &= 0x83651A33L), (g_4 || g_4))), (l_91 ^= (g_90 &= (g_88 = ((((safe_unary_minus_func_uint16_t_u((safe_unary_minus_func_uint16_t_u(0x55CAL)))) && 0xA2B3C28C64988723LL) ^ g_19) == g_8))))), (-6L))))))));
    #####:   72:        (**l_71) &= (&l_37 != (((safe_div_func_uint8_t_u_u((safe_add_func_int64_t_s_s(l_46[1][0][0], 0x19DAAC0CAA660014LL)), l_76)) && (l_46[3][0][1] == (safe_rshift_func_uint8_t_u_s(246UL, 6)))), (void *)0));
        -:   73:      }
        -:   74:    }
        -:   75:  } else {
        1:   76:    uint32_t l_104 = 1UL;
        -:   77:    int32_t *l_109[3];
        1:   78:    int32_t l_111 = 0x182763D2L;
        1:   79:    uint64_t *l_112 = &l_24;
        1:   80:    uint64_t *l_113[4] = {&g_114, &g_114, &g_114, &g_114};
        1:   81:    uint16_t *l_115 = &g_116[1][0];
        -:   82:    int i;
        4:   83:    for (i = 0; i < 3; i++)
        3:   84:      l_109[i] = &g_45;
       1*:   85:    (**l_37) &= (g_45 && g_8);
       1*:   86:    (*g_18) = ((((*l_115) &= ((safe_mul_func_int32_t_s_s(0x1BCB00F8L, ((g_114 = ((*l_112) = ((safe_mod_func_uint64_t_u_u(0UL, (g_19 ^ (l_104 && ((g_8 && ((*l_35) |= ((safe_mod_func_int32_t_s_s(0x1AC48AE5L, (***l_38))) < ((-1L) <= (((safe_sub_func_uint8_t_u_u(((g_45 = (*g_18)), (**l_37)), g_4)) >= g_110) > (**l_37)))))) > l_111))))) || 7L))) > 0x4CB199FC800275E9LL))) <= 1L)) < 0x4A87L) | g_19);
        -:   87:  }
        1:   88:  return (***l_38);
        -:   89:}
        -:   90:
    #####:   91:static int32_t *func_11(int8_t p_12) {
    #####:   92:  int32_t *l_13[2][2][2] = {{{&g_5, &g_5}, {&g_5, &g_5}}, {{&g_5, &g_5}, {&g_5, &g_5}}};
    #####:   93:  int32_t **l_14 = (void *)0;
    #####:   94:  int32_t **l_15 = (void *)0;
        -:   95:  int i, j, k;
    #####:   96:  l_13[1][1][1] = l_13[1][0][0];
    #####:   97:  return &g_5;
        -:   98:}
        -:   99:
        1:  100:int main(int argc, char *argv[]) {
        -:  101:  int i, j;
        1:  102:  int print_hash_value = 0;
       1*:  103:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  104:    print_hash_value = 1;
        1:  105:  platform_main_begin();
        1:  106:  crc32_gentab();
        1:  107:  func_1();
        1:  108:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  109:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  110:  transparent_crc(g_4, "g_4", print_hash_value);
        1:  111:  transparent_crc(g_5, "g_5", print_hash_value);
        1:  112:  transparent_crc(g_8, "g_8", print_hash_value);
        1:  113:  transparent_crc(g_19, "g_19", print_hash_value);
        1:  114:  transparent_crc(g_31, "g_31", print_hash_value);
        1:  115:  transparent_crc(g_36, "g_36", print_hash_value);
        1:  116:  transparent_crc(g_45, "g_45", print_hash_value);
        1:  117:  transparent_crc(g_88, "g_88", print_hash_value);
        1:  118:  transparent_crc(g_90, "g_90", print_hash_value);
        1:  119:  transparent_crc(g_110, "g_110", print_hash_value);
        1:  120:  transparent_crc(g_114, "g_114", print_hash_value);
        3:  121:  for (i = 0; i < 2; i++) {
        4:  122:    for (j = 0; j < 1; j++) {
        2:  123:      transparent_crc(g_116[i][j], "g_116[i][j]", print_hash_value);
        2:  124:      if (print_hash_value)
    #####:  125:        printf("index = [%d][%d]\n", i, j);
        -:  126:    }
        -:  127:  }
        1:  128:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  129:  return 0;
        -:  130:}

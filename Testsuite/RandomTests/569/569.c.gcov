        -:    0:Source:569.c
        -:    0:Graph:569.gcno
        -:    0:Data:569.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_3 = 8L;
        -:    7:static uint32_t g_33 = 0x78CCA699L;
        -:    8:static const uint32_t *g_40[2][1][3] = {{{&g_33, &g_33, &g_33}}, {{&g_33, &g_33, &g_33}}};
        -:    9:static const uint32_t **g_39 = &g_40[0][0][2];
        -:   10:static const uint32_t ***const volatile g_38 = &g_39;
        -:   11:static volatile uint8_t g_62 = 1UL;
        -:   12:static int8_t g_79 = (-1L);
        -:   13:static volatile int16_t g_93[1][2][1] = {{{0L}, {0L}}};
        -:   14:static uint8_t g_94 = 0xF7L;
        -:   15:static volatile uint32_t g_105 = 0x2403636CL;
        -:   16:static uint32_t g_114[3] = {0xEA94EDB4L, 0xEA94EDB4L, 0xEA94EDB4L};
        -:   17:static uint32_t g_117[2][5] = {{0xCC553FEAL, 0xD406D4EBL, 0x77434CA8L, 0xD406D4EBL, 0xCC553FEAL}, {0xCC553FEAL, 0xD406D4EBL, 0x77434CA8L, 0xD406D4EBL, 0xCC553FEAL}};
        -:   18:static int32_t *volatile g_118 = &g_3;
        -:   19:static volatile uint64_t g_128 = 18446744073709551612UL;
        -:   20:static uint64_t g_134 = 0x0A455C58EAAB991CLL;
        -:   21:static uint16_t g_141 = 1UL;
        -:   22:static uint16_t *g_140 = &g_141;
        -:   23:static int8_t g_146 = (-10L);
        -:   24:static uint16_t g_157 = 0x9076L;
        -:   25:
        -:   26:static int32_t func_1(void);
        -:   27:static int64_t func_10(uint16_t p_11, int32_t p_12, int16_t p_13, const int64_t p_14, const uint32_t p_15);
        -:   28:
        1:   29:static int32_t func_1(void) {
        -:   30:  uint16_t l_2[3];
        1:   31:  uint64_t l_16[5] = {18446744073709551615UL, 18446744073709551615UL, 18446744073709551615UL, 18446744073709551615UL, 18446744073709551615UL};
        -:   32:  uint8_t l_23[2];
        -:   33:  uint32_t *l_32[1];
        1:   34:  int32_t l_34 = 0x4D91F06EL;
        1:   35:  uint16_t *l_35 = &l_2[2];
        1:   36:  int64_t l_143[4] = {0xCE8F17059363F815LL, 0xCE8F17059363F815LL, 0xCE8F17059363F815LL, 0xCE8F17059363F815LL};
        1:   37:  int16_t l_145 = 3L;
        -:   38:  int i;
        4:   39:  for (i = 0; i < 3; i++)
        3:   40:    l_2[i] = 0xFF82L;
        3:   41:  for (i = 0; i < 2; i++)
        2:   42:    l_23[i] = 0x6CL;
        2:   43:  for (i = 0; i < 1; i++)
        1:   44:    l_32[i] = &g_33;
        1:   45:lbl_156:
        4:   46:  for (g_3 = 0; g_3 < 3; g_3 += 1) {
        3:   47:    l_2[g_3] = 0UL;
        -:   48:  }
       1*:   49:  if (((safe_lshift_func_uint8_t_u_u((g_3 && (g_33 = (g_117[1][0] = (safe_div_func_int8_t_s_s((safe_div_func_int64_t_s_s(func_10(l_16[4], ((safe_lshift_func_int8_t_s_s(g_3, 6)) < (safe_mod_func_uint32_t_u_u(g_3, (safe_mod_func_int16_t_s_s(l_23[0], (safe_add_func_uint16_t_u_u(((*l_35) = (safe_lshift_func_int16_t_s_u((0xBBL || (l_2[2] == (safe_mul_func_int16_t_s_s((safe_lshift_func_uint16_t_u_u(g_3, 4)), ((l_34 ^= l_16[0]) & g_33))))), l_16[4]))), l_23[0]))))))), l_16[4], g_33, l_16[1]), g_114[0])), g_114[2]))))), 6)) | g_114[1])) {
        1:   50:    int32_t *l_129 = &g_3;
        1:   51:    uint16_t **l_137 = &l_35;
        1:   52:    int8_t *l_142[2][5][3] = {{{(void *)0, (void *)0, &g_79}, {&g_79, &g_79, &g_79}, {(void *)0, (void *)0, (void *)0}, {(void *)0, &g_79, (void *)0}, {&g_79, (void *)0, (void *)0}}, {{(void *)0, &g_79, &g_79}, {&g_79, (void *)0, (void *)0}, {&g_79, &g_79, (void *)0}, {(void *)0, &g_79, &g_79}, {&g_79, &g_79, &g_79}}};
        -:   53:    uint8_t *l_144[1];
        1:   54:    int32_t *l_147 = &l_34;
        -:   55:    int i, j, k;
        2:   56:    for (i = 0; i < 1; i++)
        1:   57:      l_144[i] = &l_23[0];
       1*:   58:    (*l_147) ^= (safe_mul_func_int16_t_s_s((((+((safe_div_func_int8_t_s_s((((safe_mul_func_uint32_t_u_u(((g_146 |= ((safe_div_func_uint16_t_u_u(g_128, ((l_145 = ((l_129 == (void *)0), (safe_div_func_uint16_t_u_u((safe_div_func_int64_t_s_s((((g_134, ((safe_add_func_int8_t_s_s((l_143[2] = (((*l_137) = (void *)0) != ((g_114[0] && (safe_mod_func_uint16_t_u_u(l_23[0], 1L))), g_140))), g_79)) | l_2[1])) | 0xA078L) == l_23[0]), g_117[0][2])), g_134)))) && l_16[1]))) & l_16[4])) <= 0UL), 0xADD8BE8FL)), 0xA3D2L) > g_114[0]), 0xA3L)) & g_94)), (*l_129)) | l_23[0]), l_16[3]));
        -:   59:  } else {
    #####:   60:    int32_t l_153 = 0L;
    #####:   61:    if (((*g_118) = (((((safe_div_func_uint32_t_u_u((+((g_62 == 0UL) & ((((safe_mod_func_uint32_t_u_u((((*l_35) = ((g_33 & l_153), (l_16[4] ^ 0x847FBB04L))) < ((safe_add_func_uint8_t_u_u(((g_141 <= l_23[0]), g_141), g_94)) & g_117[1][4])), l_34)) > 0UL), l_32[0]) == l_32[0]))), g_134)), 4294967295UL) | g_79), (void *)0) == &l_35))) {
    #####:   62:      if (g_79)
    #####:   63:        goto lbl_156;
        -:   64:    } else {
    #####:   65:      g_157 &= (*g_118);
        -:   66:    }
        -:   67:  }
        1:   68:  return l_16[4];
        -:   69:}
        -:   70:
        1:   71:static int64_t func_10(uint16_t p_11, int32_t p_12, int16_t p_13, const int64_t p_14, const uint32_t p_15) {
        1:   72:  uint32_t *l_59 = &g_33;
        1:   73:  uint32_t **l_58 = &l_59;
        1:   74:  uint32_t ***l_57 = &l_58;
        1:   75:  int32_t l_61 = 0x9426CEFCL;
        1:   76:  int32_t l_104 = 0xD0C570B9L;
        1:   77:  if (p_11) {
        1:   78:    const uint32_t *l_37 = &g_33;
        1:   79:    const uint32_t **l_36 = &l_37;
        1:   80:    int32_t l_45 = 0x9EF57A55L;
        1:   81:    uint32_t l_75 = 0xB003BA29L;
        1:   82:    (*g_38) = l_36;
       1*:   83:    for (p_11 = (-11); (p_11 == 48); p_11 = safe_add_func_uint64_t_u_u(p_11, 6)) {
    #####:   84:      int32_t *l_52 = &g_3;
    #####:   85:      if (((safe_mul_func_uint16_t_u_u(l_45, p_13)) > (safe_sub_func_uint32_t_u_u((((safe_rshift_func_int16_t_s_u((safe_div_func_int16_t_s_s((p_11 && (((l_45 > 9L) != ((((*l_52) ^= (-2L)) & ((safe_lshift_func_int16_t_s_u((safe_rshift_func_int8_t_s_s(((void *)0 != l_57), 0)), ((void *)0 != &p_12))) && 1L)), g_3)) ^ p_13)), g_33)), g_33)) && (**g_39)) ^ g_33), p_13)))) {
        -:   86:        int32_t *l_60[2][1];
        -:   87:        int i, j;
    #####:   88:        for (i = 0; i < 2; i++) {
    #####:   89:          for (j = 0; j < 1; j++)
    #####:   90:            l_60[i][j] = &l_45;
        -:   91:        }
    #####:   92:        ++g_62;
        -:   93:      } else {
    #####:   94:        int8_t *l_78 = &g_79;
    #####:   95:        int32_t *l_80 = &l_61;
    #####:   96:        int32_t *l_81 = &g_3;
    #####:   97:        int32_t *l_82 = &g_3;
    #####:   98:        int32_t *l_83 = (void *)0;
    #####:   99:        int32_t *l_84 = &g_3;
    #####:  100:        int32_t *l_85 = &g_3;
    #####:  101:        int32_t *l_86 = &l_61;
    #####:  102:        int32_t *l_87 = &g_3;
    #####:  103:        int32_t *l_88 = &l_61;
    #####:  104:        int32_t *l_89 = (void *)0;
    #####:  105:        int32_t *l_90 = (void *)0;
    #####:  106:        int32_t *l_91 = &l_45;
    #####:  107:        int32_t *l_92[4] = {&g_3, &g_3, &g_3, &g_3};
        -:  108:        int i;
    #####:  109:        (*l_52) = ((p_14, (safe_mul_func_int64_t_s_s(p_14, p_12))) | (((!((~((g_33 ^ l_61) == (safe_sub_func_int8_t_s_s(((*l_78) = (safe_mod_func_int32_t_s_s(((l_75 >= (safe_div_func_uint8_t_u_u(((p_15, ((((*l_52) < 8UL) > l_75), p_14)) > l_61), p_13))) || 0UL), 4294967288UL))), 0UL)))) && g_62)) != g_33) && p_15));
    #####:  110:        g_94++;
        -:  111:      }
    #####:  112:      for (p_13 = 0; (p_13 >= (-1)); p_13 = safe_sub_func_int32_t_s_s(p_13, 6)) {
    #####:  113:        int32_t *l_99 = &l_45;
    #####:  114:        int32_t l_100 = 0x6CA454D8L;
    #####:  115:        int32_t *l_101 = (void *)0;
    #####:  116:        int32_t *l_102 = &l_100;
        -:  117:        int32_t *l_103[4];
        -:  118:        int i;
    #####:  119:        for (i = 0; i < 4; i++)
    #####:  120:          l_103[i] = &l_100;
    #####:  121:        g_105++;
    #####:  122:        g_3 = ((p_12, &l_45) == (void *)0);
        -:  123:      }
        -:  124:    }
        -:  125:  } else {
    #####:  126:    for (l_104 = 9; (l_104 != 1); l_104 = safe_sub_func_int64_t_s_s(l_104, 8)) {
    #####:  127:      for (p_11 = (-27); (p_11 > 38); ++p_11) {
    #####:  128:        g_117[1][2] &= (safe_rshift_func_int32_t_s_u(g_114[0], (safe_lshift_func_int8_t_s_u(g_3, 4))));
    #####:  129:        (*g_118) &= p_12;
        -:  130:      }
        -:  131:    }
    #####:  132:    return g_114[0];
        -:  133:  }
        1:  134:  return g_33;
        -:  135:}
        -:  136:
        1:  137:int main(int argc, char *argv[]) {
        -:  138:  int i, j, k;
        1:  139:  int print_hash_value = 0;
       1*:  140:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  141:    print_hash_value = 1;
        1:  142:  platform_main_begin();
        1:  143:  crc32_gentab();
        1:  144:  func_1();
        1:  145:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  146:  transparent_crc(g_33, "g_33", print_hash_value);
        1:  147:  transparent_crc(g_62, "g_62", print_hash_value);
        1:  148:  transparent_crc(g_79, "g_79", print_hash_value);
        2:  149:  for (i = 0; i < 1; i++) {
        3:  150:    for (j = 0; j < 2; j++) {
        4:  151:      for (k = 0; k < 1; k++) {
        2:  152:        transparent_crc(g_93[i][j][k], "g_93[i][j][k]", print_hash_value);
        2:  153:        if (print_hash_value)
    #####:  154:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  155:      }
        -:  156:    }
        -:  157:  }
        1:  158:  transparent_crc(g_94, "g_94", print_hash_value);
        1:  159:  transparent_crc(g_105, "g_105", print_hash_value);
        4:  160:  for (i = 0; i < 3; i++) {
        3:  161:    transparent_crc(g_114[i], "g_114[i]", print_hash_value);
        3:  162:    if (print_hash_value)
    #####:  163:      printf("index = [%d]\n", i);
        -:  164:  }
        3:  165:  for (i = 0; i < 2; i++) {
       12:  166:    for (j = 0; j < 5; j++) {
       10:  167:      transparent_crc(g_117[i][j], "g_117[i][j]", print_hash_value);
       10:  168:      if (print_hash_value)
    #####:  169:        printf("index = [%d][%d]\n", i, j);
        -:  170:    }
        -:  171:  }
        1:  172:  transparent_crc(g_128, "g_128", print_hash_value);
        1:  173:  transparent_crc(g_134, "g_134", print_hash_value);
        1:  174:  transparent_crc(g_141, "g_141", print_hash_value);
        1:  175:  transparent_crc(g_146, "g_146", print_hash_value);
        1:  176:  transparent_crc(g_157, "g_157", print_hash_value);
        1:  177:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  178:  return 0;
        -:  179:}

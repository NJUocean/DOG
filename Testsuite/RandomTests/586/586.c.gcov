        -:    0:Source:586.c
        -:    0:Graph:586.gcno
        -:    0:Data:586.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  volatile signed f0 : 10;
        -:    8:  signed f1 : 23;
        -:    9:  const int32_t f2;
        -:   10:  signed f3 : 21;
        -:   11:  signed f4 : 6;
        -:   12:};
        -:   13:
        -:   14:#pragma pack(push)
        -:   15:#pragma pack(1)
        -:   16:struct S1 {
        -:   17:  unsigned f0 : 5;
        -:   18:  signed : 0;
        -:   19:  unsigned f1 : 17;
        -:   20:  signed f2 : 21;
        -:   21:};
        -:   22:#pragma pack(pop)
        -:   23:
        -:   24:union U2 {
        -:   25:  volatile uint8_t f0;
        -:   26:  int16_t f1;
        -:   27:  const int16_t f2;
        -:   28:};
        -:   29:
        -:   30:static int16_t g_2 = 0x4C00L;
        -:   31:static int32_t *volatile g_5 = (void *)0;
        -:   32:static int32_t g_7 = 0x0D0714ADL;
        -:   33:static int64_t g_19 = (-1L);
        -:   34:static volatile uint32_t g_20 = 0UL;
        -:   35:static int8_t g_37 = 0x7EL;
        -:   36:static int8_t *g_38 = (void *)0;
        -:   37:static int8_t g_49 = 0xA7L;
        -:   38:static int32_t g_50 = 0x04840C2CL;
        -:   39:static struct S1 g_54 = {2, 346, -974};
        -:   40:static uint8_t g_65 = 0xA8L;
        -:   41:static volatile struct S0 g_75 = {-17, 1322, 0L, -146, -3};
        -:   42:static uint64_t g_120[5] = {0x77404BFF72C0FF22LL, 0x77404BFF72C0FF22LL, 0x77404BFF72C0FF22LL, 0x77404BFF72C0FF22LL, 0x77404BFF72C0FF22LL};
        -:   43:static int32_t *g_129 = (void *)0;
        -:   44:static volatile union U2 g_138 = {0x2EL};
        -:   45:static struct S1 *g_140 = &g_54;
        -:   46:static struct S1 *volatile *g_139 = &g_140;
        -:   47:static struct S0 g_144 = {28, 23, 0x5799C725L, -535, -6};
        -:   48:static struct S0 g_146 = {-14, 2318, 0x96BB96E4L, -1442, 6};
        -:   49:static struct S0 **g_158 = (void *)0;
        -:   50:static uint8_t g_170 = 2UL;
        -:   51:
        -:   52:static int32_t func_1(void);
        -:   53:static int8_t func_27(int32_t *p_28, uint32_t p_29, uint32_t p_30);
        -:   54:
        1:   55:static int32_t func_1(void) {
        1:   56:  uint16_t l_47 = 0x84B5L;
        1:   57:  uint32_t l_200 = 0x62AC07F3L;
        1:   58:  if (g_2) {
        -:   59:    int32_t l_3[1];
        -:   60:    int i;
        2:   61:    for (i = 0; i < 1; i++)
        1:   62:      l_3[i] = 1L;
        2:   63:    for (g_2 = 0; (g_2 >= 0); g_2 -= 1) {
        1:   64:      int8_t l_4 = 0x46L;
        1:   65:      int32_t *l_6 = &g_7;
        1:   66:      (*l_6) |= l_4;
        -:   67:    }
        -:   68:  } else {
    #####:   69:    int32_t *l_8 = &g_7;
    #####:   70:    int32_t *l_9 = &g_7;
    #####:   71:    int32_t *l_10 = &g_7;
    #####:   72:    int32_t *l_11 = &g_7;
    #####:   73:    int32_t *l_12 = &g_7;
    #####:   74:    int32_t *l_13 = &g_7;
    #####:   75:    int32_t *l_14 = &g_7;
    #####:   76:    int32_t l_15 = (-1L);
    #####:   77:    int32_t *l_16 = &g_7;
    #####:   78:    int32_t *l_17 = &l_15;
    #####:   79:    int32_t *l_18[2][2] = {{&l_15, &l_15}, {&l_15, &l_15}};
        -:   80:    int i, j;
    #####:   81:    --g_20;
        -:   82:  }
       20:   83:  for (g_2 = 0; (g_2 != (-19)); --g_2) {
       19:   84:    int32_t *l_31[5][2] = {{&g_7, &g_7}, {&g_7, &g_7}, {&g_7, &g_7}, {&g_7, &g_7}, {&g_7, &g_7}};
       19:   85:    int8_t *l_36 = &g_37;
       19:   86:    int8_t **l_39 = (void *)0;
       19:   87:    int8_t **l_40 = &g_38;
       19:   88:    int8_t *l_48 = &g_49;
       19:   89:    int8_t l_52 = (-1L);
        -:   90:    int i, j;
       19:   91:    l_200 = ((safe_rshift_func_uint16_t_u_s((((*l_48) = func_27(l_31[4][0], g_20, (safe_div_func_int32_t_s_s((((void *)0 == l_31[4][0]) != ((safe_add_func_int8_t_s_s(((*l_36) = g_7), ((((*l_40) = g_38) != (void *)0), (safe_add_func_int64_t_s_s((safe_sub_func_uint64_t_u_u((safe_sub_func_int8_t_s_s((g_50 ^= ((*l_48) = l_47)), ((((safe_unary_minus_func_int8_t_s((g_2 <= l_47))) > g_7) & g_7) > g_19))), 1L)), g_2))))), l_52)), (-7L))))) >= 0x8DL), 6)) <= 1UL);
        -:   92:  }
        1:   93:  return l_200;
        -:   94:}
        -:   95:
       19:   96:static int8_t func_27(int32_t *p_28, uint32_t p_29, uint32_t p_30) {
       19:   97:  struct S1 *const l_53 = &g_54;
       19:   98:  struct S1 *l_56 = (void *)0;
        -:   99:  struct S1 **l_55[3][3];
       19:  100:  struct S1 **l_57 = &l_56;
       19:  101:  const int32_t l_68 = (-1L);
       19:  102:  uint16_t l_102[4] = {7UL, 7UL, 7UL, 7UL};
       19:  103:  int32_t l_117 = 0L;
       19:  104:  int32_t l_119 = (-6L);
       19:  105:  int64_t *l_187 = &g_19;
       19:  106:  uint64_t l_196 = 3UL;
        -:  107:  int i, j;
       76:  108:  for (i = 0; i < 3; i++) {
      228:  109:    for (j = 0; j < 3; j++)
      171:  110:      l_55[i][j] = &l_56;
        -:  111:  }
       19:  112:  (*l_57) = l_53;
      19*:  113:  for (g_49 = (-8); (g_49 > 18); ++g_49) {
        -:  114:    uint64_t l_62[3][4][1];
    #####:  115:    uint8_t *l_64 = &g_65;
    #####:  116:    int8_t **l_76 = &g_38;
    #####:  117:    int64_t *l_77 = &g_19;
    #####:  118:    int8_t l_101 = 0xE5L;
        -:  119:    int32_t l_115[3];
    #####:  120:    struct S0 *l_145[3][2] = {{&g_144, &g_144}, {&g_144, &g_144}, {&g_144, &g_144}};
    #####:  121:    uint16_t l_195 = 0x7C7DL;
    #####:  122:    int32_t l_199 = 0xD35642D3L;
        -:  123:    int i, j, k;
    #####:  124:    for (i = 0; i < 3; i++) {
    #####:  125:      for (j = 0; j < 4; j++) {
    #####:  126:        for (k = 0; k < 1; k++)
    #####:  127:          l_62[i][j][k] = 0xDFEF28ED3351F4A1LL;
        -:  128:      }
        -:  129:    }
    #####:  130:    for (i = 0; i < 3; i++)
    #####:  131:      l_115[i] = 0x172C61B7L;
    #####:  132:    if ((safe_mod_func_uint8_t_u_u((l_62[0][2][0] >= ((+((*l_64) ^= g_54.f1)) <= (safe_mod_func_int64_t_s_s(((*l_77) = (p_30 ^ (l_68 && (safe_sub_func_int8_t_s_s(l_68, (safe_add_func_int8_t_s_s((((0x792179B1L > ((safe_mul_func_uint64_t_u_u(l_62[0][2][0], (g_75, (((void *)0 == l_76) == p_30)))) && (-1L))) != p_30) != 0x46F18880L), p_30))))))), g_49)))), l_62[2][2][0]))) {
    #####:  133:      int32_t l_100 = 0x5819C35EL;
    #####:  134:      int32_t l_116 = 0xA51DBEEEL;
        -:  135:      int32_t l_118[4];
    #####:  136:      struct S1 *l_132 = &g_54;
    #####:  137:      int32_t *l_141[4] = {&l_118[2], &l_118[2], &l_118[2], &l_118[2]};
        -:  138:      int i;
    #####:  139:      for (i = 0; i < 4; i++)
    #####:  140:        l_118[i] = 0x8A635569L;
    #####:  141:      for (g_65 = 0; (g_65 <= 0); g_65 += 1) {
    #####:  142:        int32_t l_85 = (-10L);
    #####:  143:        int16_t l_99 = 0xB001L;
    #####:  144:        int32_t l_103 = 0xB5757325L;
    #####:  145:        int32_t *l_104 = &g_7;
    #####:  146:        int32_t *l_105 = &l_100;
    #####:  147:        int32_t *l_106 = &l_100;
    #####:  148:        int32_t *l_107 = (void *)0;
    #####:  149:        int32_t *l_108 = &g_7;
    #####:  150:        int32_t *l_109 = &g_7;
    #####:  151:        int32_t *l_110 = &l_85;
    #####:  152:        int32_t *l_111 = &l_85;
    #####:  153:        int32_t *l_112 = &l_103;
    #####:  154:        int32_t *l_113 = (void *)0;
        -:  155:        int32_t *l_114[1];
        -:  156:        int i;
    #####:  157:        for (i = 0; i < 1; i++)
    #####:  158:          l_114[i] = (void *)0;
    #####:  159:        l_103 |= ((*p_28) = (((safe_add_func_uint32_t_u_u(((safe_mul_func_int8_t_s_s((l_62[0][3][0] | (+((safe_sub_func_uint16_t_u_u((((l_85 > (g_75.f1 && (((safe_rshift_func_uint8_t_u_u(g_75.f2, 3)) >= (((l_85, (((safe_lshift_func_uint16_t_u_u(0x1855L, 14)) & p_29) & ((safe_div_func_int16_t_s_s((safe_rshift_func_int32_t_s_s(((((0x0115L <= ((!(safe_rshift_func_int8_t_s_u(((safe_rshift_func_int16_t_s_s(l_62[0][2][0], l_99)) <= l_100), l_68))), 1L)) || p_30), p_30) >= l_100), 12)), g_54.f1)) < (-6L)))) & (-1L)) >= p_29)) && l_99))) != p_30), l_62[0][1][0]), l_101)) <= l_102[2]))), l_100)) >= 0UL), (*p_28))) || p_29) <= 8UL));
    #####:  160:        ++g_120[0];
        -:  161:      }
    #####:  162:      g_54.f2 ^= ((*p_28) = (safe_add_func_int32_t_s_s(((((((((safe_lshift_func_uint32_t_u_s(0x6065F2B7L, 24)), &l_115[2]) != (g_129 = &g_7)) == ((safe_lshift_func_uint8_t_u_s(p_29, ((void *)0 == l_132))) >= ((safe_add_func_int64_t_s_s(p_29, (safe_lshift_func_int32_t_s_u((safe_unary_minus_func_uint16_t_u(((g_138, g_139) == (void *)0))), 10)))), 0xFBEF98C0L))) > 0x70L) != l_115[2]) ^ g_54.f0), (*p_28)), l_115[0])));
        -:  163:    } else {
    #####:  164:      struct S0 *l_143 = &g_144;
    #####:  165:      struct S0 **l_142[2][5] = {{&l_143, (void *)0, &l_143, &l_143, &l_143}, {&l_143, (void *)0, &l_143, &l_143, &l_143}};
        -:  166:      int i, j;
    #####:  167:      l_145[0][0] = (void *)0;
    #####:  168:      return p_30;
        -:  169:    }
    #####:  170:    for (g_7 = 1; (g_7 > (-15)); g_7 = safe_sub_func_uint16_t_u_u(g_7, 7)) {
    #####:  171:      uint64_t *l_173 = (void *)0;
    #####:  172:      int32_t l_174 = 0L;
        -:  173:      struct S1 *const *l_179[2];
    #####:  174:      int8_t *l_182 = (void *)0;
        -:  175:      int i;
    #####:  176:      for (i = 0; i < 2; i++)
    #####:  177:        l_179[i] = &g_140;
    #####:  178:      if ((0x4AB7L == (l_101 && p_30))) {
    #####:  179:        uint64_t *l_159[2][3] = {{&g_120[0], &g_120[0], &g_120[0]}, {(void *)0, (void *)0, &g_120[0]}};
    #####:  180:        int32_t l_160 = 0xDB91B04CL;
    #####:  181:        uint8_t *l_169 = &g_170;
    #####:  182:        int32_t l_171 = 0xA3AB4843L;
        -:  183:        uint64_t **l_172[5];
        -:  184:        int32_t l_175[3];
        -:  185:        int i, j;
    #####:  186:        for (i = 0; i < 5; i++)
    #####:  187:          l_172[i] = &l_159[0][0];
    #####:  188:        for (i = 0; i < 3; i++)
    #####:  189:          l_175[i] = (-8L);
    #####:  190:        g_144.f4 ^= (((safe_mul_func_uint64_t_u_u((l_119 = ((&g_65 == ((~g_75.f1), &g_65)) && (l_171 = (safe_lshift_func_uint32_t_u_u((safe_sub_func_uint64_t_u_u(((++(*l_64)), (l_160 = (g_158 != g_158))), ((safe_div_func_int16_t_s_s(((((*l_77) &= (safe_div_func_uint32_t_u_u((safe_lshift_func_int64_t_s_u((safe_add_func_uint8_t_u_u(((*l_169) &= (0x9247L > 0x464FL)), (l_171 != ((l_173 = &g_120[0]) != &l_62[1][0][0])))), 2)), l_62[2][1][0]))), (void *)0) == l_77), p_30)) < l_174))), 12))))), l_174)) || l_175[2]) <= p_30);
        -:  191:      } else {
    #####:  192:        int64_t *l_186[5][2] = {{&g_19, &g_19}, {&g_19, &g_19}, {&g_19, &g_19}, {&g_19, &g_19}, {&g_19, &g_19}};
    #####:  193:        int64_t **l_188 = &l_187;
    #####:  194:        uint32_t *l_197 = (void *)0;
    #####:  195:        int32_t l_198 = (-1L);
        -:  196:        int i, j;
    #####:  197:        if (l_119)
    #####:  198:          break;
    #####:  199:        g_146.f3 &= (((+(safe_rshift_func_uint32_t_u_s(((void *)0 != l_179[1]), ((&l_56 == ((l_199 = ((((l_182 == ((*l_76) = (*l_76))) == ((safe_unary_minus_func_int16_t_s((((l_115[0] |= ((safe_div_func_int32_t_s_s(((l_186[0][1] != ((*l_188) = l_187)), ((safe_mul_func_int64_t_s_s(((((safe_rshift_func_int16_t_s_s((((safe_mul_func_int8_t_s_s((l_174 & (((p_30 == l_62[0][2][0]), 1L) ^ l_195)), g_19)) && l_102[2]) == p_29), l_62[2][0][0])) >= (-6L)), p_30), l_196), p_29)) & p_29)), l_102[0])) || l_174)) == p_30) <= l_198))) > 0xD5062BB3L)) != 4UL) != p_29)), (void *)0)) ^ l_198)))) & 1L), (*g_129));
        -:  200:      }
        -:  201:    }
        -:  202:  }
       19:  203:  return p_30;
        -:  204:}
        -:  205:
        1:  206:int main(int argc, char *argv[]) {
        -:  207:  int i;
        1:  208:  int print_hash_value = 0;
       1*:  209:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  210:    print_hash_value = 1;
        1:  211:  platform_main_begin();
        1:  212:  crc32_gentab();
        1:  213:  func_1();
        1:  214:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  215:  transparent_crc(g_7, "g_7", print_hash_value);
        1:  216:  transparent_crc(g_19, "g_19", print_hash_value);
        1:  217:  transparent_crc(g_20, "g_20", print_hash_value);
        1:  218:  transparent_crc(g_37, "g_37", print_hash_value);
        1:  219:  transparent_crc(g_49, "g_49", print_hash_value);
        1:  220:  transparent_crc(g_50, "g_50", print_hash_value);
        1:  221:  transparent_crc(g_54.f0, "g_54.f0", print_hash_value);
        1:  222:  transparent_crc(g_54.f1, "g_54.f1", print_hash_value);
        1:  223:  transparent_crc(g_54.f2, "g_54.f2", print_hash_value);
        1:  224:  transparent_crc(g_65, "g_65", print_hash_value);
        1:  225:  transparent_crc(g_75.f0, "g_75.f0", print_hash_value);
        1:  226:  transparent_crc(g_75.f1, "g_75.f1", print_hash_value);
        1:  227:  transparent_crc(g_75.f2, "g_75.f2", print_hash_value);
        1:  228:  transparent_crc(g_75.f3, "g_75.f3", print_hash_value);
        1:  229:  transparent_crc(g_75.f4, "g_75.f4", print_hash_value);
        6:  230:  for (i = 0; i < 5; i++) {
        5:  231:    transparent_crc(g_120[i], "g_120[i]", print_hash_value);
        5:  232:    if (print_hash_value)
    #####:  233:      printf("index = [%d]\n", i);
        -:  234:  }
        1:  235:  transparent_crc(g_138.f0, "g_138.f0", print_hash_value);
        1:  236:  transparent_crc(g_144.f0, "g_144.f0", print_hash_value);
        1:  237:  transparent_crc(g_144.f1, "g_144.f1", print_hash_value);
        1:  238:  transparent_crc(g_144.f2, "g_144.f2", print_hash_value);
        1:  239:  transparent_crc(g_144.f3, "g_144.f3", print_hash_value);
        1:  240:  transparent_crc(g_144.f4, "g_144.f4", print_hash_value);
        1:  241:  transparent_crc(g_146.f0, "g_146.f0", print_hash_value);
        1:  242:  transparent_crc(g_146.f1, "g_146.f1", print_hash_value);
        1:  243:  transparent_crc(g_146.f2, "g_146.f2", print_hash_value);
        1:  244:  transparent_crc(g_146.f3, "g_146.f3", print_hash_value);
        1:  245:  transparent_crc(g_146.f4, "g_146.f4", print_hash_value);
        1:  246:  transparent_crc(g_170, "g_170", print_hash_value);
        1:  247:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  248:  return 0;
        -:  249:}

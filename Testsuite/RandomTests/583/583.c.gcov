        -:    0:Source:583.c
        -:    0:Graph:583.gcno
        -:    0:Data:583.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  const volatile uint32_t f0;
        -:    8:  uint8_t f1;
        -:    9:  int8_t f2;
        -:   10:  const volatile uint64_t f3;
        -:   11:  const uint64_t f4;
        -:   12:};
        -:   13:
        -:   14:union U1 {
        -:   15:  volatile uint64_t f0;
        -:   16:  int8_t f1;
        -:   17:  int32_t f2;
        -:   18:  uint32_t f3;
        -:   19:};
        -:   20:
        -:   21:static volatile int16_t g_3 = (-5L);
        -:   22:static int32_t g_5 = (-4L);
        -:   23:static volatile uint8_t g_9 = 255UL;
        -:   24:static union U1 g_12 = {18446744073709551613UL};
        -:   25:static union U1 g_13[2] = {{2UL}, {2UL}};
        -:   26:static const struct S0 g_18 = {0x7D1AFD06L, 4UL, 6L, 0x5C829ED890FC520ELL, 18446744073709551614UL};
        -:   27:static int16_t g_42 = 0x2D16L;
        -:   28:static int16_t g_59 = (-1L);
        -:   29:static int64_t g_75 = 9L;
        -:   30:static uint64_t g_83[1][5][3] = {{{18446744073709551612UL, 18446744073709551612UL, 0xD3C8015B33599DBFLL}, {1UL, 0UL, 0UL}, {0xAA087AC20A80BABELL, 18446744073709551612UL, 0xAA087AC20A80BABELL}, {0xAA087AC20A80BABELL, 1UL, 18446744073709551612UL}, {1UL, 0xAA087AC20A80BABELL, 0xAA087AC20A80BABELL}}};
        -:   31:static int8_t g_84[3] = {5L, 5L, 5L};
        -:   32:static int16_t g_86 = 5L;
        -:   33:static int32_t g_88 = (-10L);
        -:   34:static union U1 g_89 = {0x24B17E4CDB194A10LL};
        -:   35:
        -:   36:static union U1 func_1(void);
        -:   37:static int32_t *func_14(int32_t *const p_15, int64_t p_16, int32_t *p_17);
        -:   38:
        1:   39:static union U1 func_1(void) {
        -:   40:  const uint16_t l_2[1][4] = {{0xC633L, 0xC633L, 0xC633L, 0xC633L}};
        1:   41:  int32_t *const l_44 = &g_5;
        -:   42:  int i, j;
        1:   43:  if (l_2[0][2]) {
        1:   44:    int32_t *l_4 = &g_5;
        1:   45:    int32_t *l_6 = &g_5;
        1:   46:    int32_t *l_7 = &g_5;
        1:   47:    int32_t *l_8 = &g_5;
        1:   48:    ++g_9;
        1:   49:    return g_12;
        -:   50:  } else {
    #####:   51:    int32_t *l_27 = (void *)0;
    #####:   52:    uint64_t l_43 = 0xD4A52D86A0230A26LL;
    #####:   53:    int32_t *l_87 = &g_88;
    #####:   54:    for (g_5 = 0; (g_5 <= 1); g_5 += 1) {
    #####:   55:      uint32_t l_39[4][3] = {{0xC712BAD4L, 0UL, 0xC712BAD4L}, {0xC712BAD4L, 0UL, 0xC712BAD4L}, {0xC712BAD4L, 0UL, 0xC712BAD4L}, {0xC712BAD4L, 0UL, 0xC712BAD4L}};
    #####:   56:      int32_t *l_41 = (void *)0;
    #####:   57:      int32_t **l_40 = &l_41;
    #####:   58:      int32_t *l_45 = &g_5;
        -:   59:      int i, j;
    #####:   60:      l_87 = func_14((g_18, ((0xD6L > (((safe_mod_func_uint16_t_u_u((safe_mod_func_int64_t_s_s((((safe_mul_func_int32_t_s_s(((safe_mod_func_int64_t_s_s(((((void *)0 == l_27) ^ ((safe_add_func_int64_t_s_s((safe_add_func_int64_t_s_s((g_42 = (((*l_40) = ((((safe_mod_func_uint8_t_u_u((safe_mod_func_uint32_t_u_u((g_9 == (safe_mod_func_uint64_t_u_u((0xCBL < ((+l_39[3][2]) | l_2[0][3])), (((g_18.f2 == 0x2C2E8B5AL) || l_2[0][2]), g_18.f4)))), g_5)), l_39[3][2])) != 0xAEDA1E1CL) ^ 0xD3C5EBB4EE00B46FLL), l_27)) == &g_5)), g_18.f1)), l_2[0][3])), g_18.f0)) < l_2[0][2]), g_18.f2)) > g_5), 0xD63F7CECL)) == l_2[0][2]), l_43), g_18.f2)), g_18.f2)) <= g_18.f2) == l_2[0][1])), l_44)), g_18.f1, l_45);
        -:   61:    }
        -:   62:  }
    #####:   63:  (*l_44) = g_84[2];
    #####:   64:  return g_89;
        -:   65:}
        -:   66:
    #####:   67:static int32_t *func_14(int32_t *const p_15, int64_t p_16, int32_t *p_17) {
    #####:   68:  int64_t l_46 = (-5L);
    #####:   69:  int32_t l_47 = 0L;
    #####:   70:  int32_t l_48[5] = {(-4L), (-4L), (-4L), (-4L), (-4L)};
    #####:   71:  int16_t l_85 = (-4L);
        -:   72:  int i;
    #####:   73:  l_48[4] &= (l_47 ^= l_46);
    #####:   74:  for (g_12.f1 = 0; (g_12.f1 > (-19)); --g_12.f1) {
    #####:   75:    int32_t *l_56[4][2][4] = {{{&g_5, &l_48[2], &l_47, &l_48[2]}, {&l_48[4], &g_5, &l_47, &l_48[4]}}, {{&l_48[4], &g_5, &g_5, &l_48[4]}, {&g_5, &l_48[4], (void *)0, &l_48[1]}}, {{&g_5, (void *)0, &g_5, &l_47}, {&l_48[4], &l_48[1], &l_47, &l_47}}, {{(void *)0, (void *)0, &l_48[4], &l_48[1]}, {&l_48[1], &l_48[4], &l_48[4], &l_48[4]}}};
        -:   76:    int32_t **l_55[2];
        -:   77:    uint32_t l_73[1];
    #####:   78:    int8_t l_74 = 0xF4L;
    #####:   79:    uint32_t l_78 = 18446744073709551615UL;
        -:   80:    int i, j, k;
    #####:   81:    for (i = 0; i < 2; i++)
    #####:   82:      l_55[i] = &l_56[3][0][0];
    #####:   83:    for (i = 0; i < 1; i++)
    #####:   84:      l_73[i] = 0xC63FEC72L;
    #####:   85:    for (g_42 = (-9); (g_42 >= 26); g_42 = safe_add_func_uint16_t_u_u(g_42, 3)) {
    #####:   86:      int16_t *l_57 = (void *)0;
    #####:   87:      int16_t *l_58 = &g_59;
    #####:   88:      int64_t *l_71 = &l_46;
    #####:   89:      int32_t l_72[5][4] = {{(-1L), 0x79C0213AL, (-1L), 0x1CC38464L}, {(-1L), 0x1CC38464L, 0x1CC38464L, (-1L)}, {1L, 0x1CC38464L, (-5L), 0x1CC38464L}, {0x1CC38464L, 0x79C0213AL, (-5L), (-5L)}, {1L, 1L, 0x1CC38464L, (-5L)}};
        -:   90:      int i, j;
    #####:   91:      l_48[4] = ((safe_rshift_func_uint8_t_u_s(((l_55[1] != &p_17) >= (((((*l_58) = l_48[4]) & (safe_rshift_func_int64_t_s_u((((((p_16 > 0x42ACL) || ((+l_48[4]) && ((safe_rshift_func_uint16_t_u_u((safe_mod_func_uint8_t_u_u((((((p_16, g_42) <= ((*l_71) ^= (safe_mod_func_uint64_t_u_u(g_42, p_16)))) < g_18.f4) >= 0L) <= g_3), g_42)), l_72[3][3])) | p_16))), (void *)0) != (void *)0) <= l_73[0]), 59))) || l_74) == 0xABL)), p_16)) & 0x1AF1E100L);
        -:   92:    }
    #####:   93:    for (g_42 = 1; (g_42 >= 0); g_42 -= 1) {
    #####:   94:      uint32_t l_79 = 0UL;
        -:   95:      int32_t **l_81[1];
        -:   96:      int i;
    #####:   97:      for (i = 0; i < 1; i++)
    #####:   98:        l_81[i] = &l_56[3][0][0];
    #####:   99:      g_75 = 3L;
    #####:  100:      for (l_47 = 0; (l_47 <= 1); l_47 += 1) {
        -:  101:        int16_t *l_80[3];
    #####:  102:        uint64_t *l_82 = &g_83[0][0][1];
        -:  103:        int i, j, k;
    #####:  104:        for (i = 0; i < 3; i++)
    #####:  105:          l_80[i] = &g_59;
    #####:  106:        if (g_9)
    #####:  107:          break;
    #####:  108:        g_86 ^= ((((safe_mul_func_int16_t_s_s((g_59 = (g_12.f1 > (l_78 & (l_79 < 3L)))), (((*l_82) &= ((l_81[0] != (void *)0) <= l_48[4])), (-5L)))) > (g_84[1] = g_75)) <= p_16) > l_85);
        -:  109:      }
        -:  110:    }
        -:  111:  }
    #####:  112:  return p_17;
        -:  113:}
        -:  114:
        1:  115:int main(int argc, char *argv[]) {
        -:  116:  int i, j, k;
        1:  117:  int print_hash_value = 0;
       1*:  118:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  119:    print_hash_value = 1;
        1:  120:  platform_main_begin();
        1:  121:  crc32_gentab();
        1:  122:  func_1();
        1:  123:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  124:  transparent_crc(g_5, "g_5", print_hash_value);
        1:  125:  transparent_crc(g_9, "g_9", print_hash_value);
        3:  126:  for (i = 0; i < 2; i++) {
        2:  127:    transparent_crc(g_13[i].f0, "g_13[i].f0", print_hash_value);
        2:  128:    if (print_hash_value)
    #####:  129:      printf("index = [%d]\n", i);
        -:  130:  }
        1:  131:  transparent_crc(g_18.f0, "g_18.f0", print_hash_value);
        1:  132:  transparent_crc(g_18.f1, "g_18.f1", print_hash_value);
        1:  133:  transparent_crc(g_18.f2, "g_18.f2", print_hash_value);
        1:  134:  transparent_crc(g_18.f3, "g_18.f3", print_hash_value);
        1:  135:  transparent_crc(g_18.f4, "g_18.f4", print_hash_value);
        1:  136:  transparent_crc(g_42, "g_42", print_hash_value);
        1:  137:  transparent_crc(g_59, "g_59", print_hash_value);
        1:  138:  transparent_crc(g_75, "g_75", print_hash_value);
        2:  139:  for (i = 0; i < 1; i++) {
        6:  140:    for (j = 0; j < 5; j++) {
       20:  141:      for (k = 0; k < 3; k++) {
       15:  142:        transparent_crc(g_83[i][j][k], "g_83[i][j][k]", print_hash_value);
       15:  143:        if (print_hash_value)
    #####:  144:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  145:      }
        -:  146:    }
        -:  147:  }
        4:  148:  for (i = 0; i < 3; i++) {
        3:  149:    transparent_crc(g_84[i], "g_84[i]", print_hash_value);
        3:  150:    if (print_hash_value)
    #####:  151:      printf("index = [%d]\n", i);
        -:  152:  }
        1:  153:  transparent_crc(g_86, "g_86", print_hash_value);
        1:  154:  transparent_crc(g_88, "g_88", print_hash_value);
        1:  155:  transparent_crc(g_89.f0, "g_89.f0", print_hash_value);
        1:  156:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  157:  return 0;
        -:  158:}

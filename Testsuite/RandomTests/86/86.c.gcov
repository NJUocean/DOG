        -:    0:Source:86.c
        -:    0:Graph:86.gcno
        -:    0:Data:86.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  signed f0 : 26;
        -:    8:};
        -:    9:
        -:   10:#pragma pack(push)
        -:   11:#pragma pack(1)
        -:   12:struct S1 {
        -:   13:  signed f0 : 31;
        -:   14:};
        -:   15:#pragma pack(pop)
        -:   16:
        -:   17:union U2 {
        -:   18:  signed f0 : 9;
        -:   19:};
        -:   20:
        -:   21:static volatile int32_t g_2 = 0x0398070AL;
        -:   22:static volatile int32_t g_3 = 0x167FA5C6L;
        -:   23:static volatile int32_t g_4 = 0x8974B666L;
        -:   24:static int32_t g_5[5] = {4L, 4L, 4L, 4L, 4L};
        -:   25:static int32_t **volatile g_9 = (void *)0;
        -:   26:static union U2 g_17 = {-10L};
        -:   27:static struct S0 g_19 = {6471};
        -:   28:static struct S1 g_22 = {-12280};
        -:   29:static volatile int32_t g_23 = 0L;
        -:   30:static volatile int32_t g_24 = (-5L);
        -:   31:static int32_t g_25 = 7L;
        -:   32:
        -:   33:static int8_t func_1(void);
        -:   34:static struct S1 func_11(union U2 p_12, int32_t *p_13, struct S0 p_14, int32_t *p_15, int32_t **p_16);
        -:   35:
        1:   36:static int8_t func_1(void) {
        1:   37:  int32_t *l_18 = &g_5[0];
        1:   38:  int32_t **l_20 = (void *)0;
        1:   39:  struct S1 *l_31 = &g_22;
       1*:   40:  for (g_5[3] = 15; (g_5[3] <= 12); g_5[3]--) {
    #####:   41:    int32_t *l_8[5][1][4] = {{{&g_5[3], &g_5[3], &g_5[3], &g_5[3]}}, {{&g_5[3], &g_5[3], &g_5[3], &g_5[3]}}, {{&g_5[3], &g_5[3], &g_5[3], &g_5[3]}}, {{&g_5[3], &g_5[3], &g_5[3], &g_5[3]}}, {{&g_5[3], &g_5[3], &g_5[3], &g_5[3]}}};
    #####:   42:    int32_t **l_10 = &l_8[3][0][3];
        -:   43:    int i, j, k;
    #####:   44:    (*l_10) = l_8[3][0][3];
    #####:   45:    if ((**l_10))
    #####:   46:      break;
        -:   47:  }
        1:   48:  (*l_31) = func_11(g_17, l_18, g_19, l_18, l_20);
        1:   49:  return (*l_18);
        -:   50:}
        -:   51:
        1:   52:static struct S1 func_11(union U2 p_12, int32_t *p_13, struct S0 p_14, int32_t *p_15, int32_t **p_16) {
        1:   53:  struct S1 l_21 = {1440};
        1:   54:  g_22 = l_21;
       1*:   55:  for (g_25 = 0; (g_25 >= 29); g_25 = safe_add_func_int16_t_s_s(g_25, 1)) {
    #####:   56:    int32_t *l_30 = &g_5[3];
    #####:   57:    int32_t **l_29 = &l_30;
    #####:   58:    int32_t ***l_28 = &l_29;
    #####:   59:    (*l_28) = (void *)0;
        -:   60:  }
        1:   61:  return l_21;
        -:   62:}
        -:   63:
        1:   64:int main(int argc, char *argv[]) {
        -:   65:  int i;
        1:   66:  int print_hash_value = 0;
       1*:   67:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   68:    print_hash_value = 1;
        1:   69:  platform_main_begin();
        1:   70:  crc32_gentab();
        1:   71:  func_1();
        1:   72:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   73:  transparent_crc(g_3, "g_3", print_hash_value);
        1:   74:  transparent_crc(g_4, "g_4", print_hash_value);
        6:   75:  for (i = 0; i < 5; i++) {
        5:   76:    transparent_crc(g_5[i], "g_5[i]", print_hash_value);
        5:   77:    if (print_hash_value)
    #####:   78:      printf("index = [%d]\n", i);
        -:   79:  }
        1:   80:  transparent_crc(g_17.f0, "g_17.f0", print_hash_value);
        1:   81:  transparent_crc(g_19.f0, "g_19.f0", print_hash_value);
        1:   82:  transparent_crc(g_22.f0, "g_22.f0", print_hash_value);
        1:   83:  transparent_crc(g_23, "g_23", print_hash_value);
        1:   84:  transparent_crc(g_24, "g_24", print_hash_value);
        1:   85:  transparent_crc(g_25, "g_25", print_hash_value);
        1:   86:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   87:  return 0;
        -:   88:}

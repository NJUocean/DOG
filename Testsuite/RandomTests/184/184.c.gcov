        -:    0:Source:184.c
        -:    0:Graph:184.gcno
        -:    0:Data:184.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S1 {
        -:    7:  signed f0 : 5;
        -:    8:  signed f1 : 8;
        -:    9:  signed f2 : 15;
        -:   10:  unsigned f3 : 19;
        -:   11:};
        -:   12:
        -:   13:union U3 {
        -:   14:  const uint32_t f0;
        -:   15:};
        -:   16:
        -:   17:static volatile int32_t g_2 = 0xAFD11D96L;
        -:   18:static int32_t g_3 = 1L;
        -:   19:static int32_t g_6 = 0xF3DE0369L;
        -:   20:static int32_t g_11 = 0x19E95D1CL;
        -:   21:static uint8_t g_27[3] = {1UL, 1UL, 1UL};
        -:   22:static int16_t g_29 = 0x06DEL;
        -:   23:static int8_t g_49 = 0xEDL;
        -:   24:static struct S1 g_52 = {-4, 4, 118, 45};
        -:   25:static struct S1 *volatile g_53 = (void *)0;
        -:   26:static struct S1 *volatile g_54 = &g_52;
        -:   27:static int32_t *volatile g_58 = &g_11;
        -:   28:static const uint8_t g_64 = 0x3EL;
        -:   29:static const uint8_t *g_63 = &g_64;
        -:   30:static const volatile union U3 g_78[2] = {{0x4B961AC8L}, {0x4B961AC8L}};
        -:   31:static uint32_t g_80[1][1][2] = {{{0UL, 0UL}}};
        -:   32:static int32_t g_83 = 7L;
        -:   33:
        -:   34:static int16_t func_1(void);
        -:   35:static struct S1 func_12(int16_t p_13);
        -:   36:
        1:   37:static int16_t func_1(void) {
        1:   38:  const uint32_t l_25 = 1UL;
        1:   39:  uint64_t l_75 = 0x77DAE0A7320B692ELL;
        1:   40:  int32_t l_84 = 0x2EFFCBC4L;
        1:   41:  uint64_t l_86 = 0x164E9E2562E968F5LL;
       1*:   42:  for (g_3 = 7; (g_3 == 26); g_3++) {
    #####:   43:    const int32_t *l_22 = &g_11;
        -:   44:    int32_t *l_85[4];
        -:   45:    int i;
    #####:   46:    for (i = 0; i < 4; i++)
    #####:   47:      l_85[i] = (void *)0;
    #####:   48:    if (g_3) {
    #####:   49:      int32_t l_18[5][5] = {{(-1L), 0x0442E119L, 0x0442E119L, (-1L), 0L}, {(-1L), 0x03B15A8DL, (-1L), (-1L), 0x03B15A8DL}, {0L, 0x0442E119L, (-1L), 0xCD204465L, 0xCD204465L}, {0x0442E119L, 0L, 0x0442E119L, (-1L), 0xCD204465L}, {0x03B15A8DL, (-1L), 0xCD204465L, (-1L), 0x03B15A8DL}};
    #####:   50:      uint8_t *l_26 = &g_27[1];
    #####:   51:      int16_t *l_28 = &g_29;
        -:   52:      int i, j;
    #####:   53:      for (g_6 = 7; (g_6 <= (-24)); g_6--) {
    #####:   54:        int32_t *l_9 = (void *)0;
    #####:   55:        int32_t *l_10 = &g_11;
    #####:   56:        (*l_10) = (-4L);
        -:   57:      }
    #####:   58:      (*g_54) = func_12(((*l_28) |= ((safe_sub_func_int8_t_s_s(0x96L, (((((g_2 <= (safe_add_func_uint16_t_u_u((l_18[1][1] && ((safe_mul_func_uint32_t_u_u(g_11, ((~((void *)0 != l_22)) <= (g_11 ^ ((((*l_26) = (l_18[2][0] <= ((((safe_sub_func_uint8_t_u_u(l_25, g_6)) <= (*l_22)), &g_3) == &l_18[1][4]))) > 0xA7L) != (-6L)))))) && g_27[2])), (*l_22)))) == g_3) || (-1L)) && l_25) || l_18[2][3]))) < g_3)));
        -:   59:    } else {
    #####:   60:      int8_t l_72[2][1][3] = {{{0x8AL, 0x8AL, 0x8AL}}, {{0x5DL, 0x5DL, 0x5DL}}};
    #####:   61:      uint32_t *l_79 = &g_80[0][0][1];
    #####:   62:      int64_t l_81 = 0x7B92311C7DC5EB77LL;
    #####:   63:      int32_t *l_82[1][4][2] = {{{&g_83, &g_83}, {&g_83, &g_83}, {&g_83, &g_83}, {&g_83, &g_83}}};
        -:   64:      int i, j, k;
    #####:   65:      for (g_6 = 0; (g_6 >= (-1)); g_6--) {
    #####:   66:        uint8_t l_57 = 3UL;
    #####:   67:        (*g_58) = l_57;
        -:   68:      }
    #####:   69:      l_84 |= (0x2E233AD2D1E5678CLL != ((safe_lshift_func_int64_t_s_u((safe_mul_func_int8_t_s_s((((g_63 = &g_27[1]) != &g_27[1]), ((-3L) != 0x1867L)), (g_27[2]++))), (~(safe_rshift_func_uint16_t_u_s((safe_rshift_func_uint32_t_u_u(l_72[1][0][1], 12)), (((safe_mod_func_int16_t_s_s(((l_75 | (safe_mod_func_int16_t_s_s((0x276D00DAL > ((*l_79) = (((0xE352L >= g_11), g_78[0]), 1UL))), 65529UL))) ^ l_75), l_81)) == 0xEAL) >= g_6)))))), 18446744073709551607UL));
        -:   70:    }
    #####:   71:    ++l_86;
        -:   72:  }
        1:   73:  return g_3;
        -:   74:}
        -:   75:
    #####:   76:static struct S1 func_12(int16_t p_13) {
    #####:   77:  uint32_t l_38 = 0xE0512ED4L;
    #####:   78:  int32_t l_39 = 1L;
    #####:   79:  int64_t l_46 = 0L;
    #####:   80:  int8_t *l_48[5][5][5] = {{{(void *)0, &g_49, &g_49, &g_49, &g_49}, {&g_49, &g_49, &g_49, &g_49, &g_49}, {(void *)0, &g_49, &g_49, (void *)0, (void *)0}, {&g_49, &g_49, &g_49, &g_49, &g_49}, {&g_49, &g_49, &g_49, &g_49, (void *)0}},
        -:   81:                           {{&g_49, &g_49, &g_49, (void *)0, &g_49}, {&g_49, &g_49, &g_49, (void *)0, &g_49}, {&g_49, &g_49, &g_49, &g_49, &g_49}, {&g_49, &g_49, &g_49, &g_49, (void *)0}, {&g_49, &g_49, &g_49, &g_49, &g_49}},
        -:   82:                           {{(void *)0, &g_49, &g_49, &g_49, &g_49}, {&g_49, &g_49, &g_49, &g_49, &g_49}, {(void *)0, &g_49, &g_49, &g_49, &g_49}, {&g_49, &g_49, &g_49, &g_49, &g_49}, {&g_49, (void *)0, &g_49, &g_49, &g_49}},
        -:   83:                           {{&g_49, &g_49, &g_49, &g_49, &g_49}, {&g_49, &g_49, &g_49, (void *)0, &g_49}, {&g_49, &g_49, &g_49, (void *)0, &g_49}, {&g_49, &g_49, &g_49, &g_49, &g_49}, {&g_49, (void *)0, &g_49, &g_49, &g_49}},
        -:   84:                           {{&g_49, (void *)0, (void *)0, (void *)0, &g_49}, {(void *)0, &g_49, &g_49, &g_49, &g_49}, {&g_49, &g_49, &g_49, &g_49, &g_49}, {&g_49, &g_49, &g_49, &g_49, &g_49}, {&g_49, &g_49, (void *)0, (void *)0, &g_49}}};
    #####:   85:  int32_t l_50 = (-4L);
        -:   86:  int32_t *l_51[1][4];
        -:   87:  int i, j, k;
    #####:   88:  for (i = 0; i < 1; i++) {
    #####:   89:    for (j = 0; j < 4; j++)
    #####:   90:      l_51[i][j] = &g_6;
        -:   91:  }
    #####:   92:  g_6 &= (safe_mul_func_int64_t_s_s((safe_sub_func_int16_t_s_s(((l_50 |= (safe_lshift_func_int16_t_s_s(((safe_add_func_uint8_t_u_u((l_38 = p_13), (l_39 = (((g_11, (((l_39 > (!(safe_sub_func_uint64_t_u_u((+(&g_11 != &g_3)), g_27[1])))) & (safe_div_func_int64_t_s_s(0xAE2EFAADAD2DA0D3LL, (l_46 | ((safe_unary_minus_func_int32_t_s((0xD55FAF230988A21DLL | g_2))) != l_39))))) > p_13)) | 4294967291UL) || g_27[0])))) >= l_46), g_27[0]))) || p_13), g_29)), p_13));
    #####:   93:  return g_52;
        -:   94:}
        -:   95:
        1:   96:int main(int argc, char *argv[]) {
        -:   97:  int i, j, k;
        1:   98:  int print_hash_value = 0;
       1*:   99:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  100:    print_hash_value = 1;
        1:  101:  platform_main_begin();
        1:  102:  crc32_gentab();
        1:  103:  func_1();
        1:  104:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  105:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  106:  transparent_crc(g_6, "g_6", print_hash_value);
        1:  107:  transparent_crc(g_11, "g_11", print_hash_value);
        4:  108:  for (i = 0; i < 3; i++) {
        3:  109:    transparent_crc(g_27[i], "g_27[i]", print_hash_value);
        3:  110:    if (print_hash_value)
    #####:  111:      printf("index = [%d]\n", i);
        -:  112:  }
        1:  113:  transparent_crc(g_29, "g_29", print_hash_value);
        1:  114:  transparent_crc(g_49, "g_49", print_hash_value);
        1:  115:  transparent_crc(g_52.f0, "g_52.f0", print_hash_value);
        1:  116:  transparent_crc(g_52.f1, "g_52.f1", print_hash_value);
        1:  117:  transparent_crc(g_52.f2, "g_52.f2", print_hash_value);
        1:  118:  transparent_crc(g_52.f3, "g_52.f3", print_hash_value);
        1:  119:  transparent_crc(g_64, "g_64", print_hash_value);
        3:  120:  for (i = 0; i < 2; i++) {
        2:  121:    transparent_crc(g_78[i].f0, "g_78[i].f0", print_hash_value);
        2:  122:    if (print_hash_value)
    #####:  123:      printf("index = [%d]\n", i);
        -:  124:  }
        2:  125:  for (i = 0; i < 1; i++) {
        2:  126:    for (j = 0; j < 1; j++) {
        3:  127:      for (k = 0; k < 2; k++) {
        2:  128:        transparent_crc(g_80[i][j][k], "g_80[i][j][k]", print_hash_value);
        2:  129:        if (print_hash_value)
    #####:  130:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  131:      }
        -:  132:    }
        -:  133:  }
        1:  134:  transparent_crc(g_83, "g_83", print_hash_value);
        1:  135:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  136:  return 0;
        -:  137:}

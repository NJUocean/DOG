        -:    0:Source:589.c
        -:    0:Graph:589.gcno
        -:    0:Data:589.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U0 {
        -:    7:  volatile int8_t f0;
        -:    8:  const volatile uint8_t f1;
        -:    9:  int32_t f2;
        -:   10:};
        -:   11:
        -:   12:static volatile int32_t g_2 = 0L;
        -:   13:static volatile int32_t g_3 = 0x29A3DF60L;
        -:   14:static int32_t g_4[4] = {0x75C19C5AL, 0x75C19C5AL, 0x75C19C5AL, 0x75C19C5AL};
        -:   15:static volatile int32_t g_7 = 0x9EA41449L;
        -:   16:static int32_t g_8 = 1L;
        -:   17:static volatile int32_t g_11[1] = {0xA012E1DFL};
        -:   18:static int32_t g_12 = 0xF82D83D7L;
        -:   19:static union U0 g_16 = {0xD8L};
        -:   20:static union U0 *g_18 = &g_16;
        -:   21:static union U0 **volatile g_17[2] = {&g_18, &g_18};
        -:   22:static int32_t **volatile g_28 = (void *)0;
        -:   23:static int32_t *g_31 = &g_12;
        -:   24:
        -:   25:static uint32_t func_1(void);
        -:   26:static int32_t *func_21(int32_t *p_22, int64_t p_23);
        -:   27:
        1:   28:static uint32_t func_1(void) {
        1:   29:  int32_t l_20 = 0xDB785B64L;
        1:   30:  int32_t *l_24 = (void *)0;
        1:   31:  int32_t **l_27 = &l_24;
        1:   32:  int32_t *l_30[4][4][2] = {{{&g_12, &l_20}, {&g_4[3], &l_20}, {&g_4[3], &l_20}, {&g_4[3], &g_4[3]}}, {{(void *)0, &g_4[3]}, {(void *)0, &g_4[3]}, {&g_4[3], &l_20}, {&g_4[3], &l_20}}, {{&g_4[3], &l_20}, {&g_12, &l_20}, {&l_20, &g_4[3]}, {&g_4[3], &g_4[3]}}, {{&l_20, &l_20}, {&g_12, &l_20}, {&g_4[3], &l_20}, {&g_4[3], &l_20}}};
        1:   33:  int32_t **l_29[3][2] = {{&l_30[3][1][0], &l_30[3][1][0]}, {&l_30[3][1][0], &l_30[3][1][0]}, {&l_30[3][1][0], &l_30[3][1][0]}};
        -:   34:  int i, j, k;
       1*:   35:  for (g_4[3] = 11; (g_4[3] <= (-5)); --g_4[3]) {
    #####:   36:    union U0 *l_15 = &g_16;
    #####:   37:    for (g_8 = 0; (g_8 == 9); g_8 = safe_add_func_uint8_t_u_u(g_8, 6)) {
    #####:   38:      for (g_12 = 0; (g_12 != 12); g_12 = safe_add_func_uint32_t_u_u(g_12, 3)) {
    #####:   39:        union U0 **l_19 = &l_15;
    #####:   40:        (*l_19) = l_15;
    #####:   41:        if (g_4[2])
    #####:   42:          continue;
        -:   43:      }
        -:   44:    }
        -:   45:  }
        1:   46:  g_31 = ((*l_27) = (l_20, func_21(l_24, g_4[2])));
        1:   47:  return g_4[3];
        -:   48:}
        -:   49:
        1:   50:static int32_t *func_21(int32_t *p_22, int64_t p_23) {
        1:   51:  int32_t *l_25 = (void *)0;
        1:   52:  int32_t l_26 = 0L;
        1:   53:  l_26 ^= 0xC93CC254L;
        1:   54:  return p_22;
        -:   55:}
        -:   56:
        1:   57:int main(int argc, char *argv[]) {
        -:   58:  int i;
        1:   59:  int print_hash_value = 0;
       1*:   60:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   61:    print_hash_value = 1;
        1:   62:  platform_main_begin();
        1:   63:  crc32_gentab();
        1:   64:  func_1();
        1:   65:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   66:  transparent_crc(g_3, "g_3", print_hash_value);
        5:   67:  for (i = 0; i < 4; i++) {
        4:   68:    transparent_crc(g_4[i], "g_4[i]", print_hash_value);
        4:   69:    if (print_hash_value)
    #####:   70:      printf("index = [%d]\n", i);
        -:   71:  }
        1:   72:  transparent_crc(g_7, "g_7", print_hash_value);
        1:   73:  transparent_crc(g_8, "g_8", print_hash_value);
        2:   74:  for (i = 0; i < 1; i++) {
        1:   75:    transparent_crc(g_11[i], "g_11[i]", print_hash_value);
        1:   76:    if (print_hash_value)
    #####:   77:      printf("index = [%d]\n", i);
        -:   78:  }
        1:   79:  transparent_crc(g_12, "g_12", print_hash_value);
        1:   80:  transparent_crc(g_16.f0, "g_16.f0", print_hash_value);
        1:   81:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   82:  return 0;
        -:   83:}

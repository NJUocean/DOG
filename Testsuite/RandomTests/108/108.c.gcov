        -:    0:Source:108.c
        -:    0:Graph:108.gcno
        -:    0:Data:108.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int16_t g_14[1][2] = {{0x205BL, 0x205BL}};
        -:    7:static uint8_t g_33 = 254UL;
        -:    8:static int8_t g_35 = (-1L);
        -:    9:static uint32_t g_43 = 0x8E82B3F5L;
        -:   10:static volatile uint32_t g_47 = 0x6F576105L;
        -:   11:static volatile uint32_t *volatile g_46 = &g_47;
        -:   12:static uint64_t g_52 = 0x6F85D55A9D45C545LL;
        -:   13:static uint32_t g_62 = 0x59351789L;
        -:   14:static int8_t **g_63 = (void *)0;
        -:   15:static int8_t *g_66[2] = {&g_35, &g_35};
        -:   16:static int8_t **volatile g_65 = &g_66[1];
        -:   17:static int32_t g_72 = 0xC16B31B7L;
        -:   18:static uint32_t g_92 = 1UL;
        -:   19:static uint16_t g_100 = 0x57B5L;
        -:   20:static int32_t *volatile g_103 = (void *)0;
        -:   21:static int32_t g_105 = (-1L);
        -:   22:static int32_t *volatile g_104 = &g_105;
        -:   23:static int64_t g_113 = 0x7AAA56D442F441AFLL;
        -:   24:static uint32_t *g_115 = &g_43;
        -:   25:static uint32_t **g_114 = &g_115;
        -:   26:static volatile uint64_t g_122 = 1UL;
        -:   27:
        -:   28:static uint64_t func_1(void);
        -:   29:static int32_t func_2(uint16_t p_3, uint64_t p_4, uint32_t p_5, uint64_t p_6);
        -:   30:
        1:   31:static uint64_t func_1(void) {
        1:   32:  uint32_t l_7 = 0xD23B6182L;
        -:   33:  uint8_t *l_32[2];
        1:   34:  int8_t *l_34[5][5] = {{(void *)0, (void *)0, &g_35, &g_35, &g_35}, {(void *)0, (void *)0, (void *)0, &g_35, (void *)0}, {(void *)0, (void *)0, &g_35, &g_35, &g_35}, {(void *)0, (void *)0, (void *)0, &g_35, (void *)0}, {(void *)0, (void *)0, &g_35, &g_35, &g_35}};
        1:   35:  int32_t l_36[4] = {0x9E8E548EL, 0x9E8E548EL, 0x9E8E548EL, 0x9E8E548EL};
        1:   36:  uint16_t l_118[4] = {0xD55EL, 0xD55EL, 0xD55EL, 0xD55EL};
        1:   37:  int32_t *l_119 = &l_36[3];
        -:   38:  int32_t *l_120[4];
        1:   39:  int16_t l_121 = 0x3387L;
        -:   40:  int i, j;
        3:   41:  for (i = 0; i < 2; i++)
        2:   42:    l_32[i] = &g_33;
        5:   43:  for (i = 0; i < 4; i++)
        4:   44:    l_120[i] = (void *)0;
       1*:   45:  l_118[1] = func_2(l_7, l_7, ((safe_rshift_func_uint64_t_u_s(l_7, 26)) && (((safe_add_func_int64_t_s_s((safe_div_func_int64_t_s_s(1L, g_14[0][1])), ((safe_div_func_uint8_t_u_u(((safe_lshift_func_uint16_t_u_u(((safe_add_func_int8_t_s_s((l_36[0] ^= (~(((safe_mul_func_int32_t_s_s((l_7, (((safe_sub_func_int64_t_s_s((((0x168F928D9BA5F27ALL ^ (safe_sub_func_uint16_t_u_u(((safe_sub_func_uint8_t_u_u(g_14[0][0], ((g_33 = (safe_rshift_func_uint64_t_u_s((((l_7 <= g_14[0][1]) < l_7) ^ l_7), g_14[0][1]))), 252UL))) != g_14[0][1]), l_7))) == g_14[0][0]) | 0x5AB4L), l_7)) ^ l_7) <= l_7)), g_14[0][1])), g_33) >= l_7))), g_35)) || g_35), g_14[0][1])), 7UL), g_14[0][1])) & l_7))) | g_35) | l_7)), l_7);
        1:   46:  ++g_122;
        1:   47:  return g_33;
        -:   48:}
        -:   49:
        1:   50:static int32_t func_2(uint16_t p_3, uint64_t p_4, uint32_t p_5, uint64_t p_6) {
        1:   51:  uint8_t l_50 = 0xF3L;
        1:   52:  int32_t *l_71 = &g_72;
        1:   53:  uint32_t *l_76 = &g_43;
       1*:   54:  for (p_4 = 0; (p_4 == 57); p_4 = safe_add_func_int16_t_s_s(p_4, 5)) {
    #####:   55:    int8_t *l_41 = &g_35;
    #####:   56:    uint32_t *l_42 = &g_43;
    #####:   57:    uint32_t *l_49 = (void *)0;
    #####:   58:    uint32_t **l_48 = &l_49;
    #####:   59:    uint64_t *l_51 = &g_52;
    #####:   60:    int8_t *l_61 = &g_35;
    #####:   61:    int32_t l_64 = (-6L);
    #####:   62:    int32_t *l_70 = &l_64;
    #####:   63:    uint32_t *l_102 = &g_92;
        -:   64:  }
        1:   65:  return p_6;
        -:   66:}
        -:   67:
        1:   68:int main(int argc, char *argv[]) {
        -:   69:  int i, j;
        1:   70:  int print_hash_value = 0;
       1*:   71:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   72:    print_hash_value = 1;
        1:   73:  platform_main_begin();
        1:   74:  crc32_gentab();
        1:   75:  func_1();
        2:   76:  for (i = 0; i < 1; i++) {
        3:   77:    for (j = 0; j < 2; j++) {
        2:   78:      transparent_crc(g_14[i][j], "g_14[i][j]", print_hash_value);
        2:   79:      if (print_hash_value)
    #####:   80:        printf("index = [%d][%d]\n", i, j);
        -:   81:    }
        -:   82:  }
        1:   83:  transparent_crc(g_33, "g_33", print_hash_value);
        1:   84:  transparent_crc(g_35, "g_35", print_hash_value);
        1:   85:  transparent_crc(g_43, "g_43", print_hash_value);
        1:   86:  transparent_crc(g_47, "g_47", print_hash_value);
        1:   87:  transparent_crc(g_52, "g_52", print_hash_value);
        1:   88:  transparent_crc(g_62, "g_62", print_hash_value);
        1:   89:  transparent_crc(g_72, "g_72", print_hash_value);
        1:   90:  transparent_crc(g_92, "g_92", print_hash_value);
        1:   91:  transparent_crc(g_100, "g_100", print_hash_value);
        1:   92:  transparent_crc(g_105, "g_105", print_hash_value);
        1:   93:  transparent_crc(g_113, "g_113", print_hash_value);
        1:   94:  transparent_crc(g_122, "g_122", print_hash_value);
        1:   95:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   96:  return 0;
        -:   97:}

        -:    0:Source:890.c
        -:    0:Graph:890.gcno
        -:    0:Data:890.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_2[5] = {0x5CDBE8E5L, 0x5CDBE8E5L, 0x5CDBE8E5L, 0x5CDBE8E5L, 0x5CDBE8E5L};
        -:    7:static const int32_t g_18 = 0xD60A2215L;
        -:    8:static int8_t g_27 = 0xDBL;
        -:    9:static int32_t g_32 = 4L;
        -:   10:static uint64_t g_44 = 0x9B12DB22C08F497CLL;
        -:   11:static int32_t g_49 = 0x3830386BL;
        -:   12:static uint32_t g_52 = 0x9EFA4ED9L;
        -:   13:static int32_t *volatile g_54 = &g_32;
        -:   14:
        -:   15:static int64_t func_1(void);
        -:   16:static int32_t *func_5(uint16_t p_6, uint8_t p_7);
        -:   17:
        1:   18:static int64_t func_1(void) {
        1:   19:  int32_t *l_15 = (void *)0;
        1:   20:  const int32_t *l_17 = &g_18;
        -:   21:  int32_t l_25[4];
        1:   22:  int32_t l_28 = 0L;
        -:   23:  int i;
        5:   24:  for (i = 0; i < 4; i++)
        4:   25:    l_25[i] = 0x5A12A2EFL;
       41:   26:  for (g_2[4] = 24; (g_2[4] >= (-15)); g_2[4]--) {
       40:   27:    int32_t **l_16 = &l_15;
        -:   28:    int8_t *l_26[1];
        -:   29:    int i;
       80:   30:    for (i = 0; i < 1; i++)
       40:   31:      l_26[i] = &g_27;
      40*:   32:    (*l_16) = func_5(g_2[4], (safe_div_func_uint8_t_u_u((g_2[4] > (+((g_2[4], ((safe_mul_func_int8_t_s_s((l_28 &= ((safe_add_func_int8_t_s_s(((((*l_16) = l_15) != (l_17 = &g_2[2])), (safe_add_func_uint64_t_u_u(((g_2[4], (((((*l_17) != (g_18, (safe_mul_func_uint32_t_u_u((safe_add_func_int16_t_s_s((((void *)0 == &l_17) && g_18), 0x2B8EL)), 0x9D5B611FL)))) && (*l_17)) || g_2[1]) != 0x015FB26CL)), g_2[0]), g_2[3]))), l_25[1])) | l_25[1])), l_25[1])) || g_2[4])) <= l_25[1]))), l_25[1])));
       40:   33:    if ((*l_17))
       40:   34:      continue;
        -:   35:  }
        1:   36:  return g_2[4];
        -:   37:}
        -:   38:
       40:   39:static int32_t *func_5(uint16_t p_6, uint8_t p_7) {
        -:   40:  uint32_t l_29[5];
       40:   41:  int32_t *const l_30 = &g_2[4];
       40:   42:  int64_t l_41 = 0xC8C9F13A4B1F0599LL;
       40:   43:  uint64_t *l_42 = (void *)0;
       40:   44:  uint64_t *l_43 = &g_44;
       40:   45:  uint32_t *l_51 = &g_52;
        -:   46:  int i;
      240:   47:  for (i = 0; i < 5; i++)
      200:   48:    l_29[i] = 18446744073709551608UL;
      240:   49:  for (p_7 = 0; (p_7 <= 4); p_7 += 1) {
      200:   50:    int32_t *l_31 = &g_32;
     200*:   51:    for (g_27 = 4; (g_27 >= 0); g_27 -= 1) {
        -:   52:      int i;
      200:   53:      if (l_29[g_27])
      200:   54:        break;
        -:   55:    }
      200:   56:    l_31 = l_30;
        -:   57:  }
      40*:   58:  if ((g_27 < (safe_lshift_func_uint32_t_u_u(((*l_51) |= ((((((safe_sub_func_int32_t_s_s((safe_div_func_uint64_t_u_u(0xF05DE082ADE89B93LL, 0xBBBB531EAA473ECFLL)), (*l_30))) || (*l_30)) && (safe_add_func_uint64_t_u_u(((*l_43) ^= (l_41 == p_6)), ((safe_rshift_func_int8_t_s_u(((safe_sub_func_int64_t_s_s(((g_49, (((!(9UL ^ g_2[4])) < g_18) == (*l_30))) & (*l_30)), 18446744073709551614UL)) != g_49), 1)) ^ (*l_30))))), 0xBF04L) <= (*l_30)) != 0xA0L)), (*l_30))))) {
        -:   59:    uint64_t *l_53[2];
        -:   60:    int i;
      120:   61:    for (i = 0; i < 2; i++)
       80:   62:      l_53[i] = (void *)0;
       40:   63:    (*g_54) = (l_53[1] != l_53[1]);
        -:   64:  } else {
    #####:   65:    uint16_t l_56 = 65529UL;
    #####:   66:    for (g_32 = 3; (g_32 >= 0); g_32 -= 1) {
    #####:   67:      int32_t *l_55 = &g_49;
        -:   68:      int i;
    #####:   69:      l_56 = ((*l_55) = l_29[g_32]);
        -:   70:    }
        -:   71:  }
       40:   72:  return l_51;
        -:   73:}
        -:   74:
        1:   75:int main(int argc, char *argv[]) {
        -:   76:  int i;
        1:   77:  int print_hash_value = 0;
       1*:   78:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   79:    print_hash_value = 1;
        1:   80:  platform_main_begin();
        1:   81:  crc32_gentab();
        1:   82:  func_1();
        6:   83:  for (i = 0; i < 5; i++) {
        5:   84:    transparent_crc(g_2[i], "g_2[i]", print_hash_value);
        5:   85:    if (print_hash_value)
    #####:   86:      printf("index = [%d]\n", i);
        -:   87:  }
        1:   88:  transparent_crc(g_18, "g_18", print_hash_value);
        1:   89:  transparent_crc(g_27, "g_27", print_hash_value);
        1:   90:  transparent_crc(g_32, "g_32", print_hash_value);
        1:   91:  transparent_crc(g_44, "g_44", print_hash_value);
        1:   92:  transparent_crc(g_49, "g_49", print_hash_value);
        1:   93:  transparent_crc(g_52, "g_52", print_hash_value);
        1:   94:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   95:  return 0;
        -:   96:}

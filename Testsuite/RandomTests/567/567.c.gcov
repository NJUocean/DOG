        -:    0:Source:567.c
        -:    0:Graph:567.gcno
        -:    0:Data:567.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_3[1][1][1] = {{{0x210B999FL}}};
        -:    7:
        -:    8:static int16_t func_1(void);
        -:    9:
        1:   10:static int16_t func_1(void) {
        1:   11:  int32_t *l_2 = &g_3[0][0][0];
        1:   12:  int32_t *l_4 = &g_3[0][0][0];
        1:   13:  int32_t *l_5 = &g_3[0][0][0];
        1:   14:  int32_t *l_6 = &g_3[0][0][0];
        1:   15:  int32_t *l_7 = &g_3[0][0][0];
        -:   16:  int32_t *l_8[1][5];
        1:   17:  uint32_t l_9 = 18446744073709551615UL;
        1:   18:  uint32_t l_12 = 4UL;
        -:   19:  int i, j;
        2:   20:  for (i = 0; i < 1; i++) {
        6:   21:    for (j = 0; j < 5; j++)
        5:   22:      l_8[i][j] = &g_3[0][0][0];
        -:   23:  }
        1:   24:  l_9++;
        1:   25:  l_12--;
        1:   26:  return g_3[0][0][0];
        -:   27:}
        -:   28:
        1:   29:int main(int argc, char *argv[]) {
        -:   30:  int i, j, k;
        1:   31:  int print_hash_value = 0;
       1*:   32:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   33:    print_hash_value = 1;
        1:   34:  platform_main_begin();
        1:   35:  crc32_gentab();
        1:   36:  func_1();
        2:   37:  for (i = 0; i < 1; i++) {
        2:   38:    for (j = 0; j < 1; j++) {
        2:   39:      for (k = 0; k < 1; k++) {
        1:   40:        transparent_crc(g_3[i][j][k], "g_3[i][j][k]", print_hash_value);
        1:   41:        if (print_hash_value)
    #####:   42:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   43:      }
        -:   44:    }
        -:   45:  }
        1:   46:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   47:  return 0;
        -:   48:}

        -:    0:Source:652.c
        -:    0:Graph:652.gcno
        -:    0:Data:652.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  volatile signed f0 : 6;
        -:    8:  uint64_t f1;
        -:    9:  unsigned f2 : 27;
        -:   10:};
        -:   11:
        -:   12:static int32_t g_13 = 0xDD1D8F8FL;
        -:   13:static volatile int32_t g_16 = (-1L);
        -:   14:static volatile int32_t *volatile g_15 = &g_16;
        -:   15:static int32_t g_23 = 1L;
        -:   16:static struct S0 g_36 = {3, 0x3A81F6ED734895C4LL, 3090};
        -:   17:static int32_t *g_39 = &g_23;
        -:   18:static int32_t **volatile g_38 = &g_39;
        -:   19:static int8_t g_69[4][4][2] = {{{0xF6L, 1L}, {1L, 4L}, {1L, 1L}, {0xF6L, 1L}}, {{1L, 4L}, {0x67L, 0x67L}, {0xF6L, 0x67L}, {0x67L, 4L}}, {{1L, 1L}, {0xF6L, 1L}, {1L, 4L}, {1L, 1L}}, {{0xF6L, 1L}, {1L, 4L}, {0x67L, 0x67L}, {0xF6L, 0x67L}}};
        -:   20:static uint16_t g_75 = 65535UL;
        -:   21:static uint32_t g_76 = 0x8375F08AL;
        -:   22:static struct S0 *g_78 = &g_36;
        -:   23:static struct S0 **volatile g_77[5][3][5] = {{{&g_78, &g_78, &g_78, &g_78, &g_78}, {&g_78, (void *)0, &g_78, &g_78, &g_78}, {&g_78, &g_78, (void *)0, &g_78, &g_78}}, {{&g_78, &g_78, &g_78, (void *)0, &g_78}, {&g_78, &g_78, (void *)0, &g_78, (void *)0}, {(void *)0, (void *)0, (void *)0, (void *)0, &g_78}}, {{(void *)0, &g_78, &g_78, &g_78, &g_78}, {&g_78, &g_78, &g_78, &g_78, (void *)0}, {&g_78, &g_78, (void *)0, &g_78, &g_78}}, {{&g_78, (void *)0, &g_78, (void *)0, &g_78}, {&g_78, &g_78, &g_78, (void *)0, (void *)0}, {&g_78, &g_78, (void *)0, &g_78, &g_78}}, {{&g_78, (void *)0, &g_78, &g_78, (void *)0}, {(void *)0, &g_78, &g_78, &g_78, &g_78}, {(void *)0, &g_78, (void *)0, &g_78, &g_78}}};
        -:   24:static uint8_t g_89[3][2][5] = {{{0x27L, 8UL, 8UL, 0x27L, 8UL}, {0x27L, 0x27L, 255UL, 0x27L, 0x27L}}, {{8UL, 0x27L, 8UL, 8UL, 0x27L}, {0x27L, 8UL, 8UL, 0x27L, 8UL}}, {{0x27L, 0x27L, 255UL, 0x27L, 0x27L}, {8UL, 0x27L, 8UL, 8UL, 0x27L}}};
        -:   25:static int64_t g_112 = 0xF1C73263BB6FCE13LL;
        -:   26:static int32_t g_118 = 6L;
        -:   27:static int32_t g_120[4] = {0x015C768AL, 0x015C768AL, 0x015C768AL, 0x015C768AL};
        -:   28:static uint32_t g_133 = 0x30D379EBL;
        -:   29:static const struct S0 *g_145 = &g_36;
        -:   30:static const struct S0 **volatile g_144 = &g_145;
        -:   31:static uint64_t g_162 = 0x9661A18340555863LL;
        -:   32:static uint64_t g_164 = 0xF3C5D46ADFC38D33LL;
        -:   33:static uint64_t g_170 = 0x17702E8EBDD08413LL;
        -:   34:static struct S0 *volatile *g_179 = &g_78;
        -:   35:static struct S0 *volatile *const *g_178 = &g_179;
        -:   36:static int16_t g_209 = (-1L);
        -:   37:static struct S0 *volatile *const volatile *g_218 = &g_179;
        -:   38:
        -:   39:static int64_t func_1(void);
        -:   40:static int8_t func_8(int16_t p_9, int16_t p_10, int64_t p_11, uint16_t p_12);
        -:   41:
        1:   42:static int64_t func_1(void) {
        1:   43:  uint32_t l_14 = 1UL;
        1:   44:  uint8_t l_115 = 0xCEL;
        1:   45:  int16_t l_116 = (-6L);
        1:   46:  uint16_t l_165 = 0x0ABAL;
        1:   47:  int32_t **l_211 = &g_39;
        1:   48:  struct S0 **l_217 = &g_78;
        1:   49:  struct S0 ***l_216 = &l_217;
        1:   50:  if ((safe_sub_func_int64_t_s_s((safe_lshift_func_int64_t_s_s((safe_mul_func_uint64_t_u_u((250UL < func_8(g_13, l_14, g_13, g_13)), ((((0L < (((g_76, 0x01L) == l_14) <= l_14)), g_13) <= g_36.f2) ^ g_36.f1))), g_69[0][2][0])), l_14))) {
        1:   51:    uint64_t l_106 = 0x5A173F203748AADDLL;
        1:   52:    int32_t l_114[4] = {0xC3328131L, 0xC3328131L, 0xC3328131L, 0xC3328131L};
        1:   53:    int32_t l_117 = (-1L);
        -:   54:    int i;
        3:   55:    for (g_23 = 1; (g_23 >= 0); g_23 -= 1) {
        2:   56:      uint8_t *l_87 = (void *)0;
        2:   57:      uint8_t *l_88 = &g_89[2][0][0];
        2:   58:      int32_t l_103 = 0xDEA94120L;
        2:   59:      struct S0 **l_108 = &g_78;
        2:   60:      struct S0 ***l_109 = (void *)0;
        2:   61:      struct S0 ***l_110 = &l_108;
        2:   62:      int64_t *l_111 = &g_112;
        -:   63:      uint64_t *l_113[1][1];
        2:   64:      int32_t *l_119 = &g_120[3];
        -:   65:      int i, j;
        4:   66:      for (i = 0; i < 1; i++) {
        4:   67:        for (j = 0; j < 1; j++)
        2:   68:          l_113[i][j] = &l_106;
        -:   69:      }
       2*:   70:      (*l_119) &= (g_118 |= ((g_36, (safe_sub_func_uint8_t_u_u((l_117 &= (((((((((safe_lshift_func_uint8_t_u_s(((*l_88) = (safe_lshift_func_uint16_t_u_s(g_36.f0, g_69[1][3][0]))), ((safe_lshift_func_uint16_t_u_u((safe_add_func_int32_t_s_s(((safe_rshift_func_int8_t_s_u(((safe_mod_func_uint64_t_u_u((l_114[0] = (((safe_lshift_func_uint16_t_u_s((((~((*l_111) = (safe_div_func_int16_t_s_s(l_103, ((safe_add_func_uint32_t_u_u((l_106, (~(8UL ^ (0xEE7EL < (((*l_110) = l_108) != &g_78))))), g_36.f1)), g_23))))) <= 6UL) == l_106), 5)) < l_14), 18446744073709551613UL)), g_76)) != l_14), 0)), 0x60C92991L), 0xDA5F02B5L)), l_14)), g_36.f1))), l_115) != g_76) || l_103), 18446744073709551615UL), g_36.f0) & 0x040FL) != 0UL) > l_116)), g_75))) >= (-7L)));
        8:   71:      for (l_106 = 0; (l_106 <= 2); l_106 += 1) {
        6:   72:        uint32_t *l_132 = &g_133;
        6:   73:        int32_t l_137 = 0x6355718CL;
        6:   74:        int8_t *l_138 = &g_69[2][3][1];
        6:   75:        int32_t *l_139 = &l_117;
       6*:   76:        (*l_139) ^= ((safe_add_func_uint32_t_u_u((g_36.f2 = (safe_lshift_func_int8_t_s_u(0x6AL, 5))), (safe_rshift_func_int8_t_s_u((safe_add_func_int64_t_s_s((((*l_138) = ((safe_lshift_func_uint32_t_u_s(0x438EE533L, (*g_15))) != (((((l_115, &g_13) != (void *)0), (+((*l_132)++))) && (!((&g_89[2][0][4] != &g_89[2][0][0]) ^ (g_75, l_137)))) && (*l_119)))) || g_112), g_89[1][1][1])), 5)))) & 0x535970AEDAF9C58ALL);
        -:   77:      }
        -:   78:    }
        -:   79:  } else {
    #####:   80:    const struct S0 *l_142[2][4] = {{&g_36, &g_36, &g_36, &g_36}, {&g_36, &g_36, &g_36, &g_36}};
    #####:   81:    int32_t l_183 = 9L;
    #####:   82:    int16_t *l_208 = &g_209;
        -:   83:    int i, j;
    #####:   84:    for (g_36.f1 = (-23); (g_36.f1 < 52); g_36.f1++) {
    #####:   85:      const struct S0 **l_143 = (void *)0;
    #####:   86:      int32_t l_148 = 1L;
        -:   87:      int32_t l_168[2];
        -:   88:      int i;
    #####:   89:      for (i = 0; i < 2; i++)
    #####:   90:        l_168[i] = 0xCFDF4E95L;
    #####:   91:      (*g_144) = l_142[1][2];
    #####:   92:      if ((safe_mul_func_int32_t_s_s((g_36, ((l_115, g_118) < l_148)), (g_69[0][1][1], l_14)))) {
    #####:   93:        uint64_t *l_161 = &g_162;
    #####:   94:        uint64_t *l_163 = &g_164;
    #####:   95:        uint16_t *l_166 = (void *)0;
    #####:   96:        uint16_t *l_167 = &l_165;
    #####:   97:        uint64_t *l_169 = &g_170;
    #####:   98:        int8_t *l_171 = &g_69[2][3][1];
    #####:   99:        int32_t *l_172 = &g_120[1];
    #####:  100:        (*l_172) |= ((((-9L) != (g_36.f0 != l_148)) != (g_145 == ((safe_mul_func_uint16_t_u_u((safe_rshift_func_int8_t_s_u(((*l_171) = (safe_rshift_func_int32_t_s_u(((((*l_169) = (l_168[1] = ((g_118 || (g_36.f1 == (safe_add_func_int64_t_s_s(g_75, (safe_div_func_uint16_t_u_u(((*l_167) = (((*l_163) = (safe_mul_func_uint64_t_u_u(((*l_161) |= 0x46063A1CE40C6877LL), ((g_13 ^ (*g_39)), g_36.f2)))), l_165)), g_118)))))) > 0xF6274B56L))) || 0x596B175D022AC7DBLL) ^ g_133), 5))), 5)), 0xF21EL)), g_78))), 0x44CA3D13L);
        -:  101:      } else {
    #####:  102:        int8_t *l_177 = &g_69[0][3][0];
    #####:  103:        struct S0 **const *l_180 = (void *)0;
    #####:  104:        (*g_39) = ((safe_sub_func_int8_t_s_s(((safe_div_func_uint32_t_u_u(4294967295UL, 6UL)), ((((*l_177) = g_16), &g_77[0][0][2]) != g_178)), (((void *)0 == l_180) | (safe_add_func_int16_t_s_s((l_14 | g_36.f2), 65535UL))))) < l_183);
        -:  105:      }
        -:  106:    }
    #####:  107:    (*g_39) = (safe_mod_func_uint8_t_u_u((safe_add_func_int8_t_s_s(((safe_mul_func_uint64_t_u_u((safe_sub_func_uint8_t_u_u(((safe_mod_func_int64_t_s_s((0x2EFFBD2F48C2FE74LL && ((1UL || (safe_add_func_uint32_t_u_u(l_116, g_162))) >= (g_69[3][2][1] != (((safe_lshift_func_uint64_t_u_u((((safe_add_func_int32_t_s_s((**g_38), ((safe_add_func_int16_t_s_s(((safe_div_func_uint16_t_u_u((((-5L) <= ((*l_208) = (safe_lshift_func_int8_t_s_u(0x37L, 2)))) & (l_14 || 0x0CL)), l_115)) && g_209), g_13)) > 0x76A6A2F9L))) == 0xFFL) < g_36.f2), g_89[2][1][3])), g_36.f1), g_164)))), l_14)), 1UL), g_112)), g_76)) | g_23), 1UL)), g_69[2][3][1]));
        -:  108:  }
        5:  109:  for (l_116 = 0; (l_116 <= 3); l_116 += 1) {
        4:  110:    uint64_t *l_210 = &g_164;
        4:  111:    uint32_t *l_219 = &g_133;
        -:  112:    int i;
       4*:  113:    g_120[l_116] = (((((void *)0 != l_210), 65533UL) && ((g_36, &g_15) == (void *)0)) <= (l_211 != ((6L | (safe_mod_func_int8_t_s_s(((safe_lshift_func_uint32_t_u_s(((*l_219) = (l_216 == g_218)), 5)) && 0x5006F50CL), g_120[l_116]))), l_211)));
        -:  114:  }
        1:  115:  return g_133;
        -:  116:}
        -:  117:
        1:  118:static int8_t func_8(int16_t p_9, int16_t p_10, int64_t p_11, uint16_t p_12) {
        1:  119:  volatile int32_t *volatile *l_17 = &g_15;
        1:  120:  int64_t l_28 = 4L;
        1:  121:  int32_t l_30 = 0L;
        1:  122:  struct S0 *l_42 = (void *)0;
        1:  123:  (*l_17) = g_15;
       1*:  124:  for (p_11 = (-10); (p_11 == (-27)); p_11 = safe_sub_func_uint8_t_u_u(p_11, 8)) {
    #####:  125:    uint32_t l_33 = 0xEAE11771L;
    #####:  126:    int32_t *l_37 = &l_30;
        -:  127:  }
        1:  128:  return p_9;
        -:  129:}
        -:  130:
        1:  131:int main(int argc, char *argv[]) {
        -:  132:  int i, j, k;
        1:  133:  int print_hash_value = 0;
       1*:  134:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  135:    print_hash_value = 1;
        1:  136:  platform_main_begin();
        1:  137:  crc32_gentab();
        1:  138:  func_1();
        1:  139:  transparent_crc(g_13, "g_13", print_hash_value);
        1:  140:  transparent_crc(g_16, "g_16", print_hash_value);
        1:  141:  transparent_crc(g_23, "g_23", print_hash_value);
        1:  142:  transparent_crc(g_36.f0, "g_36.f0", print_hash_value);
        1:  143:  transparent_crc(g_36.f1, "g_36.f1", print_hash_value);
        1:  144:  transparent_crc(g_36.f2, "g_36.f2", print_hash_value);
        5:  145:  for (i = 0; i < 4; i++) {
       20:  146:    for (j = 0; j < 4; j++) {
       48:  147:      for (k = 0; k < 2; k++) {
       32:  148:        transparent_crc(g_69[i][j][k], "g_69[i][j][k]", print_hash_value);
       32:  149:        if (print_hash_value)
    #####:  150:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  151:      }
        -:  152:    }
        -:  153:  }
        1:  154:  transparent_crc(g_75, "g_75", print_hash_value);
        1:  155:  transparent_crc(g_76, "g_76", print_hash_value);
        4:  156:  for (i = 0; i < 3; i++) {
        9:  157:    for (j = 0; j < 2; j++) {
       36:  158:      for (k = 0; k < 5; k++) {
       30:  159:        transparent_crc(g_89[i][j][k], "g_89[i][j][k]", print_hash_value);
       30:  160:        if (print_hash_value)
    #####:  161:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  162:      }
        -:  163:    }
        -:  164:  }
        1:  165:  transparent_crc(g_112, "g_112", print_hash_value);
        1:  166:  transparent_crc(g_118, "g_118", print_hash_value);
        5:  167:  for (i = 0; i < 4; i++) {
        4:  168:    transparent_crc(g_120[i], "g_120[i]", print_hash_value);
        4:  169:    if (print_hash_value)
    #####:  170:      printf("index = [%d]\n", i);
        -:  171:  }
        1:  172:  transparent_crc(g_133, "g_133", print_hash_value);
        1:  173:  transparent_crc(g_162, "g_162", print_hash_value);
        1:  174:  transparent_crc(g_164, "g_164", print_hash_value);
        1:  175:  transparent_crc(g_170, "g_170", print_hash_value);
        1:  176:  transparent_crc(g_209, "g_209", print_hash_value);
        1:  177:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  178:  return 0;
        -:  179:}

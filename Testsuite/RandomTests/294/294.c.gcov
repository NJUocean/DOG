        -:    0:Source:294.c
        -:    0:Graph:294.gcno
        -:    0:Data:294.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  unsigned f0 : 26;
        -:   10:  volatile unsigned f1 : 7;
        -:   11:  unsigned f2 : 13;
        -:   12:  signed f3 : 5;
        -:   13:  unsigned : 0;
        -:   14:};
        -:   15:#pragma pack(pop)
        -:   16:
        -:   17:static uint8_t g_2[2][3][2] = {{{0x67L, 0x67L}, {0x67L, 0x67L}, {0x67L, 0x67L}}, {{0x67L, 0x67L}, {0x67L, 0x67L}, {0x67L, 0x67L}}};
        -:   18:static int16_t g_12 = 0L;
        -:   19:static int16_t g_44 = 0xEF9FL;
        -:   20:static int16_t *g_43 = &g_44;
        -:   21:static int8_t g_47 = 5L;
        -:   22:static uint16_t g_51 = 0xFF74L;
        -:   23:static uint64_t g_53[1] = {18446744073709551615UL};
        -:   24:static int32_t g_56 = 0x2192FE2CL;
        -:   25:static int32_t *volatile g_55 = &g_56;
        -:   26:static const struct S0 g_62 = {940, 2, 11, -1};
        -:   27:static int32_t g_89 = (-5L);
        -:   28:static uint16_t g_92[1] = {0xBD24L};
        -:   29:
        -:   30:static const uint32_t func_1(void);
        -:   31:static int32_t func_3(const int64_t p_4);
        -:   32:
        1:   33:static const uint32_t func_1(void) {
        1:   34:  int32_t l_10 = 0x3BA20B95L;
        1:   35:  int16_t *l_11 = &g_12;
        1:   36:  int16_t l_85 = (-1L);
        1:   37:  if ((g_2[0][1][0], func_3((((safe_mul_func_uint8_t_u_u((safe_mul_func_int16_t_s_s(((*l_11) = (~l_10)), (safe_mul_func_int32_t_s_s((~l_10), (+l_10))))), g_2[1][0][0])) != 1L), (safe_add_func_int8_t_s_s(g_12, (safe_lshift_func_uint32_t_u_s((l_10 <= (l_10 ^ g_2[0][1][0])), 27)))))))) {
        1:   38:    return g_53[0];
        -:   39:  } else {
    #####:   40:    uint16_t l_86 = 0x6664L;
    #####:   41:    int32_t *l_90 = &g_56;
        -:   42:    int32_t *l_91[3];
        -:   43:    int i;
    #####:   44:    for (i = 0; i < 3; i++)
    #####:   45:      l_91[i] = &l_10;
    #####:   46:    for (g_51 = (-2); (g_51 > 55); ++g_51) {
    #####:   47:      int32_t *l_59 = &l_10;
    #####:   48:      uint64_t *l_63 = &g_53[0];
    #####:   49:      uint8_t *l_68 = &g_2[0][1][0];
    #####:   50:      uint16_t *l_74 = &g_51;
    #####:   51:      uint16_t **l_75 = &l_74;
    #####:   52:      int64_t *l_84 = (void *)0;
    #####:   53:      int8_t *l_87 = &g_47;
    #####:   54:      int32_t *l_88 = &g_89;
    #####:   55:      (*l_59) |= (*g_55);
    #####:   56:      (*l_88) ^= ((*g_55) = (safe_sub_func_uint64_t_u_u((g_62, ((*l_63) = 0x9ED189098934ECA6LL)), (0UL != ((*l_87) = ((safe_mul_func_uint8_t_u_u(((g_44 > (safe_lshift_func_uint8_t_u_s(((*l_68) &= 0x28L), ((+(safe_mod_func_uint16_t_u_u((safe_mod_func_int16_t_s_s((&g_51 != ((*l_75) = l_74)), (0x338D581CA9286DF4LL | (safe_mul_func_int32_t_s_s((safe_mod_func_int8_t_s_s(((l_85 |= ((((safe_add_func_uint32_t_u_u((safe_mul_func_uint64_t_u_u(((0x8BL >= g_62.f3) >= (*g_43)), g_51)), g_44)) != 0L) == g_62.f3) <= 4294967292UL)) < l_10), (*l_59))), l_86))))), (*l_59)))) < 1UL)))) & g_47), 0x00L)), g_2[0][1][0]))))));
        -:   57:    }
    #####:   58:    g_92[0]--;
        -:   59:  }
    #####:   60:  return l_10;
        -:   61:}
        -:   62:
        1:   63:static int32_t func_3(const int64_t p_4) {
        1:   64:  int16_t *l_34 = &g_12;
        1:   65:  int16_t *l_41 = &g_12;
        1:   66:  int16_t **l_42 = (void *)0;
        1:   67:  int8_t *l_45 = (void *)0;
        -:   68:  int8_t *l_46[3];
        1:   69:  int32_t l_48 = 5L;
        -:   70:  int32_t l_49[4][2][3];
        1:   71:  uint16_t *l_50 = &g_51;
        1:   72:  uint64_t *l_52 = &g_53[0];
        1:   73:  int32_t l_54 = (-6L);
        -:   74:  int i, j, k;
        4:   75:  for (i = 0; i < 3; i++)
        3:   76:    l_46[i] = &g_47;
        5:   77:  for (i = 0; i < 4; i++) {
       12:   78:    for (j = 0; j < 2; j++) {
       32:   79:      for (k = 0; k < 3; k++)
       24:   80:        l_49[i][j][k] = 1L;
        -:   81:    }
        -:   82:  }
       1*:   83:  (*g_55) |= (safe_add_func_int8_t_s_s((p_4, ((safe_add_func_uint64_t_u_u(((safe_mul_func_uint32_t_u_u((safe_mod_func_int16_t_s_s((safe_sub_func_uint32_t_u_u((((g_12, ((*l_52) = ((((safe_unary_minus_func_int64_t_s(((g_2[0][1][0], ((safe_mul_func_int64_t_s_s((((*l_50) |= (g_12 >= ((l_48 = ((l_34 = l_34) != (g_43 = ((safe_mul_func_uint64_t_u_u((safe_div_func_uint8_t_u_u(g_12, 4L)), (safe_lshift_func_uint32_t_u_u(4294967290UL, 22)))), l_41)))) | l_49[0][0][2]))) | l_49[0][0][2]), g_12)), p_4)) && 1L))), p_4) | g_2[0][0][1]), g_12))) < 0xC151D1A932DA3BB1LL) | 65534UL), l_49[0][0][2])), l_49[0][0][2])), l_54)) >= l_49[0][0][2]), 9L)), l_54)), g_2[0][1][0]));
        1:   84:  return p_4;
        -:   85:}
        -:   86:
        1:   87:int main(int argc, char *argv[]) {
        -:   88:  int i, j, k;
        1:   89:  int print_hash_value = 0;
       1*:   90:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   91:    print_hash_value = 1;
        1:   92:  platform_main_begin();
        1:   93:  crc32_gentab();
        1:   94:  func_1();
        3:   95:  for (i = 0; i < 2; i++) {
        8:   96:    for (j = 0; j < 3; j++) {
       18:   97:      for (k = 0; k < 2; k++) {
       12:   98:        transparent_crc(g_2[i][j][k], "g_2[i][j][k]", print_hash_value);
       12:   99:        if (print_hash_value)
    #####:  100:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  101:      }
        -:  102:    }
        -:  103:  }
        1:  104:  transparent_crc(g_12, "g_12", print_hash_value);
        1:  105:  transparent_crc(g_44, "g_44", print_hash_value);
        1:  106:  transparent_crc(g_47, "g_47", print_hash_value);
        1:  107:  transparent_crc(g_51, "g_51", print_hash_value);
        2:  108:  for (i = 0; i < 1; i++) {
        1:  109:    transparent_crc(g_53[i], "g_53[i]", print_hash_value);
        1:  110:    if (print_hash_value)
    #####:  111:      printf("index = [%d]\n", i);
        -:  112:  }
        1:  113:  transparent_crc(g_56, "g_56", print_hash_value);
        1:  114:  transparent_crc(g_62.f0, "g_62.f0", print_hash_value);
        1:  115:  transparent_crc(g_62.f1, "g_62.f1", print_hash_value);
        1:  116:  transparent_crc(g_62.f2, "g_62.f2", print_hash_value);
        1:  117:  transparent_crc(g_62.f3, "g_62.f3", print_hash_value);
        1:  118:  transparent_crc(g_89, "g_89", print_hash_value);
        2:  119:  for (i = 0; i < 1; i++) {
        1:  120:    transparent_crc(g_92[i], "g_92[i]", print_hash_value);
        1:  121:    if (print_hash_value)
    #####:  122:      printf("index = [%d]\n", i);
        -:  123:  }
        1:  124:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  125:  return 0;
        -:  126:}

        -:    0:Source:761.c
        -:    0:Graph:761.gcno
        -:    0:Data:761.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  unsigned f0 : 4;
        -:    8:  volatile unsigned f1 : 9;
        -:    9:};
        -:   10:
        -:   11:static int32_t g_7 = 0x662A2B3BL;
        -:   12:static int32_t *g_6 = &g_7;
        -:   13:static uint32_t g_12 = 0xBAEF6E22L;
        -:   14:static struct S0 g_13[3] = {{2, 10}, {2, 10}, {2, 10}};
        -:   15:static struct S0 *volatile g_14 = (void *)0;
        -:   16:static struct S0 g_15 = {3, 10};
        -:   17:static struct S0 g_16 = {1, 21};
        -:   18:static struct S0 g_18[1][2][3] = {{{{0, 6}, {0, 6}, {0, 6}}, {{1, 4}, {1, 4}, {1, 4}}}};
        -:   19:
        -:   20:static struct S0 func_1(void);
        -:   21:static int32_t *func_2(int32_t *p_3, int32_t *p_4, int32_t p_5);
        -:   22:
        1:   23:static struct S0 func_1(void) {
        -:   24:  int32_t *l_8[5];
        -:   25:  int i;
        6:   26:  for (i = 0; i < 5; i++)
        5:   27:    l_8[i] = (void *)0;
        1:   28:  l_8[0] = func_2(g_6, l_8[3], g_7);
        1:   29:  return g_18[0][0][1];
        -:   30:}
        -:   31:
        1:   32:static int32_t *func_2(int32_t *p_3, int32_t *p_4, int32_t p_5) {
        1:   33:  const uint8_t l_9 = 0UL;
        1:   34:  int32_t **l_10 = &g_6;
        1:   35:  uint32_t *l_11 = &g_12;
        1:   36:  struct S0 *l_17 = &g_13[2];
        1:   37:  g_15 = (((*l_11) |= (l_9 < (p_4 != ((*l_10) = p_4)))), g_13[2]);
        1:   38:  (*l_17) = g_16;
        1:   39:  return p_4;
        -:   40:}
        -:   41:
        1:   42:int main(int argc, char *argv[]) {
        -:   43:  int i, j, k;
        1:   44:  int print_hash_value = 0;
       1*:   45:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   46:    print_hash_value = 1;
        1:   47:  platform_main_begin();
        1:   48:  crc32_gentab();
        1:   49:  func_1();
        1:   50:  transparent_crc(g_7, "g_7", print_hash_value);
        1:   51:  transparent_crc(g_12, "g_12", print_hash_value);
        4:   52:  for (i = 0; i < 3; i++) {
        3:   53:    transparent_crc(g_13[i].f0, "g_13[i].f0", print_hash_value);
        3:   54:    transparent_crc(g_13[i].f1, "g_13[i].f1", print_hash_value);
        3:   55:    if (print_hash_value)
    #####:   56:      printf("index = [%d]\n", i);
        -:   57:  }
        1:   58:  transparent_crc(g_15.f0, "g_15.f0", print_hash_value);
        1:   59:  transparent_crc(g_15.f1, "g_15.f1", print_hash_value);
        1:   60:  transparent_crc(g_16.f0, "g_16.f0", print_hash_value);
        1:   61:  transparent_crc(g_16.f1, "g_16.f1", print_hash_value);
        2:   62:  for (i = 0; i < 1; i++) {
        3:   63:    for (j = 0; j < 2; j++) {
        8:   64:      for (k = 0; k < 3; k++) {
        6:   65:        transparent_crc(g_18[i][j][k].f0, "g_18[i][j][k].f0", print_hash_value);
        6:   66:        transparent_crc(g_18[i][j][k].f1, "g_18[i][j][k].f1", print_hash_value);
        6:   67:        if (print_hash_value)
    #####:   68:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   69:      }
        -:   70:    }
        -:   71:  }
        1:   72:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   73:  return 0;
        -:   74:}

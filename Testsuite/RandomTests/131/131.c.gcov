        -:    0:Source:131.c
        -:    0:Graph:131.gcno
        -:    0:Data:131.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_2 = 0x7013DCE9L;
        -:    7:static int32_t g_3[1] = {0xBA772304L};
        -:    8:static int8_t g_7 = (-7L);
        -:    9:static uint32_t g_39 = 0x3C8A0C09L;
        -:   10:static int32_t g_50 = 0x5392FB38L;
        -:   11:static int32_t *volatile g_49[5][2][4] = {{{&g_3[0], &g_3[0], &g_50, &g_50}, {&g_3[0], &g_50, &g_3[0], &g_3[0]}}, {{&g_3[0], &g_50, &g_3[0], &g_3[0]}, {&g_50, &g_50, &g_50, &g_3[0]}}, {{&g_50, &g_50, &g_50, &g_50}, {&g_3[0], &g_3[0], &g_50, &g_3[0]}}, {{&g_50, &g_50, &g_50, &g_50}, {&g_50, &g_50, &g_3[0], &g_50}}, {{&g_3[0], &g_50, &g_3[0], &g_3[0]}, {&g_3[0], &g_3[0], &g_50, &g_50}}};
        -:   12:static uint32_t *g_79 = &g_39;
        -:   13:static uint32_t **volatile g_78[4] = {&g_79, &g_79, &g_79, &g_79};
        -:   14:static uint16_t g_90 = 0xF895L;
        -:   15:static int32_t *volatile g_93 = &g_50;
        -:   16:static uint8_t g_108 = 249UL;
        -:   17:static int32_t *volatile g_111 = &g_50;
        -:   18:static const int32_t *g_131 = &g_3[0];
        -:   19:static const int32_t *volatile *g_130[5][2] = {{&g_131, &g_131}, {&g_131, &g_131}, {&g_131, &g_131}, {&g_131, &g_131}, {&g_131, &g_131}};
        -:   20:static uint32_t *volatile *volatile g_134 = (void *)0;
        -:   21:static uint32_t *volatile *volatile *g_133 = &g_134;
        -:   22:static int8_t g_139 = 0L;
        -:   23:static uint32_t **g_143 = &g_79;
        -:   24:static uint32_t ***g_142[4] = {&g_143, &g_143, &g_143, &g_143};
        -:   25:static uint32_t ****g_141 = &g_142[1];
        -:   26:
        -:   27:static int64_t func_1(void);
        -:   28:static uint32_t func_8(int32_t *p_9);
        -:   29:
        1:   30:static int64_t func_1(void) {
        1:   31:  int32_t *l_10 = &g_3[0];
        1:   32:  uint32_t ****l_144 = &g_142[1];
        5:   33:  for (g_3[0] = (-23); (g_3[0] != (-27)); --g_3[0]) {
        4:   34:    int8_t l_6 = 0x66L;
        4:   35:    const uint32_t l_132 = 0UL;
        4:   36:    uint32_t **l_136 = (void *)0;
        4:   37:    uint32_t ***l_135 = &l_136;
        4:   38:    int32_t **const l_137 = &l_10;
        4:   39:    int8_t *l_138 = &g_139;
        4:   40:    int32_t *l_140 = &g_3[0];
       4*:   41:    (*l_137) = ((((g_7 &= l_6), ((l_6 && func_8(l_10)) & (!(((((safe_mul_func_int8_t_s_s(((*l_138) = (g_130[4][1] != (l_132, (((0x0A2FL > (g_133 != l_135)), 0x244BL), l_137)))), g_3[0])) >= (**l_137)) == g_3[0]) <= (**l_137)) & g_3[0])))), (-4L)), l_140);
        -:   42:  }
        1:   43:  l_144 = (g_141 = g_141);
        1:   44:  return (*l_10);
        -:   45:}
        -:   46:
        4:   47:static uint32_t func_8(int32_t *p_9) {
        4:   48:  uint32_t l_25 = 0xC62BB2C5L;
        4:   49:  int32_t *l_28 = &g_3[0];
        4:   50:  int32_t l_62 = (-1L);
        -:   51:  int32_t l_63[5];
        -:   52:  uint32_t **l_98[2];
        4:   53:  uint8_t *l_107 = &g_108;
        4:   54:  uint32_t l_123 = 0xCA393CC1L;
        -:   55:  int i;
       24:   56:  for (i = 0; i < 5; i++)
       20:   57:    l_63[i] = 0L;
       12:   58:  for (i = 0; i < 2; i++)
        8:   59:    l_98[i] = &g_79;
       4*:   60:  if ((((safe_mod_func_int32_t_s_s(0x69161D59L, ((safe_add_func_uint8_t_u_u((g_2 && (0x39L && (safe_div_func_int16_t_s_s(4L, (safe_unary_minus_func_int8_t_s(((safe_unary_minus_func_int8_t_s((safe_mul_func_uint8_t_u_u((safe_rshift_func_int16_t_s_u(1L, 0)), (l_25, l_25))))) == (safe_div_func_uint16_t_u_u((l_28 == (void *)0), 0x58B3L))))))))), g_7)) && (*l_28)))) | 0UL) > 0UL)) {
        -:   61:    int64_t l_44[5][1];
    #####:   62:    int32_t l_58 = 0xCBDFAC86L;
    #####:   63:    int32_t l_59 = (-6L);
    #####:   64:    int32_t l_61 = 7L;
    #####:   65:    int32_t l_65 = 0x80973F91L;
    #####:   66:    int32_t l_68 = (-1L);
    #####:   67:    int32_t l_70 = 0x77A780BBL;
    #####:   68:    int32_t l_72 = 0x70660D0CL;
    #####:   69:    int32_t l_73 = 0x3636CD8DL;
        -:   70:    int i, j;
    #####:   71:    for (i = 0; i < 5; i++) {
    #####:   72:      for (j = 0; j < 1; j++)
    #####:   73:        l_44[i][j] = 0xC42FA43DEE6EE3E4LL;
        -:   74:    }
    #####:   75:    for (l_25 = 0; (l_25 != 36); l_25 = safe_add_func_uint64_t_u_u(l_25, 4)) {
    #####:   76:      uint32_t l_40 = 6UL;
    #####:   77:      int32_t l_51 = 0x395B915FL;
    #####:   78:      int32_t l_60 = 0x79364560L;
    #####:   79:      int32_t l_64 = 0x4FD08915L;
    #####:   80:      int32_t l_66 = 0x5B8451CFL;
    #####:   81:      int32_t l_67 = 0x4CDC86D9L;
    #####:   82:      int32_t l_69 = 0xE08CD917L;
    #####:   83:      int32_t l_71 = 1L;
    #####:   84:      int32_t l_74 = (-1L);
    #####:   85:      for (g_7 = 0; (g_7 <= (-13)); --g_7) {
    #####:   86:        int32_t **l_37 = &l_28;
    #####:   87:        uint32_t *l_38 = &g_39;
    #####:   88:        int64_t l_45 = 0x81A770AACC702B5BLL;
    #####:   89:        int64_t *l_46 = (void *)0;
    #####:   90:        int64_t *l_47 = (void *)0;
    #####:   91:        int64_t *l_48 = &l_44[3][0];
    #####:   92:        l_51 ^= (0UL < ((*l_48) = ((safe_sub_func_int32_t_s_s((8L > (safe_sub_func_uint64_t_u_u(((((((*l_38) = (((*l_37) = (void *)0) == p_9)) >= ((-9L) <= 0x55L)) < (l_40 >= ((safe_rshift_func_uint16_t_u_u(l_40, (((~l_44[3][0]) < g_7) != l_44[4][0]))) >= l_45))) || l_44[3][0]) || l_44[3][0]), 18446744073709551615UL))), l_40)) ^ l_25)));
        -:   93:      }
    #####:   94:      for (g_39 = 15; (g_39 >= 36); g_39 = safe_add_func_uint32_t_u_u(g_39, 5)) {
    #####:   95:        int32_t **l_54 = &l_28;
    #####:   96:        int32_t *l_55 = (void *)0;
    #####:   97:        int32_t *l_56 = (void *)0;
    #####:   98:        int32_t *l_57[4] = {&g_3[0], &g_3[0], &g_3[0], &g_3[0]};
    #####:   99:        uint64_t l_75 = 0xE62F179D16154EA9LL;
        -:  100:        int i;
    #####:  101:        (*l_54) = p_9;
    #####:  102:        --l_75;
        -:  103:      }
        -:  104:    }
    #####:  105:    g_78[0] = g_78[0];
        -:  106:  } else {
        4:  107:    uint8_t l_86 = 254UL;
        4:  108:    uint32_t **l_97[5] = {&g_79, &g_79, &g_79, &g_79, &g_79};
        4:  109:    uint32_t ***l_96 = &l_97[1];
        -:  110:    uint8_t **l_109[5][1];
        4:  111:    int32_t l_110 = 0x48F550CBL;
        -:  112:    int i, j;
       24:  113:    for (i = 0; i < 5; i++) {
       40:  114:      for (j = 0; j < 1; j++)
       20:  115:        l_109[i][j] = &l_107;
        -:  116:    }
       4*:  117:    for (l_62 = 0; (l_62 == (-10)); l_62--) {
    #####:  118:      int32_t l_85 = 1L;
    #####:  119:      uint8_t *l_89[4][5][4] = {{{&l_86, (void *)0, &l_86, &l_86}, {&l_86, &l_86, &l_86, &l_86}, {&l_86, &l_86, (void *)0, &l_86}, {&l_86, &l_86, &l_86, &l_86}, {&l_86, &l_86, &l_86, &l_86}}, {{&l_86, &l_86, &l_86, (void *)0}, {&l_86, &l_86, &l_86, (void *)0}, {&l_86, &l_86, (void *)0, &l_86}, {&l_86, &l_86, &l_86, &l_86}, {&l_86, &l_86, &l_86, &l_86}}, {{&l_86, &l_86, (void *)0, &l_86}, {&l_86, &l_86, (void *)0, &l_86}, {&l_86, (void *)0, &l_86, &l_86}, {(void *)0, &l_86, &l_86, &l_86}, {&l_86, &l_86, &l_86, &l_86}}, {{&l_86, &l_86, &l_86, &l_86}, {(void *)0, &l_86, &l_86, &l_86}, {&l_86, &l_86, (void *)0, (void *)0}, {&l_86, &l_86, (void *)0, &l_86}, {&l_86, &l_86, &l_86, &l_86}}};
        -:  120:      int i, j, k;
    #####:  121:      for (l_25 = 0; (l_25 > 23); l_25++) {
        -:  122:        int32_t *l_84[2][1];
        -:  123:        int i, j;
    #####:  124:        for (i = 0; i < 2; i++) {
    #####:  125:          for (j = 0; j < 1; j++)
    #####:  126:            l_84[i][j] = &l_63[0];
        -:  127:        }
    #####:  128:        l_63[1] |= (*p_9);
    #####:  129:        l_86++;
        -:  130:      }
    #####:  131:      (*g_93) = (0xD2L == (++g_90));
        -:  132:    }
        4:  133:    (*g_111) = ((&g_49[3][0][3] == (void *)0) && (safe_sub_func_int64_t_s_s(((((((*l_96) = (void *)0) != l_98[0]) || (safe_rshift_func_uint8_t_u_u((safe_div_func_uint64_t_u_u((((-6L) != ((g_3[0] != ((safe_mod_func_uint32_t_u_u(((((*l_28) < (l_110 = (safe_add_func_uint8_t_u_u(((l_107 = l_107) != (void *)0), 0x84L)))) ^ (*l_28)) <= (*l_28)), (*l_28))), 1UL)) & l_86)) || (*l_28)), l_86)), g_2))), g_90) || (*l_28)), l_86)));
        -:  134:  }
        4:  135:  if ((safe_add_func_uint64_t_u_u(((*p_9) != ((0x7FBBL & (safe_sub_func_uint32_t_u_u((p_9 == (((*g_79)--), p_9)), (safe_div_func_uint64_t_u_u((!255UL), l_25))))) != l_63[2])), (0x2479L <= ((((*l_107) ^= (((((safe_rshift_func_int8_t_s_s((((l_123 = l_62) | 7UL) ^ (*p_9)), 6)), l_62) >= (-1L)), l_63[2]) >= 0x22BAL)) > g_50) < 0xB00EL))))) {
        4:  136:    uint16_t l_124 = 65532UL;
        4:  137:    int32_t *l_125 = &l_63[2];
        4:  138:    (*l_125) ^= (l_124 | (-1L));
        -:  139:  } else {
    #####:  140:    uint32_t l_126 = 0x9D66935DL;
    #####:  141:    for (g_50 = 0; (g_50 <= 1); g_50 += 1) {
    #####:  142:      return l_126;
        -:  143:    }
        -:  144:  }
        4:  145:  return l_25;
        -:  146:}
        -:  147:
        1:  148:int main(int argc, char *argv[]) {
        -:  149:  int i, j, k;
        1:  150:  int print_hash_value = 0;
       1*:  151:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  152:    print_hash_value = 1;
        1:  153:  platform_main_begin();
        1:  154:  crc32_gentab();
        1:  155:  func_1();
        1:  156:  transparent_crc(g_2, "g_2", print_hash_value);
        2:  157:  for (i = 0; i < 1; i++) {
        1:  158:    transparent_crc(g_3[i], "g_3[i]", print_hash_value);
        1:  159:    if (print_hash_value)
    #####:  160:      printf("index = [%d]\n", i);
        -:  161:  }
        1:  162:  transparent_crc(g_7, "g_7", print_hash_value);
        1:  163:  transparent_crc(g_39, "g_39", print_hash_value);
        1:  164:  transparent_crc(g_50, "g_50", print_hash_value);
        1:  165:  transparent_crc(g_90, "g_90", print_hash_value);
        1:  166:  transparent_crc(g_108, "g_108", print_hash_value);
        1:  167:  transparent_crc(g_139, "g_139", print_hash_value);
        1:  168:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  169:  return 0;
        -:  170:}

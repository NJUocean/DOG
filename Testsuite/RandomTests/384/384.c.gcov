        -:    0:Source:384.c
        -:    0:Graph:384.gcno
        -:    0:Data:384.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int8_t g_15 = (-8L);
        -:    7:static uint8_t g_19 = 0xE1L;
        -:    8:static uint32_t g_27 = 4294967295UL;
        -:    9:static uint16_t g_29 = 1UL;
        -:   10:static uint32_t g_32 = 0xC0105807L;
        -:   11:static uint64_t g_52 = 0xBAB2BD68E480B0DELL;
        -:   12:static int32_t g_54 = 0x5A4792D8L;
        -:   13:static uint16_t g_77 = 1UL;
        -:   14:static uint64_t g_82 = 0x0F8796DE133A9B92LL;
        -:   15:static const int32_t g_89 = 0x9415F902L;
        -:   16:static int32_t *const volatile g_123 = (void *)0;
        -:   17:static int32_t *volatile g_124[5] = {&g_54, &g_54, &g_54, &g_54, &g_54};
        -:   18:static int32_t *const volatile g_125 = &g_54;
        -:   19:static int64_t g_131 = (-4L);
        -:   20:static int32_t g_139 = 0x5EB36728L;
        -:   21:static int8_t g_152 = 0L;
        -:   22:static volatile int16_t g_154[1][3] = {{4L, 4L, 4L}};
        -:   23:static volatile uint64_t g_160 = 8UL;
        -:   24:static volatile uint64_t *g_159 = &g_160;
        -:   25:static volatile uint64_t **g_158[4] = {(void *)0, (void *)0, (void *)0, (void *)0};
        -:   26:static int32_t *g_190 = &g_54;
        -:   27:static int32_t **g_189 = &g_190;
        -:   28:static volatile int64_t *volatile *g_202 = (void *)0;
        -:   29:static const int32_t g_240[5] = {0x3D353F1DL, 0x3D353F1DL, 0x3D353F1DL, 0x3D353F1DL, 0x3D353F1DL};
        -:   30:static const int32_t *g_239[4] = {&g_240[2], &g_240[2], &g_240[2], &g_240[2]};
        -:   31:static int8_t g_284 = 0L;
        -:   32:static uint64_t g_301 = 18446744073709551615UL;
        -:   33:static uint8_t g_302 = 0UL;
        -:   34:
        -:   35:static uint64_t func_1(void);
        -:   36:static int64_t func_7(uint8_t p_8, int8_t p_9);
        -:   37:
        1:   38:static uint64_t func_1(void) {
        1:   39:  uint32_t l_12[4][1] = {{0UL}, {0xDEDB5CABL}, {0UL}, {0xDEDB5CABL}};
        1:   40:  uint8_t *l_18 = &g_19;
        1:   41:  uint32_t *l_26 = &g_27;
        -:   42:  uint16_t *l_28[2];
        1:   43:  uint64_t l_30 = 0x0B63E91CB64B6930LL;
        1:   44:  int64_t *l_31 = (void *)0;
        1:   45:  uint32_t l_33 = 0UL;
        1:   46:  int32_t l_34 = 0L;
        1:   47:  int8_t *l_35 = &g_15;
        1:   48:  int16_t l_88 = (-1L);
        1:   49:  uint64_t *l_104 = &l_30;
        1:   50:  const uint32_t l_134 = 1UL;
        1:   51:  int32_t l_141 = 0L;
        1:   52:  int32_t **l_191 = &g_190;
        1:   53:  uint16_t l_197 = 0xFCFDL;
        1:   54:  uint64_t l_227 = 0x0AEBB82BABF4834DLL;
        -:   55:  const int32_t **l_238[1];
        1:   56:  uint16_t l_241 = 0xC0A8L;
        1:   57:  uint8_t l_242 = 0x79L;
        1:   58:  uint16_t l_245[5][1][3] = {{{0x777EL, 1UL, 0x03D3L}}, {{1UL, 0x777EL, 0x777EL}}, {{0x03D3L, 0x777EL, 65535UL}}, {{65527UL, 1UL, 4UL}}, {{0x03D3L, 0x03D3L, 4UL}}};
        1:   59:  int16_t l_246 = 0L;
        1:   60:  int16_t *l_247 = &l_88;
        1:   61:  uint16_t *l_253 = &l_245[2][0][0];
        1:   62:  int32_t l_274 = 0x911E64B5L;
        1:   63:  int32_t l_282 = 0x1A28751EL;
        -:   64:  int64_t l_285[1];
        -:   65:  int i, j, k;
        3:   66:  for (i = 0; i < 2; i++)
        2:   67:    l_28[i] = &g_29;
        2:   68:  for (i = 0; i < 1; i++)
        1:   69:    l_238[i] = (void *)0;
        2:   70:  for (i = 0; i < 1; i++)
        1:   71:    l_285[i] = 5L;
        1:   72:  return (**l_191);
        -:   73:}
        -:   74:
    #####:   75:static int64_t func_7(uint8_t p_8, int8_t p_9) {
    #####:   76:  uint16_t l_50 = 0xD1F7L;
    #####:   77:  uint64_t *l_51 = &g_52;
    #####:   78:  int32_t *l_53[4][4] = {{&g_54, &g_54, &g_54, &g_54}, {&g_54, &g_54, &g_54, &g_54}, {&g_54, &g_54, &g_54, &g_54}, {&g_54, &g_54, &g_54, &g_54}};
        -:   79:  int i, j;
    #####:   80:lbl_83:
    #####:   81:  g_54 ^= ((((safe_rshift_func_uint32_t_u_s((safe_rshift_func_int16_t_s_u(g_27, p_8)), 5)) ^ (safe_rshift_func_int64_t_s_s(5L, 30))) || (safe_mod_func_int8_t_s_s(g_19, (((safe_rshift_func_uint8_t_u_s((safe_lshift_func_int32_t_s_u((safe_sub_func_uint16_t_u_u(l_50, 6L)), 27)), 0)) != g_19) | ((0x8A24E228C51F7EE0LL > ((*l_51) &= l_50)) < l_50))))) == l_50);
    #####:   82:  for (p_9 = 0; (p_9 <= 3); p_9 += 1) {
    #####:   83:    uint64_t l_59 = 18446744073709551611UL;
    #####:   84:    uint64_t *l_80[4][4][5] = {{{&g_52, &l_59, &l_59, &g_52, &g_52}, {&g_52, &l_59, &g_52, &g_52, &l_59}, {&g_52, (void *)0, &l_59, &l_59, &g_52}, {(void *)0, &g_52, &l_59, &g_52, &l_59}}, {{&l_59, &g_52, &g_52, &g_52, &l_59}, {&l_59, &g_52, &g_52, &l_59, &g_52}, {&g_52, &g_52, &l_59, &l_59, &l_59}, {&g_52, (void *)0, &l_59, &g_52, &g_52}}, {{&l_59, &l_59, &l_59, &l_59, &l_59}, {&g_52, &l_59, &l_59, &g_52, &l_59}, {(void *)0, &g_52, &l_59, &g_52, &g_52}, {&l_59, &g_52, &l_59, &l_59, &l_59}}, {{(void *)0, &l_59, &g_52, &l_59, &g_52}, {&g_52, &g_52, &g_52, &l_59, (void *)0}, {&l_59, (void *)0, &l_59, &l_59, &g_52}, {&g_52, &l_59, &l_59, &g_52, &l_59}}};
    #####:   85:    uint16_t *l_81 = &l_50;
    #####:   86:    int32_t l_87 = 1L;
        -:   87:    int i, j, k;
    #####:   88:    g_82 &= (safe_rshift_func_uint32_t_u_s((((safe_div_func_int64_t_s_s(l_59, (safe_lshift_func_uint64_t_u_s((~(safe_rshift_func_int8_t_s_u(0x98L, 2))), 50)))) ^ (safe_mod_func_uint32_t_u_u(((safe_add_func_int64_t_s_s((safe_mul_func_uint16_t_u_u(p_9, ((((safe_div_func_int64_t_s_s(((((((safe_add_func_int8_t_s_s((((safe_sub_func_uint16_t_u_u((p_8 >= (((g_77 = g_29) >= ((*l_81) ^= (p_8 > ((safe_rshift_func_int16_t_s_s(((((((l_80[0][3][3] = &l_59) != (p_9, l_51)) < g_52), p_9), p_9) < p_8), 1)) && 0x9E5145DBL)))) || l_59)), g_19)), g_52) & l_59), g_54)), 0x8488L) ^ p_8) && l_59) > p_9) ^ p_8), p_8)), g_29) > 0x88L) > g_32))), p_8)) & 0x30C13F5ED5A8D4E4LL), p_8))) && l_59), 19));
    #####:   89:    for (g_29 = 0; (g_29 <= 3); g_29 += 1) {
    #####:   90:      int16_t l_86 = 0L;
    #####:   91:      if (g_82)
    #####:   92:        goto lbl_83;
    #####:   93:      g_54 = ((safe_lshift_func_uint32_t_u_s((g_54, l_86), 0)) <= (l_87 ^ g_27));
        -:   94:    }
        -:   95:  }
    #####:   96:  return g_27;
        -:   97:}
        -:   98:
        1:   99:int main(int argc, char *argv[]) {
        -:  100:  int i, j;
        1:  101:  int print_hash_value = 0;
       1*:  102:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  103:    print_hash_value = 1;
        1:  104:  platform_main_begin();
        1:  105:  crc32_gentab();
        1:  106:  func_1();
        1:  107:  transparent_crc(g_15, "g_15", print_hash_value);
        1:  108:  transparent_crc(g_19, "g_19", print_hash_value);
        1:  109:  transparent_crc(g_27, "g_27", print_hash_value);
        1:  110:  transparent_crc(g_29, "g_29", print_hash_value);
        1:  111:  transparent_crc(g_32, "g_32", print_hash_value);
        1:  112:  transparent_crc(g_52, "g_52", print_hash_value);
        1:  113:  transparent_crc(g_54, "g_54", print_hash_value);
        1:  114:  transparent_crc(g_77, "g_77", print_hash_value);
        1:  115:  transparent_crc(g_82, "g_82", print_hash_value);
        1:  116:  transparent_crc(g_89, "g_89", print_hash_value);
        1:  117:  transparent_crc(g_131, "g_131", print_hash_value);
        1:  118:  transparent_crc(g_139, "g_139", print_hash_value);
        1:  119:  transparent_crc(g_152, "g_152", print_hash_value);
        2:  120:  for (i = 0; i < 1; i++) {
        4:  121:    for (j = 0; j < 3; j++) {
        3:  122:      transparent_crc(g_154[i][j], "g_154[i][j]", print_hash_value);
        3:  123:      if (print_hash_value)
    #####:  124:        printf("index = [%d][%d]\n", i, j);
        -:  125:    }
        -:  126:  }
        1:  127:  transparent_crc(g_160, "g_160", print_hash_value);
        6:  128:  for (i = 0; i < 5; i++) {
        5:  129:    transparent_crc(g_240[i], "g_240[i]", print_hash_value);
        5:  130:    if (print_hash_value)
    #####:  131:      printf("index = [%d]\n", i);
        -:  132:  }
        1:  133:  transparent_crc(g_284, "g_284", print_hash_value);
        1:  134:  transparent_crc(g_301, "g_301", print_hash_value);
        1:  135:  transparent_crc(g_302, "g_302", print_hash_value);
        1:  136:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  137:  return 0;
        -:  138:}

        -:    0:Source:964.c
        -:    0:Graph:964.gcno
        -:    0:Data:964.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  volatile signed f0 : 15;
        -:    8:};
        -:    9:
        -:   10:#pragma pack(push)
        -:   11:#pragma pack(1)
        -:   12:struct S1 {
        -:   13:  unsigned f0 : 16;
        -:   14:  volatile struct S0 f1;
        -:   15:};
        -:   16:#pragma pack(pop)
        -:   17:
        -:   18:union U2 {
        -:   19:  uint8_t f0;
        -:   20:  unsigned f1 : 9;
        -:   21:  volatile uint32_t f2;
        -:   22:  volatile int32_t f3;
        -:   23:  uint32_t f4;
        -:   24:};
        -:   25:
        -:   26:union U3 {
        -:   27:  volatile int64_t f0;
        -:   28:  const volatile int64_t f1;
        -:   29:  volatile uint32_t f2;
        -:   30:  int16_t f3;
        -:   31:  int8_t f4;
        -:   32:};
        -:   33:
        -:   34:static uint64_t g_5 = 0x9C9214A9BACDE9E8LL;
        -:   35:static volatile struct S1 g_7 = {152, {110}};
        -:   36:static int16_t g_17 = 0x3B15L;
        -:   37:static int8_t g_35 = 0xE6L;
        -:   38:static int32_t g_36 = 0xEF2B5D06L;
        -:   39:static volatile uint32_t g_37 = 1UL;
        -:   40:static int64_t g_41[1] = {0x0512ED4033E270BBLL};
        -:   41:static volatile uint8_t g_42 = 0xA7L;
        -:   42:static struct S1 g_69 = {2, {-84}};
        -:   43:static uint64_t g_70 = 0xEB03C758019D44E4LL;
        -:   44:static int64_t g_73 = 0x052C4540E5169387LL;
        -:   45:static uint8_t g_76 = 0UL;
        -:   46:static int32_t g_86 = 0xE6A276D0L;
        -:   47:static int32_t *g_85[4][2] = {{&g_86, &g_86}, {&g_86, &g_86}, {&g_86, &g_86}, {&g_86, &g_86}};
        -:   48:static int32_t **volatile g_84[5][1] = {{&g_85[0][0]}, {&g_85[0][0]}, {&g_85[0][0]}, {&g_85[0][0]}, {&g_85[0][0]}};
        -:   49:static int32_t **volatile g_87 = &g_85[1][0];
        -:   50:static uint16_t g_96 = 5UL;
        -:   51:static volatile struct S0 g_101 = {-163};
        -:   52:static uint64_t *g_103[1][4][1] = {{{(void *)0}, {&g_5}, {(void *)0}, {&g_5}}};
        -:   53:static union U3 g_124 = {-1L};
        -:   54:static volatile union U2 g_126 = {1UL};
        -:   55:static int32_t *volatile g_134 = (void *)0;
        -:   56:static int32_t *volatile g_135 = &g_86;
        -:   57:
        -:   58:static struct S0 func_1(void);
        -:   59:static int32_t func_2(const uint64_t p_3, int64_t p_4);
        -:   60:
        1:   61:static struct S0 func_1(void) {
        -:   62:  const int32_t l_6[4] = {(-1L), (-1L), (-1L), (-1L)};
        -:   63:  int32_t l_15[1];
        1:   64:  int32_t *l_77 = &l_15[0];
        -:   65:  uint64_t *l_102[4];
        1:   66:  int32_t l_123 = 0L;
        -:   67:  int32_t l_131[4];
        1:   68:  int8_t *l_132 = &g_124.f4;
        1:   69:  int32_t *l_133 = &l_123;
        -:   70:  int i;
        2:   71:  for (i = 0; i < 1; i++)
        1:   72:    l_15[i] = (-1L);
        5:   73:  for (i = 0; i < 4; i++)
        4:   74:    l_102[i] = &g_5;
        5:   75:  for (i = 0; i < 4; i++)
        4:   76:    l_131[i] = 0x7D68548FL;
        1:   77:  if (func_2((g_5, l_6[2]), l_6[1])) {
        1:   78:    uint8_t l_10 = 0x3AL;
        1:   79:    int16_t *l_16 = &g_17;
        1:   80:    int32_t l_28 = 0x50E8F7CFL;
        1:   81:    int32_t l_40 = 1L;
        1:   82:    int32_t *l_78 = (void *)0;
        1:   83:    int32_t *l_79 = &l_40;
        1:   84:    int32_t *l_80 = &l_15[0];
        -:   85:    uint16_t l_81[1][5];
        -:   86:    int i, j;
        2:   87:    for (i = 0; i < 1; i++) {
        6:   88:      for (j = 0; j < 5; j++)
        5:   89:        l_81[i][j] = 0x7E6FL;
        -:   90:    }
       1*:   91:    if (((l_10 || (safe_lshift_func_int32_t_s_u((safe_div_func_int16_t_s_s(l_6[2], ((*l_16) = (l_15[0] = 1L)))), (safe_rshift_func_uint32_t_u_u(((l_28 = (((safe_mod_func_uint32_t_u_u((g_7.f1.f0 > ((l_10, (safe_add_func_int32_t_s_s((l_6[2], (safe_rshift_func_uint32_t_u_s((l_10, l_6[2]), 17))), (safe_rshift_func_int16_t_s_s(l_10, 14))))) & 0x74L)), g_5)) && l_10) | g_5)) > g_5), g_5))))) || 0x0F1A0197CBB40284LL)) {
        1:   92:      uint32_t l_29 = 0UL;
        1:   93:      int32_t l_34 = 0x289ED5B6L;
        1:   94:      if (g_5) {
        1:   95:        l_29++;
        -:   96:      } else {
    #####:   97:        int32_t *l_32 = &l_15[0];
        -:   98:        int32_t *l_33[2];
        -:   99:        int i;
    #####:  100:        for (i = 0; i < 2; i++)
    #####:  101:          l_33[i] = &l_28;
    #####:  102:        g_37++;
    #####:  103:        g_42--;
        -:  104:      }
        -:  105:    } else {
        -:  106:      uint8_t l_49 = 255UL;
        -:  107:      for (l_10 = 16; (l_10 < 6); l_10 = safe_sub_func_uint64_t_u_u(l_10, 1)) {
        -:  108:        uint16_t *l_52 = (void *)0;
        -:  109:        uint64_t *l_71 = &g_70;
        -:  110:        int64_t *l_72 = &g_73;
        -:  111:        int32_t *l_74 = &l_15[0];
        -:  112:        int32_t *l_75[1][4] = {{&l_28, &l_28, &l_28, &l_28}};
        -:  113:        int i, j;
        -:  114:        g_76 &= (g_41[0] <= (safe_sub_func_uint16_t_u_u((l_40 = ((l_49++), 5UL)), (l_10 != ((*l_74) = (g_41[0] >= (safe_sub_func_uint16_t_u_u((((safe_mul_func_int64_t_s_s(((*l_72) ^= (safe_lshift_func_uint8_t_u_s((safe_sub_func_int32_t_s_s(((safe_add_func_int16_t_s_s(((((((0UL <= 7UL), (((*l_71) = (l_6[0] ^ (0x456A9E5FAF1BECDELL <= ((safe_div_func_int16_t_s_s((safe_div_func_uint64_t_u_u(((safe_add_func_int64_t_s_s((g_69, g_35), g_41[0])) | g_41[0]), g_35)), g_70)) ^ 0xCDCEL)))) ^ 0xC67586E024B17358LL)) > 0xD081FB7192EEDB0ELL) != g_35) && g_5), g_42), g_17)), 0x2D1E5678L), l_15[0])), 6))), 6UL)), 0x3B18L) >= l_15[0]), 0x2840L))))))));
        -:  115:        l_77 = l_75[0][2];
        -:  116:      }
        -:  117:    }
        1:  118:    l_81[0][4]++;
        -:  119:  } else {
    #####:  120:    uint16_t *l_95 = &g_96;
    #####:  121:    int32_t l_116[2][4] = {{(-5L), (-5L), (-5L), (-5L)}, {(-5L), (-5L), (-5L), (-5L)}};
    #####:  122:    const uint64_t l_119 = 18446744073709551615UL;
        -:  123:    int i, j;
    #####:  124:    for (g_73 = 0; (g_73 <= 0); g_73 += 1) {
        -:  125:      int i;
    #####:  126:      (*g_87) = &l_15[g_73];
    #####:  127:      for (g_86 = 0; (g_86 <= 0); g_86 += 1) {
    #####:  128:        int16_t *l_113 = &g_17;
    #####:  129:        int8_t *l_117 = (void *)0;
    #####:  130:        int8_t *l_118 = &g_35;
        -:  131:        int32_t **l_120[3];
        -:  132:        int i;
    #####:  133:        for (i = 0; i < 3; i++)
    #####:  134:          l_120[i] = &g_85[0][0];
    #####:  135:        l_15[g_73] = ((safe_rshift_func_uint8_t_u_s((safe_rshift_func_int8_t_s_u((safe_rshift_func_int64_t_s_u((safe_unary_minus_func_uint32_t_u(((void *)0 == l_95))), (safe_div_func_int64_t_s_s((safe_mul_func_uint64_t_u_u(((g_101, l_102[0]) == (g_103[0][2][0] = &g_70)), (g_41[g_73] = l_15[g_73]))), (((~((safe_mod_func_int8_t_s_s(((*l_118) = (((((safe_lshift_func_int16_t_s_u(((*l_113) &= (safe_mul_func_int64_t_s_s(g_5, g_96))), (safe_mul_func_uint64_t_u_u((1UL > g_70), g_35)))) || l_15[g_73]) | l_116[1][0]) && 0L) == g_86)), 0xCEL)), g_36)) != g_69.f0) && l_15[g_73]))))), 6)), l_119)), l_116[1][2]);
    #####:  136:        (*g_87) = (*g_87);
        -:  137:      }
        -:  138:    }
        -:  139:  }
        1:  140:  (*g_135) = (((*l_133) = (g_5 == (safe_sub_func_uint16_t_u_u(((((l_6[0] & (l_123 | g_42)), (((*l_132) = (g_124, ((~1UL) >= ((g_126, (safe_div_func_uint32_t_u_u((g_69, (safe_add_func_int32_t_s_s(l_131[3], 0x61C728F0L))), g_41[0]))), g_41[0])))) ^ g_70)) >= 0xFCL) & g_41[0]), g_96)))), l_6[2]);
        1:  141:  return g_101;
        -:  142:}
        -:  143:
        1:  144:static int32_t func_2(const uint64_t p_3, int64_t p_4) {
        1:  145:  volatile struct S1 *l_8 = &g_7;
        1:  146:  int32_t l_9 = 0xE40C18ABL;
        1:  147:  (*l_8) = g_7;
        1:  148:  return l_9;
        -:  149:}
        -:  150:
        1:  151:int main(int argc, char *argv[]) {
        -:  152:  int i, j, k;
        1:  153:  int print_hash_value = 0;
       1*:  154:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  155:    print_hash_value = 1;
        1:  156:  platform_main_begin();
        1:  157:  crc32_gentab();
        1:  158:  func_1();
        1:  159:  transparent_crc(g_5, "g_5", print_hash_value);
        1:  160:  transparent_crc(g_7.f0, "g_7.f0", print_hash_value);
        1:  161:  transparent_crc(g_7.f1.f0, "g_7.f1.f0", print_hash_value);
        1:  162:  transparent_crc(g_17, "g_17", print_hash_value);
        1:  163:  transparent_crc(g_35, "g_35", print_hash_value);
        1:  164:  transparent_crc(g_36, "g_36", print_hash_value);
        1:  165:  transparent_crc(g_37, "g_37", print_hash_value);
        2:  166:  for (i = 0; i < 1; i++) {
        1:  167:    transparent_crc(g_41[i], "g_41[i]", print_hash_value);
        1:  168:    if (print_hash_value)
    #####:  169:      printf("index = [%d]\n", i);
        -:  170:  }
        1:  171:  transparent_crc(g_42, "g_42", print_hash_value);
        1:  172:  transparent_crc(g_69.f0, "g_69.f0", print_hash_value);
        1:  173:  transparent_crc(g_69.f1.f0, "g_69.f1.f0", print_hash_value);
        1:  174:  transparent_crc(g_70, "g_70", print_hash_value);
        1:  175:  transparent_crc(g_73, "g_73", print_hash_value);
        1:  176:  transparent_crc(g_76, "g_76", print_hash_value);
        1:  177:  transparent_crc(g_86, "g_86", print_hash_value);
        1:  178:  transparent_crc(g_96, "g_96", print_hash_value);
        1:  179:  transparent_crc(g_101.f0, "g_101.f0", print_hash_value);
        1:  180:  transparent_crc(g_124.f4, "g_124.f4", print_hash_value);
        1:  181:  transparent_crc(g_126.f0, "g_126.f0", print_hash_value);
        1:  182:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  183:  return 0;
        -:  184:}

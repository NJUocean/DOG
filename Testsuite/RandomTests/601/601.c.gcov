        -:    0:Source:601.c
        -:    0:Graph:601.gcno
        -:    0:Data:601.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_2 = 6L;
        -:    7:static volatile int32_t g_3 = (-1L);
        -:    8:static int32_t g_4 = 0x256A9EF7L;
        -:    9:static int8_t g_46 = 2L;
        -:   10:static int8_t *g_49 = &g_46;
        -:   11:static int8_t *volatile *g_48[3] = {&g_49, &g_49, &g_49};
        -:   12:static int16_t g_52 = 0x863EL;
        -:   13:static uint32_t g_54 = 1UL;
        -:   14:static uint32_t *volatile g_53 = &g_54;
        -:   15:static int8_t g_69 = 0x98L;
        -:   16:static uint32_t *g_72 = &g_54;
        -:   17:static uint32_t g_84 = 18446744073709551610UL;
        -:   18:static int64_t g_85 = 0x3BA0E38899A8624ALL;
        -:   19:static volatile int64_t g_87 = 8L;
        -:   20:static uint32_t g_88 = 18446744073709551612UL;
        -:   21:static uint8_t g_95 = 253UL;
        -:   22:static volatile int32_t *g_101 = &g_3;
        -:   23:
        -:   24:static int16_t func_1(void);
        -:   25:static uint8_t func_24(uint8_t p_25, int16_t p_26, uint32_t p_27, int32_t p_28, const uint16_t p_29);
        -:   26:
        1:   27:static int16_t func_1(void) {
        1:   28:  int64_t l_32 = 1L;
        -:   29:  int32_t l_44[5];
        -:   30:  int8_t *l_76[4];
        1:   31:  int16_t *l_78 = &g_52;
        -:   32:  int i;
        6:   33:  for (i = 0; i < 5; i++)
        5:   34:    l_44[i] = 0L;
        5:   35:  for (i = 0; i < 4; i++)
        4:   36:    l_76[i] = &g_69;
       1*:   37:  for (g_4 = (-13); (g_4 < (-14)); g_4--) {
    #####:   38:    uint16_t l_31 = 2UL;
    #####:   39:    const int16_t l_41 = 1L;
    #####:   40:    uint32_t *l_42 = (void *)0;
        -:   41:    uint32_t *l_43[3];
    #####:   42:    int8_t *l_45 = &g_46;
    #####:   43:    int32_t l_47 = 1L;
    #####:   44:    int32_t *l_50 = &l_47;
        -:   45:    int32_t *l_51[2];
    #####:   46:    int8_t l_86 = 0x41L;
        -:   47:    int i;
    #####:   48:    for (i = 0; i < 3; i++)
    #####:   49:      l_43[i] = (void *)0;
    #####:   50:    for (i = 0; i < 2; i++)
    #####:   51:      l_51[i] = &l_44[3];
    #####:   52:    if ((g_52 = ((*l_50) = ((safe_mod_func_uint8_t_u_u((safe_lshift_func_int8_t_s_s((safe_mod_func_uint32_t_u_u((safe_sub_func_uint32_t_u_u(g_3, g_4)), (safe_add_func_uint32_t_u_u((safe_sub_func_uint64_t_u_u((safe_div_func_uint8_t_u_u((+(g_4 | (((((func_24(g_4, g_4, (l_47 = ((((((~((l_31, ((*l_45) |= (l_32, (safe_lshift_func_uint8_t_u_s((safe_div_func_int32_t_s_s(((l_44[1] ^= (((((safe_mod_func_uint16_t_u_u((safe_sub_func_int8_t_s_s(l_32, l_31)), g_4)), g_4) && l_32) && l_41) && 8L)), 0xA77D77FCL), l_41)), g_4))))) <= 0xD4L)), l_41), g_4) && g_46), g_4) == l_31)), g_4, l_31), 4294967295UL) & 0x3D8D5894L) ^ 255UL) != g_4) < 255UL))), 0x96L)), l_32)), 0L)))), 6)), l_32)) && l_47)))) {
    #####:   53:      uint8_t l_61 = 0x8EL;
    #####:   54:      int8_t *l_68 = &g_69;
    #####:   55:      int32_t l_70 = 0x53D1739CL;
    #####:   56:      int16_t *l_71 = &g_52;
    #####:   57:      int32_t l_73 = (-10L);
    #####:   58:      int8_t **l_77 = &g_49;
    #####:   59:      l_73 = ((g_53 != (g_72 = ((((*g_49) &= l_32) < ((safe_mod_func_int16_t_s_s((safe_add_func_uint32_t_u_u((safe_rshift_func_int16_t_s_u(((*l_71) = (0xC2L == (l_61 != ((g_4 >= (safe_div_func_uint32_t_u_u((safe_div_func_uint8_t_u_u((((((g_49 != ((safe_div_func_int32_t_s_s((((0x09L ^ (&g_4 != &l_44[1])) | g_4) == 1UL), (*l_50))), l_68)) > 0x4A6B1F15F1D345D1LL), g_4), l_70) > l_44[3]), l_32)), 1UL))) & g_54)))), 15)), 0x0AA07078L)), l_32)) && 0x559CL)), (void *)0))), g_46);
    #####:   60:      (*l_50) = (((((((safe_lshift_func_uint8_t_u_u((l_76[1] != ((*l_77) = &g_46)), 2)) != g_52) >= (*l_50)) || (&g_52 != l_78)) ^ ((+(l_44[1] >= (g_85 = (g_84 &= ((0xFE27L && (safe_rshift_func_int8_t_s_u((((*l_45) |= ((safe_mod_func_uint16_t_u_u(((-1L) != l_44[3]), 0x1534L)) ^ l_44[1])) != l_70), g_3))) || l_44[1]))))) | l_86)) < g_54) && 0x47412260L);
        -:   61:    } else {
    #####:   62:      uint32_t *l_94 = &g_54;
    #####:   63:      uint8_t l_98 = 0x22L;
    #####:   64:      ++g_88;
    #####:   65:      for (l_47 = (-27); (l_47 != 5); l_47 = safe_add_func_int32_t_s_s(l_47, 4)) {
    #####:   66:        uint64_t l_99 = 18446744073709551607UL;
    #####:   67:        int32_t **l_100[4] = {&l_50, &l_50, &l_50, &l_50};
        -:   68:        int i;
    #####:   69:        g_101 = ((!((7L > g_54) & (((l_94 == &g_54) != (g_95 = ((&l_86 == (void *)0) | ((*g_49) <= g_54)))) & (((!((((safe_unary_minus_func_uint8_t_u(((g_54 <= g_87) || l_98))), &g_54) != (void *)0) & l_99)) > 0x0CL) | l_98)))), (void *)0);
        -:   70:      }
        -:   71:    }
        -:   72:  }
        1:   73:  return g_69;
        -:   74:}
        -:   75:
    #####:   76:static uint8_t func_24(uint8_t p_25, int16_t p_26, uint32_t p_27, int32_t p_28, const uint16_t p_29) {
    #####:   77:  g_48[0] = (void *)0;
    #####:   78:  return p_29;
        -:   79:}
        -:   80:
        1:   81:int main(int argc, char *argv[]) {
        -:   82:  int i;
        1:   83:  int print_hash_value = 0;
       1*:   84:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   85:    print_hash_value = 1;
        1:   86:  platform_main_begin();
        1:   87:  crc32_gentab();
        1:   88:  func_1();
        1:   89:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   90:  transparent_crc(g_3, "g_3", print_hash_value);
        1:   91:  transparent_crc(g_4, "g_4", print_hash_value);
        1:   92:  transparent_crc(g_46, "g_46", print_hash_value);
        1:   93:  transparent_crc(g_52, "g_52", print_hash_value);
        1:   94:  transparent_crc(g_54, "g_54", print_hash_value);
        1:   95:  transparent_crc(g_69, "g_69", print_hash_value);
        1:   96:  transparent_crc(g_84, "g_84", print_hash_value);
        1:   97:  transparent_crc(g_85, "g_85", print_hash_value);
        1:   98:  transparent_crc(g_87, "g_87", print_hash_value);
        1:   99:  transparent_crc(g_88, "g_88", print_hash_value);
        1:  100:  transparent_crc(g_95, "g_95", print_hash_value);
        1:  101:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  102:  return 0;
        -:  103:}

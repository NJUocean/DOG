        -:    0:Source:156.c
        -:    0:Graph:156.gcno
        -:    0:Data:156.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U1 {
        -:    7:  int16_t f0;
        -:    8:  const int16_t f1;
        -:    9:  signed f2 : 5;
        -:   10:  const int16_t f3;
        -:   11:};
        -:   12:
        -:   13:static volatile int32_t g_2 = 0xB9DA4D07L;
        -:   14:static int32_t g_3 = 0L;
        -:   15:static volatile union U1 g_19 = {0x992FL};
        -:   16:static volatile int16_t g_40 = 0L;
        -:   17:static volatile int8_t g_42 = 2L;
        -:   18:static volatile int32_t g_43[1][5][3] = {{{0x364560F9L, (-1L), 0x364560F9L}, {0x364560F9L, (-1L), 0x364560F9L}, {0x364560F9L, (-1L), 0x364560F9L}, {0x364560F9L, (-1L), 0x364560F9L}, {0x364560F9L, (-1L), 0x364560F9L}}};
        -:   19:static int32_t *g_53 = &g_3;
        -:   20:static int32_t **volatile g_52 = &g_53;
        -:   21:static int32_t *volatile *g_67 = (void *)0;
        -:   22:static int32_t g_70 = 1L;
        -:   23:static int32_t *g_69 = &g_70;
        -:   24:static int8_t g_73[3] = {(-1L), (-1L), (-1L)};
        -:   25:
        -:   26:static int32_t func_1(void);
        -:   27:static int64_t func_10(int32_t *p_11);
        -:   28:
        1:   29:static int32_t func_1(void) {
        1:   30:  int32_t l_9 = 0x35E1F6F0L;
        1:   31:  int8_t l_68 = 3L;
        1:   32:  int32_t **l_71[5] = {&g_69, &g_69, &g_69, &g_69, &g_69};
        1:   33:  uint32_t l_72 = 8UL;
        -:   34:  int i;
       1*:   35:  for (g_3 = 0; (g_3 < (-15)); g_3 = safe_sub_func_uint64_t_u_u(g_3, 3)) {
    #####:   36:    volatile int32_t *l_6 = &g_2;
    #####:   37:    (*l_6) = g_2;
        -:   38:  }
        1:   39:  g_73[2] ^= ((safe_mod_func_int64_t_s_s(l_9, func_10(&l_9))) ^ (((g_67 == (void *)0) ^ ((((l_68 != (&l_9 != (g_69 = g_69))) > (0x1CC17125C8CE6C94LL <= l_72)), 0x75L) >= g_70)) ^ g_70));
        1:   40:  return g_3;
        -:   41:}
        -:   42:
        1:   43:static int64_t func_10(int32_t *p_11) {
        1:   44:  int32_t l_18 = 9L;
        1:   45:  int32_t *l_25 = &l_18;
        1:   46:  int32_t l_60 = 0L;
        1:   47:  int16_t l_61 = 0xAC29L;
        1:   48:  int32_t l_62 = 1L;
        1:   49:  int32_t l_63 = (-8L);
        2:   50:  for (g_3 = 0; (g_3 <= 0); ++g_3) {
        -:   51:    int8_t l_24[1][2];
        1:   52:    int32_t l_35 = 0xC8BB6AF8L;
        1:   53:    int32_t l_36 = 0xDC46221EL;
        1:   54:    int64_t l_38 = (-6L);
        1:   55:    int32_t l_41 = 0xAD251A65L;
        1:   56:    int32_t l_44 = 0xEBFDCAE3L;
        1:   57:    int32_t *l_54 = &l_41;
        1:   58:    int32_t *l_55 = &l_18;
        1:   59:    int32_t *l_56 = &l_18;
        1:   60:    int32_t *l_57 = &l_35;
        1:   61:    int32_t *l_58 = &l_35;
        -:   62:    int32_t *l_59[5];
        1:   63:    uint32_t l_64 = 0x265E0958L;
        -:   64:    int i, j;
        2:   65:    for (i = 0; i < 1; i++) {
        3:   66:      for (j = 0; j < 2; j++)
        2:   67:        l_24[i][j] = 0xF5L;
        -:   68:    }
        6:   69:    for (i = 0; i < 5; i++)
        5:   70:      l_59[i] = &l_44;
       1*:   71:    if (((l_25 = ((((safe_div_func_uint8_t_u_u(((void *)0 == p_11), 0x1EL)) && ((((safe_rshift_func_uint16_t_u_u(((l_18 && (g_19, (safe_rshift_func_int16_t_s_s(((((safe_sub_func_int16_t_s_s((((((*p_11) > ((1L || 0x5FCBL) >= 2L)), &l_18) != &l_18) > l_24[0][0]), l_18)) & 18446744073709551615UL) & 0x36572186L) | l_18), 8)))) == 0x07L), g_3)) || l_24[0][0]), (void *)0) != &g_3)) != 0x9020L), (void *)0)) == &g_3)) {
        -:   72:      const int8_t l_26[1][5][5] = {{{1L, 0x37L, 0x8EL, 0x8EL, 0x37L}, {(-6L), 1L, 0x76L, 0x37L, 0x9AL}, {1L, 0x8EL, 0x76L, 0xC8L, 0x76L}, {0x9AL, 0x9AL, 0x8EL, (-6L), 8L}, {1L, 8L, 1L, 0x37L, 0x37L}}};
    #####:   73:      int32_t *l_30 = &l_18;
    #####:   74:      int32_t l_37 = 0x9061E942L;
    #####:   75:      int32_t l_39[3][2] = {{8L, 8L}, {8L, 8L}, {8L, 8L}};
        -:   76:      int i, j, k;
    #####:   77:      if (l_26[0][2][2])
    #####:   78:        break;
    #####:   79:      if (((safe_mul_func_uint32_t_u_u(4294967290UL, (l_24[0][1] || (~g_3)))), ((*l_30) = ((void *)0 != &g_2)))) {
    #####:   80:        int32_t *l_31 = (void *)0;
    #####:   81:        int32_t *l_32 = &l_18;
    #####:   82:        int32_t *l_33 = (void *)0;
        -:   83:        int32_t *l_34[1][5];
    #####:   84:        uint8_t l_45 = 0x58L;
        -:   85:        int i, j;
    #####:   86:        for (i = 0; i < 1; i++) {
    #####:   87:          for (j = 0; j < 5; j++)
    #####:   88:            l_34[i][j] = &l_18;
        -:   89:        }
    #####:   90:        l_45++;
        -:   91:      } else {
        -:   92:        int32_t l_49 = 0L;
        -:   93:        (*l_30) ^= (l_44 || (+l_49));
        -:   94:        if (g_3)
        -:   95:          continue;
        -:   96:      }
        -:   97:    } else {
        8:   98:      for (l_18 = 0; (l_18 != 14); l_18 = safe_add_func_int16_t_s_s(l_18, 2)) {
        7:   99:        (*g_52) = p_11;
        -:  100:      }
        -:  101:    }
        1:  102:    l_64--;
        -:  103:  }
        2:  104:  for (l_61 = 0; l_61 < 1; l_61 += 1) {
        6:  105:    for (g_3 = 0; g_3 < 5; g_3 += 1) {
       20:  106:      for (g_19.f0 = 0; g_19.f0 < 3; g_19.f0 += 1) {
       15:  107:        g_43[l_61][g_3][g_19.f0] = 0x094F54FDL;
        -:  108:      }
        -:  109:    }
        -:  110:  }
        1:  111:  return g_42;
        -:  112:}
        -:  113:
        1:  114:int main(int argc, char *argv[]) {
        -:  115:  int i, j, k;
        1:  116:  int print_hash_value = 0;
       1*:  117:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  118:    print_hash_value = 1;
        1:  119:  platform_main_begin();
        1:  120:  crc32_gentab();
        1:  121:  func_1();
        1:  122:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  123:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  124:  transparent_crc(g_19.f0, "g_19.f0", print_hash_value);
        1:  125:  transparent_crc(g_40, "g_40", print_hash_value);
        1:  126:  transparent_crc(g_42, "g_42", print_hash_value);
        2:  127:  for (i = 0; i < 1; i++) {
        6:  128:    for (j = 0; j < 5; j++) {
       20:  129:      for (k = 0; k < 3; k++) {
       15:  130:        transparent_crc(g_43[i][j][k], "g_43[i][j][k]", print_hash_value);
       15:  131:        if (print_hash_value)
    #####:  132:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  133:      }
        -:  134:    }
        -:  135:  }
        1:  136:  transparent_crc(g_70, "g_70", print_hash_value);
        4:  137:  for (i = 0; i < 3; i++) {
        3:  138:    transparent_crc(g_73[i], "g_73[i]", print_hash_value);
        3:  139:    if (print_hash_value)
    #####:  140:      printf("index = [%d]\n", i);
        -:  141:  }
        1:  142:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  143:  return 0;
        -:  144:}

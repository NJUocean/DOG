        -:    0:Source:701.c
        -:    0:Graph:701.gcno
        -:    0:Data:701.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_2 = 0x394643CDL;
        -:    7:static uint8_t g_9 = 0x2CL;
        -:    8:static int32_t g_11 = (-7L);
        -:    9:static int16_t g_13 = 0xE012L;
        -:   10:static int32_t g_16 = 0x9CF13E13L;
        -:   11:static int32_t g_17[2][4][1] = {{{0L}, {0L}, {0L}, {0L}}, {{0L}, {0L}, {0L}, {0L}}};
        -:   12:
        -:   13:static int32_t func_1(void);
        -:   14:
        1:   15:static int32_t func_1(void) {
        1:   16:  int8_t l_14 = 7L;
       1*:   17:  for (g_2 = 0; (g_2 == 19); g_2++) {
    #####:   18:    uint64_t l_7 = 0x1551DA622A149CECLL;
    #####:   19:    uint8_t *l_8 = &g_9;
    #####:   20:    int32_t *l_10 = &g_11;
    #####:   21:    int16_t *l_12 = &g_13;
    #####:   22:    int32_t *l_15[5][2][3] = {{{&g_16, &g_16, &g_16}, {&g_16, &g_2, &g_16}}, {{&g_2, &g_16, &g_16}, {&g_16, &g_16, (void *)0}}, {{&g_2, &g_2, &g_2}, {&g_16, &g_16, &g_2}}, {{&g_2, &g_2, (void *)0}, {&g_16, &g_16, &g_16}}, {{&g_16, &g_2, &g_16}, {&g_2, &g_16, &g_16}}};
        -:   23:    int i, j, k;
    #####:   24:    g_17[0][2][0] = (g_16 = ((safe_rshift_func_uint8_t_u_s(((*l_8) |= l_7), (l_7 > ((*l_10) |= l_7)))) & (((*l_12) = g_2) > l_14)));
        -:   25:  }
        1:   26:  return g_16;
        -:   27:}
        -:   28:
        1:   29:int main(int argc, char *argv[]) {
        -:   30:  int i, j, k;
        1:   31:  int print_hash_value = 0;
       1*:   32:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   33:    print_hash_value = 1;
        1:   34:  platform_main_begin();
        1:   35:  crc32_gentab();
        1:   36:  func_1();
        1:   37:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   38:  transparent_crc(g_9, "g_9", print_hash_value);
        1:   39:  transparent_crc(g_11, "g_11", print_hash_value);
        1:   40:  transparent_crc(g_13, "g_13", print_hash_value);
        1:   41:  transparent_crc(g_16, "g_16", print_hash_value);
        3:   42:  for (i = 0; i < 2; i++) {
       10:   43:    for (j = 0; j < 4; j++) {
       16:   44:      for (k = 0; k < 1; k++) {
        8:   45:        transparent_crc(g_17[i][j][k], "g_17[i][j][k]", print_hash_value);
        8:   46:        if (print_hash_value)
    #####:   47:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   48:      }
        -:   49:    }
        -:   50:  }
        1:   51:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   52:  return 0;
        -:   53:}

        -:    0:Source:692.c
        -:    0:Graph:692.gcno
        -:    0:Data:692.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U0 {
        -:    7:  int32_t f0;
        -:    8:  const uint32_t f1;
        -:    9:  const uint32_t f2;
        -:   10:  volatile int32_t f3;
        -:   11:  volatile int32_t f4;
        -:   12:};
        -:   13:
        -:   14:static int32_t g_2 = 0x4914D2EDL;
        -:   15:static int32_t g_6 = 0x9CC14173L;
        -:   16:static volatile uint32_t g_14[2] = {0xAA53F0D3L, 0xAA53F0D3L};
        -:   17:static int32_t g_19 = 0L;
        -:   18:static volatile int32_t g_24 = 1L;
        -:   19:static int32_t g_25 = 1L;
        -:   20:static int32_t g_47 = (-1L);
        -:   21:static volatile int64_t g_67 = 6L;
        -:   22:static volatile uint32_t g_68 = 0x9AD35785L;
        -:   23:static union U0 g_71 = {0x08938C4EL};
        -:   24:
        -:   25:static union U0 func_1(void);
        -:   26:static int32_t *func_20(int32_t *p_21);
        -:   27:
        1:   28:static union U0 func_1(void) {
        1:   29:  int32_t *l_65 = &g_47;
        1:   30:  int32_t *l_66[4] = {&g_6, &g_6, &g_6, &g_6};
        -:   31:  int i;
        7:   32:  for (g_2 = (-23); (g_2 <= 27); g_2 = safe_add_func_int16_t_s_s(g_2, 9)) {
        6:   33:    int32_t *l_5 = &g_6;
        6:   34:    int32_t *l_7 = &g_6;
        6:   35:    int32_t *l_8 = &g_6;
        6:   36:    int32_t *l_9 = &g_6;
        6:   37:    int32_t *l_10 = &g_6;
        6:   38:    int32_t *l_11 = (void *)0;
        6:   39:    int32_t *l_12 = &g_6;
        -:   40:    int32_t *l_13[4];
        -:   41:    int i;
       30:   42:    for (i = 0; i < 4; i++)
       24:   43:      l_13[i] = &g_6;
        6:   44:    ++g_14[0];
       6*:   45:    for (g_6 = 18; (g_6 == 9); --g_6) {
    #####:   46:      for (g_19 = 0; (g_19 <= 1); g_19 += 1) {
    #####:   47:        int32_t *l_22 = &g_6;
    #####:   48:        int32_t **l_23 = &l_11;
    #####:   49:        (*l_23) = func_20(((*l_23) = l_22));
        -:   50:      }
        -:   51:    }
        -:   52:  }
        1:   53:  g_68--;
        1:   54:  return g_71;
        -:   55:}
        -:   56:
    #####:   57:static int32_t *func_20(int32_t *p_21) {
    #####:   58:  uint32_t l_36 = 0xAE50714BL;
    #####:   59:  int32_t l_53[5][3][3] = {{{5L, 1L, 1L}, {0xE7F6F8F6L, 0xD45EB447L, 0xA44BF8E1L}, {0xD714E288L, 1L, 1L}}, {{0xA44BF8E1L, 0x299B5F27L, (-7L)}, {0xD714E288L, 1L, 0xD714E288L}, {0xE7F6F8F6L, 1L, (-7L)}}, {{5L, 5L, 1L}, {0x961DFA23L, 1L, 0xA44BF8E1L}, {1L, 1L, 1L}}, {{0x961DFA23L, 0x299B5F27L, 0x961DFA23L}, {5L, 1L, 1L}, {0xE7F6F8F6L, 0xD45EB447L, 0xA44BF8E1L}}, {{0xD714E288L, 1L, 1L}, {0xA44BF8E1L, 0xD45EB447L, (-1L)}, {1L, 5L, 1L}}};
        -:   60:  int i, j, k;
    #####:   61:  for (g_25 = 0; (g_25 != 12); g_25++) {
    #####:   62:    uint16_t l_28 = 0xE0CDL;
    #####:   63:    int32_t l_52 = 0x607DBC15L;
    #####:   64:    int32_t l_54 = 0xD8E7029BL;
    #####:   65:    int32_t l_55 = (-6L);
    #####:   66:    l_28 ^= (g_6, g_14[0]);
    #####:   67:    if (((safe_rshift_func_uint64_t_u_s(((*p_21) >= ((safe_mul_func_uint32_t_u_u(((safe_mod_func_int8_t_s_s((((safe_unary_minus_func_uint16_t_u(l_36)) < ((safe_sub_func_uint8_t_u_u((safe_unary_minus_func_int32_t_s(l_36)), l_36)) || ((safe_lshift_func_uint8_t_u_s(((0x4262L > 65532UL) < ((&g_19 != &g_24) < (safe_lshift_func_int8_t_s_s(0xE5L, 1)))), l_36)) == 0UL))) ^ l_36), l_28)) == l_28), l_36)), g_6)), 53)), l_36)) {
    #####:   68:      uint32_t l_56 = 1UL;
    #####:   69:      for (l_36 = (-18); (l_36 == 30); ++l_36) {
    #####:   70:        int32_t *l_46 = &g_47;
    #####:   71:        int32_t *l_48 = &g_47;
    #####:   72:        int32_t *l_49 = &g_47;
    #####:   73:        int32_t *l_50 = &g_47;
    #####:   74:        int32_t *l_51[5][5][1] = {{{&g_25}, {&g_25}, {&g_47}, {&g_47}, {&g_6}}, {{&g_47}, {&g_47}, {&g_25}, {&g_25}, {&g_47}}, {{&g_47}, {&g_6}, {&g_47}, {&g_47}, {&g_25}}, {{&g_25}, {&g_47}, {&g_47}, {&g_6}, {&g_47}}, {{&g_47}, {&g_25}, {&g_25}, {&g_47}, {&g_47}}};
        -:   75:        int i, j, k;
    #####:   76:        ++l_56;
        -:   77:      }
        -:   78:    } else {
    #####:   79:      uint8_t l_59 = 252UL;
    #####:   80:      int32_t *l_64 = &l_53[2][2][2];
    #####:   81:      (*l_64) &= (l_59, ((((l_55 > ((-2L) > (0xD26F361030FACFA7LL != g_14[0]))) & (*p_21)) <= (0x0C5DC747L >= (safe_mod_func_uint32_t_u_u(g_2, (safe_mul_func_int8_t_s_s(g_25, l_54)))))), 0L));
        -:   82:    }
        -:   83:  }
    #####:   84:  return &g_6;
        -:   85:}
        -:   86:
        1:   87:int main(int argc, char *argv[]) {
        -:   88:  int i;
        1:   89:  int print_hash_value = 0;
       1*:   90:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   91:    print_hash_value = 1;
        1:   92:  platform_main_begin();
        1:   93:  crc32_gentab();
        1:   94:  func_1();
        1:   95:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   96:  transparent_crc(g_6, "g_6", print_hash_value);
        3:   97:  for (i = 0; i < 2; i++) {
        2:   98:    transparent_crc(g_14[i], "g_14[i]", print_hash_value);
        2:   99:    if (print_hash_value)
    #####:  100:      printf("index = [%d]\n", i);
        -:  101:  }
        1:  102:  transparent_crc(g_19, "g_19", print_hash_value);
        1:  103:  transparent_crc(g_24, "g_24", print_hash_value);
        1:  104:  transparent_crc(g_25, "g_25", print_hash_value);
        1:  105:  transparent_crc(g_47, "g_47", print_hash_value);
        1:  106:  transparent_crc(g_67, "g_67", print_hash_value);
        1:  107:  transparent_crc(g_68, "g_68", print_hash_value);
        1:  108:  transparent_crc(g_71.f0, "g_71.f0", print_hash_value);
        1:  109:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  110:  return 0;
        -:  111:}

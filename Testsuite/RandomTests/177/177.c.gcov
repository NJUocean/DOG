        -:    0:Source:177.c
        -:    0:Graph:177.gcno
        -:    0:Data:177.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U6 {
        -:    7:  int8_t f0;
        -:    8:  uint64_t f1;
        -:    9:};
        -:   10:
        -:   11:static volatile int8_t g_5[3] = {0x29L, 0x29L, 0x29L};
        -:   12:static union U6 g_13 = {2L};
        -:   13:static int32_t g_22[4] = {0x0C9BA5B0L, 0x0C9BA5B0L, 0x0C9BA5B0L, 0x0C9BA5B0L};
        -:   14:static int32_t g_24 = 0x687FD074L;
        -:   15:static int32_t *volatile g_23 = &g_24;
        -:   16:static uint32_t g_26[3][1][5] = {{{4294967295UL, 0x7511ECBFL, 4294967295UL, 0x7511ECBFL, 4294967295UL}}, {{4UL, 4UL, 4UL, 4UL, 4UL}}, {{4294967295UL, 0x7511ECBFL, 4294967295UL, 0x7511ECBFL, 4294967295UL}}};
        -:   17:static int32_t *volatile g_27 = (void *)0;
        -:   18:static int32_t *volatile g_28 = &g_22[0];
        -:   19:
        -:   20:static int8_t func_1(void);
        -:   21:static int64_t func_9(int8_t p_10, int8_t p_11, union U6 p_12);
        -:   22:
        1:   23:static int8_t func_1(void) {
        1:   24:  int8_t l_4 = 0x1DL;
        1:   25:  int16_t *l_25 = (void *)0;
       1*:   26:  (*g_28) = (safe_div_func_int16_t_s_s((((g_26[2][0][1] = ((l_4 >= ((l_4 < g_5[2]), (~0L))) && (safe_sub_func_int64_t_s_s(func_9(l_4, g_5[1], g_13), l_4)))) & 0x14C3L) || g_26[2][0][1]), l_4));
        1:   27:  return g_26[1][0][3];
        -:   28:}
        -:   29:
        1:   30:static int64_t func_9(int8_t p_10, int8_t p_11, union U6 p_12) {
        1:   31:  uint32_t l_16 = 0x2C40A98CL;
       1*:   32:  for (p_12.f1 = 0; (p_12.f1 > 24); p_12.f1++) {
    #####:   33:    int64_t l_20 = 1L;
    #####:   34:    int32_t *l_21 = &g_22[0];
    #####:   35:    if (l_16)
    #####:   36:      break;
    #####:   37:    (*g_23) = ((*l_21) = (g_5[2] != (~(safe_sub_func_uint64_t_u_u(p_11, (l_20, p_12.f1))))));
        -:   38:  }
        1:   39:  return p_10;
        -:   40:}
        -:   41:
        1:   42:int main(int argc, char *argv[]) {
        -:   43:  int i, j, k;
        1:   44:  int print_hash_value = 0;
       1*:   45:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   46:    print_hash_value = 1;
        1:   47:  platform_main_begin();
        1:   48:  crc32_gentab();
        1:   49:  func_1();
        4:   50:  for (i = 0; i < 3; i++) {
        3:   51:    transparent_crc(g_5[i], "g_5[i]", print_hash_value);
        3:   52:    if (print_hash_value)
    #####:   53:      printf("index = [%d]\n", i);
        -:   54:  }
        1:   55:  transparent_crc(g_13.f0, "g_13.f0", print_hash_value);
        5:   56:  for (i = 0; i < 4; i++) {
        4:   57:    transparent_crc(g_22[i], "g_22[i]", print_hash_value);
        4:   58:    if (print_hash_value)
    #####:   59:      printf("index = [%d]\n", i);
        -:   60:  }
        1:   61:  transparent_crc(g_24, "g_24", print_hash_value);
        4:   62:  for (i = 0; i < 3; i++) {
        6:   63:    for (j = 0; j < 1; j++) {
       18:   64:      for (k = 0; k < 5; k++) {
       15:   65:        transparent_crc(g_26[i][j][k], "g_26[i][j][k]", print_hash_value);
       15:   66:        if (print_hash_value)
    #####:   67:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   68:      }
        -:   69:    }
        -:   70:  }
        1:   71:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   72:  return 0;
        -:   73:}

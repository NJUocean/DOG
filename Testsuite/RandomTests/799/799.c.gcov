        -:    0:Source:799.c
        -:    0:Graph:799.gcno
        -:    0:Data:799.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_3 = 0x2C29A3DFL;
        -:    7:static volatile int32_t g_4 = 4L;
        -:    8:static volatile int32_t g_5[5] = {0L, 0L, 0L, 0L, 0L};
        -:    9:static volatile int32_t g_6[1] = {7L};
        -:   10:static volatile int32_t g_7 = 0x21591249L;
        -:   11:static int32_t g_8 = 1L;
        -:   12:static int32_t g_11 = (-1L);
        -:   13:static int32_t *volatile g_10 = &g_11;
        -:   14:static volatile int32_t g_12[5] = {0x312FBB6BL, 0x312FBB6BL, 0x312FBB6BL, 0x312FBB6BL, 0x312FBB6BL};
        -:   15:static int32_t g_13 = 0xE703026DL;
        -:   16:
        -:   17:static uint8_t func_1(void);
        -:   18:static int32_t *func_14(int32_t *p_15, int8_t p_16, uint16_t p_17);
        -:   19:
        1:   20:static uint8_t func_1(void) {
        -:   21:  int16_t l_2[3];
        -:   22:  int i;
        4:   23:  for (i = 0; i < 3; i++)
        3:   24:    l_2[i] = 0x124FL;
        4:   25:  for (g_8 = 2; (g_8 >= 0); g_8 -= 1) {
        -:   26:    int i;
        3:   27:    (*g_10) |= (+l_2[g_8]);
       3*:   28:    for (g_11 = 4; (g_11 >= 0); g_11 -= 1) {
        3:   29:      int32_t *l_18 = (void *)0;
        3:   30:      int8_t l_32[2][2][1] = {{{4L}, {0L}}, {{4L}, {0L}}};
        -:   31:      int i, j, k;
       12:   32:      for (g_13 = 0; (g_13 <= 2); g_13 += 1) {
        9:   33:        int32_t **l_36 = &l_18;
        -:   34:        int i;
        9:   35:        g_10 = func_14(l_18, ((safe_add_func_uint64_t_u_u((safe_div_func_int32_t_s_s((safe_unary_minus_func_uint64_t_u(l_2[g_13])), 0xAEBA4D3EL)), (safe_rshift_func_uint16_t_u_u(l_2[g_13], (safe_lshift_func_uint64_t_u_u(((safe_div_func_uint8_t_u_u(((void *)0 != &g_13), ((safe_mul_func_uint8_t_u_u(g_12[3], (g_11, (((&g_13 != (void *)0), g_13) ^ (-4L))))), l_32[0][0][0]))) < g_11), 34)))))) == 0x26D5D64F68993DD6LL), g_13);
        9:   36:        (*l_36) = (void *)0;
        -:   37:      }
        3:   38:      if ((*g_10))
        3:   39:        break;
        -:   40:    }
        -:   41:  }
        1:   42:  return g_5[0];
        -:   43:}
        -:   44:
        9:   45:static int32_t *func_14(int32_t *p_15, int8_t p_16, uint16_t p_17) {
        9:   46:  int32_t *volatile *l_34 = (void *)0;
        9:   47:  int32_t *volatile **l_33 = &l_34;
        9:   48:  int32_t *l_35 = &g_13;
        9:   49:  (*l_33) = &g_10;
        9:   50:  return l_35;
        -:   51:}
        -:   52:
        1:   53:int main(int argc, char *argv[]) {
        -:   54:  int i;
        1:   55:  int print_hash_value = 0;
       1*:   56:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   57:    print_hash_value = 1;
        1:   58:  platform_main_begin();
        1:   59:  crc32_gentab();
        1:   60:  func_1();
        1:   61:  transparent_crc(g_3, "g_3", print_hash_value);
        1:   62:  transparent_crc(g_4, "g_4", print_hash_value);
        6:   63:  for (i = 0; i < 5; i++) {
        5:   64:    transparent_crc(g_5[i], "g_5[i]", print_hash_value);
        5:   65:    if (print_hash_value)
    #####:   66:      printf("index = [%d]\n", i);
        -:   67:  }
        2:   68:  for (i = 0; i < 1; i++) {
        1:   69:    transparent_crc(g_6[i], "g_6[i]", print_hash_value);
        1:   70:    if (print_hash_value)
    #####:   71:      printf("index = [%d]\n", i);
        -:   72:  }
        1:   73:  transparent_crc(g_7, "g_7", print_hash_value);
        1:   74:  transparent_crc(g_8, "g_8", print_hash_value);
        1:   75:  transparent_crc(g_11, "g_11", print_hash_value);
        6:   76:  for (i = 0; i < 5; i++) {
        5:   77:    transparent_crc(g_12[i], "g_12[i]", print_hash_value);
        5:   78:    if (print_hash_value)
    #####:   79:      printf("index = [%d]\n", i);
        -:   80:  }
        1:   81:  transparent_crc(g_13, "g_13", print_hash_value);
        1:   82:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   83:  return 0;
        -:   84:}

        -:    0:Source:700.c
        -:    0:Graph:700.gcno
        -:    0:Data:700.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static uint16_t g_2 = 0xDD3FL;
        -:    7:static int32_t g_4 = 0x12491E29L;
        -:    8:static int32_t g_9[4] = {0xE1DFE009L, 0xE1DFE009L, 0xE1DFE009L, 0xE1DFE009L};
        -:    9:
        -:   10:static uint16_t func_1(void);
        -:   11:
        1:   12:static uint16_t func_1(void) {
        1:   13:  int32_t *l_3 = &g_4;
        1:   14:  int32_t l_10 = 1L;
        1:   15:  int32_t l_11 = 0xD3EC93CCL;
        1:   16:  int32_t l_12 = 1L;
        1:   17:  int32_t l_13[5][4] = {{0xFA553FC2L, 0xFA553FC2L, 0xCDEDFC3EL, 6L}, {0L, (-1L), 0L, 0xCDEDFC3EL}, {0L, 0xCDEDFC3EL, 0xCDEDFC3EL, 0L}, {0xFA553FC2L, 0xCDEDFC3EL, 6L, 0xCDEDFC3EL}, {0xCDEDFC3EL, (-1L), 6L, 6L}};
        1:   18:  int8_t l_14 = 0xD6L;
        1:   19:  int8_t l_15 = 0x5DL;
        -:   20:  int i, j;
        1:   21:  (*l_3) ^= g_2;
       16:   22:  for (g_4 = 0; (g_4 <= 14); g_4 = safe_add_func_uint8_t_u_u(g_4, 1)) {
       15:   23:    int32_t *l_7 = (void *)0;
       15:   24:    int32_t *l_8[5] = {&g_9[0], &g_9[0], &g_9[0], &g_9[0], &g_9[0]};
        -:   25:    uint16_t l_16[3];
        -:   26:    int i;
       60:   27:    for (i = 0; i < 3; i++)
       45:   28:      l_16[i] = 0x8724L;
       15:   29:    ++l_16[1];
        -:   30:  }
        1:   31:  return g_9[1];
        -:   32:}
        -:   33:
        1:   34:int main(int argc, char *argv[]) {
        -:   35:  int i;
        1:   36:  int print_hash_value = 0;
       1*:   37:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   38:    print_hash_value = 1;
        1:   39:  platform_main_begin();
        1:   40:  crc32_gentab();
        1:   41:  func_1();
        1:   42:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   43:  transparent_crc(g_4, "g_4", print_hash_value);
        5:   44:  for (i = 0; i < 4; i++) {
        4:   45:    transparent_crc(g_9[i], "g_9[i]", print_hash_value);
        4:   46:    if (print_hash_value)
    #####:   47:      printf("index = [%d]\n", i);
        -:   48:  }
        1:   49:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   50:  return 0;
        -:   51:}

        -:    0:Source:580.c
        -:    0:Graph:580.gcno
        -:    0:Data:580.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U2 {
        -:    7:  volatile int8_t f0;
        -:    8:  int32_t f1;
        -:    9:  uint64_t f2;
        -:   10:  uint64_t f3;
        -:   11:  int32_t f4;
        -:   12:};
        -:   13:
        -:   14:static volatile int32_t g_2[2][1][3] = {{{1L, 1L, 1L}}, {{1L, 1L, 1L}}};
        -:   15:static int32_t g_3 = 1L;
        -:   16:static const union U2 g_14 = {-9L};
        -:   17:
        -:   18:static const union U2 func_1(void);
        -:   19:
        1:   20:static const union U2 func_1(void) {
        1:   21:  int32_t *l_6 = &g_3;
        1:   22:  int32_t *l_8 = &g_3;
        1:   23:  int32_t *l_9 = (void *)0;
        -:   24:  int32_t *l_10[1][3];
        1:   25:  uint32_t l_11 = 4294967290UL;
        -:   26:  int i, j;
        2:   27:  for (i = 0; i < 1; i++) {
        4:   28:    for (j = 0; j < 3; j++)
        3:   29:      l_10[i][j] = &g_3;
        -:   30:  }
        9:   31:  for (g_3 = 0; (g_3 >= (-7)); --g_3) {
        8:   32:    int32_t **l_7 = &l_6;
        8:   33:    (*l_7) = l_6;
        -:   34:  }
        1:   35:  l_11--;
        1:   36:  return g_14;
        -:   37:}
        -:   38:
        1:   39:int main(int argc, char *argv[]) {
        -:   40:  int i, j, k;
        1:   41:  int print_hash_value = 0;
       1*:   42:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   43:    print_hash_value = 1;
        1:   44:  platform_main_begin();
        1:   45:  crc32_gentab();
        1:   46:  func_1();
        3:   47:  for (i = 0; i < 2; i++) {
        4:   48:    for (j = 0; j < 1; j++) {
        8:   49:      for (k = 0; k < 3; k++) {
        6:   50:        transparent_crc(g_2[i][j][k], "g_2[i][j][k]", print_hash_value);
        6:   51:        if (print_hash_value)
    #####:   52:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   53:      }
        -:   54:    }
        -:   55:  }
        1:   56:  transparent_crc(g_3, "g_3", print_hash_value);
        1:   57:  transparent_crc(g_14.f0, "g_14.f0", print_hash_value);
        1:   58:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   59:  return 0;
        -:   60:}

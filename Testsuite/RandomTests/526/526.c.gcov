        -:    0:Source:526.c
        -:    0:Graph:526.gcno
        -:    0:Data:526.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int64_t g_7 = 5L;
        -:    7:static uint32_t g_11 = 0UL;
        -:    8:static int32_t g_21 = 0x48A2B8EAL;
        -:    9:static int16_t g_22[5][4][3] = {{{(-6L), 0xF32BL, 0xF32BL}, {0x8C7FL, 0xF32BL, (-7L)}, {2L, (-6L), 0x2401L}, {0x8C7FL, 0x8C7FL, 0x2401L}}, {{(-6L), 2L, (-7L)}, {0xF32BL, 0x8C7FL, 0xF32BL}, {0xF32BL, (-6L), 0x8C7FL}, {(-6L), 0xF32BL, 0xF32BL}}, {{0x8C7FL, 0xF32BL, (-7L)}, {2L, (-6L), 0x2401L}, {0x8C7FL, 0x8C7FL, 0x2401L}, {(-6L), 2L, (-7L)}}, {{0xF32BL, 0x8C7FL, 0xF32BL}, {0xF32BL, (-6L), 0x8C7FL}, {(-6L), 0xF32BL, 0xF32BL}, {0x8C7FL, 2L, 0x2401L}}, {{(-7L), 0xF32BL, 0x8C7FL}, {0xCDF8L, 0xCDF8L, 0x8C7FL}, {0xF32BL, (-7L), 0x2401L}, {2L, 0xCDF8L, 2L}}};
        -:   10:static int32_t g_24 = 0L;
        -:   11:static uint8_t g_43 = 0x36L;
        -:   12:static volatile uint8_t *g_50 = (void *)0;
        -:   13:static int16_t g_69 = (-1L);
        -:   14:static int64_t g_76 = 9L;
        -:   15:static uint16_t g_77 = 0x037BL;
        -:   16:static int16_t g_82 = 7L;
        -:   17:static int32_t g_85 = 0L;
        -:   18:static uint64_t g_86[1][5][1] = {{{0xC2C51C80F86AEFBDLL}, {0UL}, {0xC2C51C80F86AEFBDLL}, {0UL}, {0xC2C51C80F86AEFBDLL}}};
        -:   19:static volatile int32_t g_92 = 0L;
        -:   20:static volatile int32_t *volatile g_91 = &g_92;
        -:   21:static int32_t g_112 = 0x4A205A56L;
        -:   22:static volatile int8_t g_113 = 1L;
        -:   23:static int32_t g_114 = 0x2DE0B6ADL;
        -:   24:static volatile int32_t g_115[1][2][2] = {{{0L, 0L}, {0L, 0L}}};
        -:   25:
        -:   26:static uint8_t func_1(void);
        -:   27:static int32_t func_2(const uint64_t p_3, uint64_t p_4, uint8_t p_5);
        -:   28:
        1:   29:static uint8_t func_1(void) {
        1:   30:  const uint32_t l_6 = 1UL;
        1:   31:  uint16_t l_8 = 0xCB63L;
        -:   32:  int32_t *l_23[1];
        1:   33:  int32_t *l_62[5][3] = {{&g_21, &g_24, &g_21}, {&g_21, &g_24, &g_21}, {&g_21, &g_24, &g_21}, {&g_21, &g_24, &g_21}, {&g_21, &g_24, &g_21}};
        1:   34:  int32_t **l_61 = &l_62[2][1];
        1:   35:  int16_t l_122 = 0xE0FDL;
        -:   36:  int32_t l_126[1][4];
        1:   37:  uint16_t l_127 = 0UL;
        -:   38:  int i, j;
        2:   39:  for (i = 0; i < 1; i++)
        1:   40:    l_23[i] = &g_24;
        2:   41:  for (i = 0; i < 1; i++) {
        5:   42:    for (j = 0; j < 4; j++)
        4:   43:      l_126[i][j] = 0L;
        -:   44:  }
       1*:   45:  if ((g_24 |= func_2(l_6, (((l_6 <= 255UL) && ((g_7 < l_8) == l_8)), (safe_div_func_uint8_t_u_u(((g_11 ^= l_6) > (safe_mul_func_uint8_t_u_u(((g_21 = (safe_sub_func_uint64_t_u_u(((0xFCF33F23E93D0B54LL == (~(((safe_mul_func_int64_t_s_s((safe_add_func_uint8_t_u_u((0x307A329EL <= l_6), 0x09L)), 1UL)) != l_8) <= l_6))), l_6), 0x126C7F05F4326038LL))) >= g_7), 0xFBL))), g_22[2][3][0]))), l_6))) {
        -:   46:    uint32_t l_25[1][2];
        1:   47:    int32_t *l_26 = (void *)0;
        1:   48:    uint8_t *l_42 = &g_43;
        1:   49:    int32_t **l_60 = &l_23[0];
        1:   50:    int32_t ***l_63[2][5][5] = {{{(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}, {&l_60, &l_61, &l_60, &l_61, &l_60}, {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}, {&l_60, &l_61, &l_60, &l_61, &l_60}, {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}}, {{&l_60, &l_61, &l_60, &l_61, &l_60}, {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}, {&l_60, &l_61, &l_60, &l_61, &l_60}, {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}, {&l_60, &l_61, &l_60, &l_61, &l_60}}};
        1:   51:    int32_t **l_64 = (void *)0;
        -:   52:    int32_t **l_65[1];
        1:   53:    uint32_t l_66 = 5UL;
        1:   54:    int16_t *l_67 = (void *)0;
        1:   55:    int16_t *l_68 = &g_69;
        1:   56:    int64_t *l_70 = (void *)0;
        1:   57:    int64_t *l_71 = (void *)0;
        1:   58:    int64_t *l_72 = (void *)0;
        1:   59:    int64_t *l_73 = (void *)0;
        1:   60:    int64_t *l_74 = (void *)0;
        1:   61:    int64_t *l_75 = &g_76;
        1:   62:    uint16_t l_78 = 65526UL;
        1:   63:    uint16_t l_79 = 0UL;
        1:   64:    int32_t l_80 = 0x15DBE4B2L;
        1:   65:    int16_t *l_81 = &g_82;
        1:   66:    int32_t *l_83 = (void *)0;
        1:   67:    int32_t *l_84 = &g_85;
        -:   68:    int i, j, k;
        2:   69:    for (i = 0; i < 1; i++) {
        3:   70:      for (j = 0; j < 2; j++)
        2:   71:        l_25[i][j] = 0x4DE5A82AL;
        -:   72:    }
        2:   73:    for (i = 0; i < 1; i++)
        1:   74:      l_65[i] = &l_62[2][1];
        1:   75:    l_25[0][1] = 0x56FD8C65L;
        1:   76:        g_86[0][1][0] ^= ((g_22[2][3][0] , l_26) == ((safe_mul_func_int16_t_s_s(g_21, ((((*l_84) = (safe_mul_func_int16_t_s_s((g_7 <= (((((*l_81) = (safe_add_func_uint16_t_u_u((((safe_add_func_int32_t_s_s((safe_mod_func_int64_t_s_s(((safe_sub_func_int32_t_s_s((~(safe_lshift_func_uint8_t_u_u(((*l_42)--), (safe_sub_func_int64_t_s_s((g_77 = ((*l_75) = (safe_mod_func_uint8_t_u_u(g_11, ((g_50 != ((safe_add_func_uint64_t_u_u(g_22[3][0][0], (safe_sub_func_uint32_t_u_u((((*l_68) = (safe_lshift_func_int8_t_s_s((safe_mod_func_int16_t_s_s(((safe_unary_minus_func_uint16_t_u(((((*l_60) = l_23[0]) == (((l_64 = l_61) != l_65[0]) , &g_24)) == g_24))) < l_66), g_22[2][3][0])), 0))) & 0UL), g_21)))) , g_50)) | g_22[2][3][0]))))), l_78))))), g_21)) <= g_11), l_79)), l_80)) >= g_21) & g_22[1][1][1]), (-2L)))) < 0xEB41L) == 3UL) != g_22[2][3][0])), g_11))) , g_22[2][3][0]) ^ 0xEB022B26L))) , &g_24));
        -:   77:  } else {
    #####:   78:    const uint32_t l_95[1] = {1UL};
        -:   79:    int i;
    #####:   80:    for (g_43 = 25; (g_43 != 17); g_43 = safe_sub_func_uint32_t_u_u(g_43, 4)) {
    #####:   81:      uint32_t l_94 = 0UL;
    #####:   82:      for (g_82 = 0; (g_82 >= 24); ++g_82) {
    #####:   83:        g_91 = (void *)0;
        -:   84:      }
    #####:   85:      for (g_24 = 0; (g_24 <= 2); g_24 += 1) {
    #####:   86:        uint8_t *l_99 = &g_43;
    #####:   87:        uint8_t **l_98 = &l_99;
    #####:   88:        int32_t l_110 = 0x2349D530L;
    #####:   89:        uint16_t l_111 = 0x1200L;
        -:   90:        int i, j;
    #####:   91:        g_92 = (((((+l_94) > g_77), l_95[0]) || (((safe_mul_func_int64_t_s_s(g_85, (((*l_98) = (void *)0) == &g_43))) != (safe_lshift_func_int32_t_s_s((safe_add_func_int32_t_s_s((safe_add_func_uint8_t_u_u((safe_rshift_func_uint16_t_u_u(((safe_rshift_func_int16_t_s_s(g_22[2][3][0], ((g_43 != l_110), (-6L)))) >= l_111), g_86[0][1][0])), g_86[0][1][0])), 1L)), g_11))) != 0x14L)), l_95[0]);
        -:   92:      }
        -:   93:    }
        -:   94:  }
        1:   95:  if (g_11) {
        1:   96:    int16_t l_116 = 1L;
        1:   97:    uint8_t l_117 = 0x6FL;
        1:   98:    l_117--;
        -:   99:  } else {
    #####:  100:    int32_t l_120 = 0xCDB4028AL;
        -:  101:    int32_t l_121[2][1][2];
    #####:  102:    uint8_t l_123 = 0x4CL;
        -:  103:    int i, j, k;
    #####:  104:    for (i = 0; i < 2; i++) {
    #####:  105:      for (j = 0; j < 1; j++) {
    #####:  106:        for (k = 0; k < 2; k++)
    #####:  107:          l_121[i][j][k] = 0L;
        -:  108:      }
        -:  109:    }
    #####:  110:    --l_123;
    #####:  111:    --l_127;
        -:  112:  }
        1:  113:  return g_69;
        -:  114:}
        -:  115:
        1:  116:static int32_t func_2(const uint64_t p_3, uint64_t p_4, uint8_t p_5) {
        1:  117:  g_21 = g_11;
        1:  118:  return g_22[2][3][0];
        -:  119:}
        -:  120:
        1:  121:int main(int argc, char *argv[]) {
        -:  122:  int i, j, k;
        1:  123:  int print_hash_value = 0;
       1*:  124:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  125:    print_hash_value = 1;
        1:  126:  platform_main_begin();
        1:  127:  crc32_gentab();
        1:  128:  func_1();
        1:  129:  transparent_crc(g_7, "g_7", print_hash_value);
        1:  130:  transparent_crc(g_11, "g_11", print_hash_value);
        1:  131:  transparent_crc(g_21, "g_21", print_hash_value);
        6:  132:  for (i = 0; i < 5; i++) {
       25:  133:    for (j = 0; j < 4; j++) {
       80:  134:      for (k = 0; k < 3; k++) {
       60:  135:        transparent_crc(g_22[i][j][k], "g_22[i][j][k]", print_hash_value);
       60:  136:        if (print_hash_value)
    #####:  137:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  138:      }
        -:  139:    }
        -:  140:  }
        1:  141:  transparent_crc(g_24, "g_24", print_hash_value);
        1:  142:  transparent_crc(g_43, "g_43", print_hash_value);
        1:  143:  transparent_crc(g_69, "g_69", print_hash_value);
        1:  144:  transparent_crc(g_76, "g_76", print_hash_value);
        1:  145:  transparent_crc(g_77, "g_77", print_hash_value);
        1:  146:  transparent_crc(g_82, "g_82", print_hash_value);
        1:  147:  transparent_crc(g_85, "g_85", print_hash_value);
        2:  148:  for (i = 0; i < 1; i++) {
        6:  149:    for (j = 0; j < 5; j++) {
       10:  150:      for (k = 0; k < 1; k++) {
        5:  151:        transparent_crc(g_86[i][j][k], "g_86[i][j][k]", print_hash_value);
        5:  152:        if (print_hash_value)
    #####:  153:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  154:      }
        -:  155:    }
        -:  156:  }
        1:  157:  transparent_crc(g_92, "g_92", print_hash_value);
        1:  158:  transparent_crc(g_112, "g_112", print_hash_value);
        1:  159:  transparent_crc(g_113, "g_113", print_hash_value);
        1:  160:  transparent_crc(g_114, "g_114", print_hash_value);
        2:  161:  for (i = 0; i < 1; i++) {
        3:  162:    for (j = 0; j < 2; j++) {
        6:  163:      for (k = 0; k < 2; k++) {
        4:  164:        transparent_crc(g_115[i][j][k], "g_115[i][j][k]", print_hash_value);
        4:  165:        if (print_hash_value)
    #####:  166:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  167:      }
        -:  168:    }
        -:  169:  }
        1:  170:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  171:  return 0;
        -:  172:}

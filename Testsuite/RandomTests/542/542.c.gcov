        -:    0:Source:542.c
        -:    0:Graph:542.gcno
        -:    0:Data:542.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_2[1] = {0L};
        -:    7:static volatile int32_t g_3 = 1L;
        -:    8:static volatile int32_t g_4 = 1L;
        -:    9:static volatile int32_t g_5[2] = {0xF5A9C4C8L, 0xF5A9C4C8L};
        -:   10:static int32_t g_6[2][5] = {{0L, 1L, 0L, 0L, 1L}, {1L, 0L, 0L, 1L, 0L}};
        -:   11:static int32_t g_9 = 0x7C1188E1L;
        -:   12:static uint16_t g_45 = 65535UL;
        -:   13:static uint16_t g_47[2] = {0UL, 0UL};
        -:   14:static int32_t g_53 = 0L;
        -:   15:static volatile int32_t g_62[1] = {(-1L)};
        -:   16:static uint64_t g_63 = 0x5996E2414C35F52DLL;
        -:   17:
        -:   18:static uint32_t func_1(void);
        -:   19:static int32_t func_12(uint32_t p_13, int32_t p_14, uint32_t p_15, int8_t p_16, uint8_t p_17);
        -:   20:
        1:   21:static uint32_t func_1(void) {
        1:   22:  const int8_t l_35 = 0x65L;
        1:   23:  int32_t l_66 = 1L;
       18:   24:  for (g_6[0][1] = 0; (g_6[0][1] != 17); g_6[0][1]++) {
       17:   25:    uint32_t l_42 = 7UL;
        -:   26:    uint16_t *const l_46[2][1] = {{&g_47[1]}, {&g_47[1]}};
        -:   27:    int i, j;
      714:   28:    for (g_9 = (-23); (g_9 < 18); g_9 = safe_add_func_int32_t_s_s(g_9, 1)) {
      697:   29:      uint64_t l_43 = 6UL;
      697:   30:      uint16_t *l_44 = &g_45;
     697*:   31:      l_66 = func_12((safe_rshift_func_uint32_t_u_u(((((safe_mul_func_int8_t_s_s(((safe_sub_func_uint32_t_u_u((safe_mod_func_int32_t_s_s(g_4, (safe_sub_func_int32_t_s_s((safe_mod_func_uint16_t_u_u((safe_sub_func_int16_t_s_s((((~((((safe_div_func_uint64_t_u_u((l_35 < (safe_div_func_uint16_t_u_u((((((safe_sub_func_int16_t_s_s(((0UL <= (safe_lshift_func_int32_t_s_s(l_42, 5))) < (((*l_44) ^= l_43) || l_35)), (((void *)0 != l_46[1][0]) ^ ((((safe_rshift_func_int16_t_s_s((-1L), 8)) | g_9) > g_9) & l_42)))) >= 2UL), 18446744073709551608UL) <= g_9) != g_47[1]), l_43))), 7L)) >= 0x8BA79672L) <= l_35) > 2L)), (-5L)) == g_9), 1UL)), l_42)), g_6[0][1])))), 0x06A9BEBBL)) ^ g_9), l_43)) && (-8L)), g_47[0]) > 0x59L), l_43)), g_9, g_47[1], g_6[0][1], l_43);
      697:   32:      if (l_43)
      697:   33:        continue;
        -:   34:    }
        -:   35:  }
        1:   36:  return g_6[0][0];
        -:   37:}
        -:   38:
      697:   39:static int32_t func_12(uint32_t p_13, int32_t p_14, uint32_t p_15, int8_t p_16, uint8_t p_17) {
      697:   40:  int32_t l_58 = 0x3B22489AL;
      697:   41:  int32_t l_59 = (-10L);
      697:   42:  int32_t l_60 = 8L;
      697:   43:  int32_t l_61[4][5] = {{0x56F59619L, 0x6EFE450DL, 0x7FFC8BABL, 1L, 0x7FFC8BABL}, {0x7FFC8BABL, 0x7FFC8BABL, (-1L), 1L, 0x0B5DAE8CL}, {0x6EFE450DL, 0x56F59619L, 0x56F59619L, 0x6EFE450DL, 0x7FFC8BABL}, {0x6EFE450DL, 1L, 0xBD1B8438L, 0xBD1B8438L, 1L}};
        -:   44:  int i, j;
    26486:   45:  for (p_13 = 0; (p_13 <= 36); ++p_13) {
    25789:   46:    int32_t *l_52 = &g_53;
    25789:   47:    int32_t *l_54 = &g_53;
    25789:   48:    int32_t *l_55 = &g_53;
    25789:   49:    int32_t *l_56 = (void *)0;
    25789:   50:    int32_t *l_57[1][3][5] = {{{&g_53, &g_53, &g_53, &g_53, &g_53}, {&g_53, (void *)0, &g_53, (void *)0, &g_53}, {&g_53, &g_53, &g_53, &g_53, &g_53}}};
        -:   51:    int i, j, k;
    25789:   52:    g_63--;
        -:   53:  }
      697:   54:  return g_9;
        -:   55:}
        -:   56:
        1:   57:int main(int argc, char *argv[]) {
        -:   58:  int i, j;
        1:   59:  int print_hash_value = 0;
       1*:   60:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   61:    print_hash_value = 1;
        1:   62:  platform_main_begin();
        1:   63:  crc32_gentab();
        1:   64:  func_1();
        2:   65:  for (i = 0; i < 1; i++) {
        1:   66:    transparent_crc(g_2[i], "g_2[i]", print_hash_value);
        1:   67:    if (print_hash_value)
    #####:   68:      printf("index = [%d]\n", i);
        -:   69:  }
        1:   70:  transparent_crc(g_3, "g_3", print_hash_value);
        1:   71:  transparent_crc(g_4, "g_4", print_hash_value);
        3:   72:  for (i = 0; i < 2; i++) {
        2:   73:    transparent_crc(g_5[i], "g_5[i]", print_hash_value);
        2:   74:    if (print_hash_value)
    #####:   75:      printf("index = [%d]\n", i);
        -:   76:  }
        3:   77:  for (i = 0; i < 2; i++) {
       12:   78:    for (j = 0; j < 5; j++) {
       10:   79:      transparent_crc(g_6[i][j], "g_6[i][j]", print_hash_value);
       10:   80:      if (print_hash_value)
    #####:   81:        printf("index = [%d][%d]\n", i, j);
        -:   82:    }
        -:   83:  }
        1:   84:  transparent_crc(g_9, "g_9", print_hash_value);
        1:   85:  transparent_crc(g_45, "g_45", print_hash_value);
        3:   86:  for (i = 0; i < 2; i++) {
        2:   87:    transparent_crc(g_47[i], "g_47[i]", print_hash_value);
        2:   88:    if (print_hash_value)
    #####:   89:      printf("index = [%d]\n", i);
        -:   90:  }
        1:   91:  transparent_crc(g_53, "g_53", print_hash_value);
        2:   92:  for (i = 0; i < 1; i++) {
        1:   93:    transparent_crc(g_62[i], "g_62[i]", print_hash_value);
        1:   94:    if (print_hash_value)
    #####:   95:      printf("index = [%d]\n", i);
        -:   96:  }
        1:   97:  transparent_crc(g_63, "g_63", print_hash_value);
        1:   98:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   99:  return 0;
        -:  100:}

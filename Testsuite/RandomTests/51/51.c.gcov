        -:    0:Source:51.c
        -:    0:Graph:51.gcno
        -:    0:Data:51.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  volatile int32_t f0;
        -:   10:  const volatile int64_t f1;
        -:   11:};
        -:   12:#pragma pack(pop)
        -:   13:
        -:   14:struct S1 {
        -:   15:  volatile struct S0 f0;
        -:   16:};
        -:   17:
        -:   18:static volatile int32_t g_2[4] = {0L, 0L, 0L, 0L};
        -:   19:static volatile int32_t g_3 = 0x65683C8FL;
        -:   20:static int32_t g_4 = (-1L);
        -:   21:static volatile int32_t *g_8[3][4] = {{&g_2[3], &g_2[3], &g_2[3], &g_2[3]}, {&g_2[3], &g_2[3], &g_2[3], &g_2[3]}, {&g_2[3], &g_2[3], &g_2[3], &g_2[3]}};
        -:   22:static volatile int32_t **volatile g_7 = &g_8[1][3];
        -:   23:static volatile int32_t g_9[1] = {0xB8F5F499L};
        -:   24:static volatile int32_t g_10[1] = {0x0CC2FDCBL};
        -:   25:static volatile int32_t g_11[4][1][5] = {{{0x7C9D5FACL, 0x7C9D5FACL, 0x7C9D5FACL, 0x7C9D5FACL, 0x7C9D5FACL}}, {{0L, 0L, 0L, 0L, 0L}}, {{0x7C9D5FACL, 0x7C9D5FACL, 0x7C9D5FACL, 0x7C9D5FACL, 0x7C9D5FACL}}, {{0L, 0L, 0L, 0L, 0L}}};
        -:   26:static int32_t g_12 = 0xEB2391CBL;
        -:   27:static int32_t *g_22 = &g_4;
        -:   28:static int32_t **g_21 = &g_22;
        -:   29:static int32_t g_24[1][5][4] = {{{0xB5AF9F7CL, 0xB5AF9F7CL, 0x19ADB821L, 0x19ADB821L}, {0xB5AF9F7CL, 0xB5AF9F7CL, 0x19ADB821L, 0x19ADB821L}, {0xB5AF9F7CL, 0xB5AF9F7CL, 0x19ADB821L, 0x19ADB821L}, {0xB5AF9F7CL, 0xB5AF9F7CL, 0x19ADB821L, 0x19ADB821L}, {0xB5AF9F7CL, 0xB5AF9F7CL, 0x19ADB821L, 0x19ADB821L}}};
        -:   30:static volatile uint32_t g_48 = 0x21B0A093L;
        -:   31:static int8_t g_62 = 0x05L;
        -:   32:static uint16_t g_65 = 6UL;
        -:   33:static uint64_t g_73 = 0xE582B275DCB43529LL;
        -:   34:static uint32_t g_83[2] = {2UL, 2UL};
        -:   35:static struct S1 g_86 = {{0L, 0xB484BB253DC1765DLL}};
        -:   36:static uint64_t *g_91 = &g_73;
        -:   37:static uint64_t **g_90 = &g_91;
        -:   38:static uint64_t ***volatile g_89 = &g_90;
        -:   39:static uint16_t g_107 = 0x1940L;
        -:   40:
        -:   41:static int8_t func_1(void);
        -:   42:static uint16_t func_19(int32_t **p_20);
        -:   43:
        1:   44:static int8_t func_1(void) {
        1:   45:  const uint16_t l_76 = 0x0544L;
        1:   46:  int32_t l_77 = (-8L);
        1:   47:  uint64_t *l_88 = (void *)0;
        1:   48:  uint64_t **l_87 = &l_88;
        1:   49:  int32_t **l_110 = &g_22;
        4:   50:  for (g_4 = 26; (g_4 > 14); g_4 = safe_sub_func_uint8_t_u_u(g_4, 4)) {
        3:   51:    uint32_t l_71 = 0x0E7FB9BEL;
        3:   52:    int32_t **l_81[5][5] = {{&g_22, &g_22, &g_22, &g_22, &g_22}, {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}, {&g_22, &g_22, &g_22, &g_22, &g_22}, {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0}, {&g_22, &g_22, &g_22, &g_22, &g_22}};
        -:   53:    int i, j;
        3:   54:    if (g_2[1]) {
    #####:   55:      int8_t l_63 = 0xC2L;
    #####:   56:      int32_t l_66 = (-2L);
    #####:   57:      (*g_7) = &g_2[3];
    #####:   58:      for (g_12 = (-12); (g_12 > (-15)); g_12 = safe_sub_func_int16_t_s_s(g_12, 1)) {
    #####:   59:        uint16_t *l_64 = &g_65;
    #####:   60:        l_66 = (safe_mod_func_uint16_t_u_u((safe_mul_func_uint16_t_u_u(func_19(g_21), ((safe_rshift_func_uint32_t_u_s(g_12, 1)) && (safe_mul_func_uint8_t_u_u((g_62 = g_4), l_63))))), ((*l_64) &= g_24[0][2][2])));
        -:   61:      }
        -:   62:    } else {
        3:   63:      uint32_t l_84 = 1UL;
        6:   64:      for (g_65 = 0; (g_65 <= 0); g_65 += 1) {
        3:   65:        uint64_t *l_72 = &g_73;
        3:   66:        int32_t l_80 = 0L;
        -:   67:        uint32_t *l_82[3];
        -:   68:        int i;
       12:   69:        for (i = 0; i < 3; i++)
        9:   70:          l_82[i] = &g_83[1];
        3:   71:        l_84 &= ((safe_mul_func_uint32_t_u_u((g_83[1] &= ((+((g_11[1][0][1] == (+((*l_72) = l_71))) ^ (((safe_sub_func_int16_t_s_s((l_76 & (g_4 > (l_77, (safe_rshift_func_int32_t_s_s(l_80, (1UL | g_65)))))), (l_81[0][2] != &g_8[1][2]))) | (-1L)), g_24[0][3][0]))) != g_24[0][2][0])), 0xCCD07D1FL)) > l_80);
        -:   72:      }
        -:   73:    }
        -:   74:  }
        2:   75:  for (g_4 = 0; (g_4 >= 0); g_4 -= 1) {
        1:   76:    volatile int32_t **l_85 = &g_8[1][3];
        1:   77:    int32_t l_102 = (-1L);
        1:   78:    (*l_85) = (*g_7);
        2:   79:    for (g_62 = 0; (g_62 >= 0); g_62 -= 1) {
        1:   80:      (*g_89) = (g_86, l_87);
        2:   81:      for (g_65 = 0; (g_65 <= 0); g_65 += 1) {
        1:   82:        uint32_t *l_92 = &g_83[1];
        1:   83:        int32_t *l_101 = &g_24[0][2][0];
        1:   84:        uint16_t *l_106 = &g_107;
        1:   85:        int32_t l_111[2][1][4] = {{{0x80995AFDL, 0x0643A2F0L, 0x80995AFDL, 0x0643A2F0L}}, {{0x80995AFDL, 0x0643A2F0L, 0x80995AFDL, 0x0643A2F0L}}};
        1:   86:        int32_t *l_112 = &l_77;
        -:   87:        int i, j, k;
       1*:   88:        g_11[(g_65 + 3)][g_4][(g_4 + 2)] = (((*l_92) = g_11[(g_4 + 2)][g_65][(g_4 + 1)]) != (safe_sub_func_int16_t_s_s(((safe_lshift_func_int32_t_s_s(((safe_sub_func_uint16_t_u_u(((safe_lshift_func_int32_t_s_s(((*l_101) = (**g_21)), l_102)) | (((safe_unary_minus_func_uint16_t_u(((safe_div_func_uint16_t_u_u(65534UL, ((*l_106)++))) & (&g_8[1][3] == l_110)))) && 0x4F45EE52087D55B8LL) & (((*l_112) ^= l_111[1][0][0]) != (safe_rshift_func_uint8_t_u_s(0UL, 0))))), 0x0A6BL)) & g_65), 15)) <= 4294967290UL), 1UL)));
        -:   89:      }
        -:   90:    }
        -:   91:  }
        1:   92:  return (**l_110);
        -:   93:}
        -:   94:
    #####:   95:static uint16_t func_19(int32_t **p_20) {
    #####:   96:  int32_t *l_23 = &g_24[0][3][0];
    #####:   97:  int32_t *l_25 = (void *)0;
    #####:   98:  int32_t l_26 = 1L;
    #####:   99:  int32_t *l_27 = (void *)0;
    #####:  100:  int32_t l_28 = (-1L);
    #####:  101:  int32_t *l_29 = (void *)0;
    #####:  102:  int32_t *l_30 = &l_28;
    #####:  103:  int32_t *l_31 = &l_28;
    #####:  104:  int32_t l_32 = (-1L);
    #####:  105:  int32_t *l_33 = &l_32;
    #####:  106:  int32_t *l_34 = &l_26;
    #####:  107:  int32_t *l_35 = &g_24[0][3][0];
    #####:  108:  int32_t l_36 = 6L;
    #####:  109:  int32_t l_37 = 0x42041022L;
    #####:  110:  int32_t l_38 = 0L;
    #####:  111:  int32_t *l_39 = &l_38;
    #####:  112:  int32_t l_40 = 0L;
    #####:  113:  int32_t *l_41 = (void *)0;
    #####:  114:  int32_t l_42 = 0xECBFCF41L;
    #####:  115:  int32_t *l_43 = &l_28;
    #####:  116:  int32_t *l_44 = &l_42;
    #####:  117:  int32_t *l_45 = &l_32;
        -:  118:  int32_t *l_46[1];
    #####:  119:  int32_t l_47 = 0xA0C20100L;
        -:  120:  int i;
    #####:  121:  for (i = 0; i < 1; i++)
    #####:  122:    l_46[i] = (void *)0;
    #####:  123:  --g_48;
    #####:  124:  for (l_36 = (-11); (l_36 < 28); ++l_36) {
    #####:  125:    (*p_20) = (*g_21);
    #####:  126:    for (l_40 = 19; (l_40 >= (-5)); l_40 = safe_sub_func_uint32_t_u_u(l_40, 1)) {
    #####:  127:      uint32_t l_55 = 0xD5D228C8L;
    #####:  128:      --l_55;
        -:  129:    }
        -:  130:  }
    #####:  131:  return (*l_23);
        -:  132:}
        -:  133:
        1:  134:int main(int argc, char *argv[]) {
        -:  135:  int i, j, k;
        1:  136:  int print_hash_value = 0;
       1*:  137:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  138:    print_hash_value = 1;
        1:  139:  platform_main_begin();
        1:  140:  crc32_gentab();
        1:  141:  func_1();
        5:  142:  for (i = 0; i < 4; i++) {
        4:  143:    transparent_crc(g_2[i], "g_2[i]", print_hash_value);
        4:  144:    if (print_hash_value)
    #####:  145:      printf("index = [%d]\n", i);
        -:  146:  }
        1:  147:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  148:  transparent_crc(g_4, "g_4", print_hash_value);
        2:  149:  for (i = 0; i < 1; i++) {
        1:  150:    transparent_crc(g_9[i], "g_9[i]", print_hash_value);
        1:  151:    if (print_hash_value)
    #####:  152:      printf("index = [%d]\n", i);
        -:  153:  }
        2:  154:  for (i = 0; i < 1; i++) {
        1:  155:    transparent_crc(g_10[i], "g_10[i]", print_hash_value);
        1:  156:    if (print_hash_value)
    #####:  157:      printf("index = [%d]\n", i);
        -:  158:  }
        5:  159:  for (i = 0; i < 4; i++) {
        8:  160:    for (j = 0; j < 1; j++) {
       24:  161:      for (k = 0; k < 5; k++) {
       20:  162:        transparent_crc(g_11[i][j][k], "g_11[i][j][k]", print_hash_value);
       20:  163:        if (print_hash_value)
    #####:  164:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  165:      }
        -:  166:    }
        -:  167:  }
        1:  168:  transparent_crc(g_12, "g_12", print_hash_value);
        2:  169:  for (i = 0; i < 1; i++) {
        6:  170:    for (j = 0; j < 5; j++) {
       25:  171:      for (k = 0; k < 4; k++) {
       20:  172:        transparent_crc(g_24[i][j][k], "g_24[i][j][k]", print_hash_value);
       20:  173:        if (print_hash_value)
    #####:  174:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  175:      }
        -:  176:    }
        -:  177:  }
        1:  178:  transparent_crc(g_48, "g_48", print_hash_value);
        1:  179:  transparent_crc(g_62, "g_62", print_hash_value);
        1:  180:  transparent_crc(g_65, "g_65", print_hash_value);
        1:  181:  transparent_crc(g_73, "g_73", print_hash_value);
        3:  182:  for (i = 0; i < 2; i++) {
        2:  183:    transparent_crc(g_83[i], "g_83[i]", print_hash_value);
        2:  184:    if (print_hash_value)
    #####:  185:      printf("index = [%d]\n", i);
        -:  186:  }
        1:  187:  transparent_crc(g_86.f0.f0, "g_86.f0.f0", print_hash_value);
        1:  188:  transparent_crc(g_86.f0.f1, "g_86.f0.f1", print_hash_value);
        1:  189:  transparent_crc(g_107, "g_107", print_hash_value);
        1:  190:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  191:  return 0;
        -:  192:}

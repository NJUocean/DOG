        -:    0:Source:92.c
        -:    0:Graph:92.gcno
        -:    0:Data:92.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static const int8_t g_2 = 1L;
        -:    7:static uint64_t g_17[2][2] = {{0x36745799333C7D24LL, 0x36745799333C7D24LL}, {0x36745799333C7D24LL, 0x36745799333C7D24LL}};
        -:    8:static uint64_t **g_23 = (void *)0;
        -:    9:static int32_t g_33 = 0xC114FF6AL;
        -:   10:static int32_t *volatile g_32 = &g_33;
        -:   11:static int32_t g_34 = 0xD0519924L;
        -:   12:
        -:   13:static const uint8_t func_1(void);
        -:   14:static uint32_t func_3(uint8_t p_4, uint32_t p_5, int16_t p_6, int64_t p_7, int8_t p_8);
        -:   15:
        1:   16:static const uint8_t func_1(void) {
        1:   17:  int64_t l_9 = 0x4B4B13281D21F1EBLL;
        1:   18:  int32_t l_10 = 7L;
        -:   19:  uint64_t *l_16[1][4][1];
        1:   20:  uint8_t l_18 = 255UL;
        1:   21:  const int8_t l_35 = (-1L);
        -:   22:  int i, j, k;
        2:   23:  for (i = 0; i < 1; i++) {
        5:   24:    for (j = 0; j < 4; j++) {
        8:   25:      for (k = 0; k < 1; k++)
        4:   26:        l_16[i][j][k] = &g_17[1][1];
        -:   27:    }
        -:   28:  }
       1*:   29:  g_34 ^= (g_2, (func_3((l_18 = ((((((l_10 = l_9) & l_9), l_10) && 0x85CE96B779C63C40LL), (((g_2 & (-10L)) && ((safe_mul_func_uint8_t_u_u(((safe_div_func_uint8_t_u_u((((l_10 |= ((safe_unary_minus_func_uint16_t_u(5UL)) & g_2)) & g_2) != l_9), g_17[0][1])), 255UL), g_17[1][0])) || l_10)), (-5L))) != g_17[1][1])), g_17[1][1], l_9, g_2, g_17[1][1]), (*g_32)));
        1:   30:  return l_35;
        -:   31:}
        -:   32:
        1:   33:static uint32_t func_3(uint8_t p_4, uint32_t p_5, int16_t p_6, int64_t p_7, int8_t p_8) {
        1:   34:  const uint64_t **l_19 = (void *)0;
        1:   35:  const uint64_t ***l_20 = &l_19;
        1:   36:  uint64_t **l_21 = (void *)0;
        -:   37:  uint64_t ***l_22[2];
        1:   38:  int32_t l_31 = 0x95CC9E52L;
        -:   39:  int i;
        3:   40:  for (i = 0; i < 2; i++)
        2:   41:    l_22[i] = (void *)0;
        1:   42:  (*l_20) = l_19;
        1:   43:  (*g_32) |= ((((0x9E149CFFL | ((g_23 = l_21) == (void *)0)) || (p_8 = (safe_sub_func_uint8_t_u_u(0x6AL, ((safe_lshift_func_int64_t_s_u((-10L), 49)) && ((1UL == (((safe_mul_func_int32_t_s_s(0x33D73C12L, p_8)), (safe_unary_minus_func_uint8_t_u((((((g_17[1][1] >= l_31) != g_17[1][1]) && l_31), l_31), p_5)))), g_17[0][0])), 0xB1L)))))), g_23) == (void *)0);
        1:   44:  return l_31;
        -:   45:}
        -:   46:
        1:   47:int main(int argc, char *argv[]) {
        -:   48:  int i, j;
        1:   49:  int print_hash_value = 0;
       1*:   50:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   51:    print_hash_value = 1;
        1:   52:  platform_main_begin();
        1:   53:  crc32_gentab();
        1:   54:  func_1();
        1:   55:  transparent_crc(g_2, "g_2", print_hash_value);
        3:   56:  for (i = 0; i < 2; i++) {
        6:   57:    for (j = 0; j < 2; j++) {
        4:   58:      transparent_crc(g_17[i][j], "g_17[i][j]", print_hash_value);
        4:   59:      if (print_hash_value)
    #####:   60:        printf("index = [%d][%d]\n", i, j);
        -:   61:    }
        -:   62:  }
        1:   63:  transparent_crc(g_33, "g_33", print_hash_value);
        1:   64:  transparent_crc(g_34, "g_34", print_hash_value);
        1:   65:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   66:  return 0;
        -:   67:}

        -:    0:Source:968.c
        -:    0:Graph:968.gcno
        -:    0:Data:968.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U0 {
        -:    7:  uint16_t f0;
        -:    8:  int8_t f1;
        -:    9:  volatile int16_t f2;
        -:   10:  volatile int32_t f3;
        -:   11:  const int32_t f4;
        -:   12:};
        -:   13:
        -:   14:union U1 {
        -:   15:  volatile uint32_t f0;
        -:   16:  int8_t f1;
        -:   17:  int32_t f2;
        -:   18:  volatile int32_t f3;
        -:   19:  volatile int32_t f4;
        -:   20:};
        -:   21:
        -:   22:union U3 {
        -:   23:  volatile signed f0 : 6;
        -:   24:  const uint32_t f1;
        -:   25:};
        -:   26:
        -:   27:static const uint32_t g_2[2] = {0UL, 0UL};
        -:   28:static int32_t g_3 = (-6L);
        -:   29:static int32_t g_6 = 0x5A40F2FDL;
        -:   30:static int32_t g_10 = (-3L);
        -:   31:static int32_t *volatile g_9 = &g_10;
        -:   32:static union U1 g_11[1][3] = {{{0x7383CC47L}, {0x7383CC47L}, {0x7383CC47L}}};
        -:   33:static union U3 g_23 = {0x9CF7D164L};
        -:   34:static union U0 g_34 = {6UL};
        -:   35:static union U0 *g_36 = &g_34;
        -:   36:static union U0 **volatile g_35 = &g_36;
        -:   37:
        -:   38:static const int8_t func_1(void);
        -:   39:static union U0 *func_12(int64_t p_13, const int32_t *p_14);
        -:   40:
        1:   41:static const int8_t func_1(void) {
        1:   42:  const uint8_t l_24 = 255UL;
        1:   43:  g_3 |= g_2[0];
       17:   44:  for (g_3 = (-27); (g_3 != 21); g_3 = safe_add_func_uint16_t_u_u(g_3, 3)) {
       16:   45:    int16_t l_25 = 0L;
       16:   46:    int32_t *l_40 = &g_10;
       16:   47:    int32_t **l_39 = &l_40;
       16:   48:    int32_t ***l_38 = &l_39;
       16:   49:    int32_t ****l_37 = &l_38;
      16*:   50:    for (g_6 = 0; (g_6 <= (-1)); g_6 = safe_sub_func_int64_t_s_s(g_6, 9)) {
    #####:   51:      (*g_9) &= g_3;
    #####:   52:      for (g_10 = 0; (g_10 <= 0); g_10 += 1) {
    #####:   53:        const int32_t *l_30 = &g_6;
        -:   54:      }
        -:   55:    }
       16:   56:    (*l_37) = (void *)0;
        -:   57:  }
        1:   58:  return g_3;
        -:   59:}
        -:   60:
    #####:   61:static union U0 *func_12(int64_t p_13, const int32_t *p_14) {
    #####:   62:  int32_t *l_32 = &g_10;
        -:   63:  int32_t **l_31[3];
    #####:   64:  union U0 *l_33 = &g_34;
        -:   65:  int i;
    #####:   66:  for (i = 0; i < 3; i++)
    #####:   67:    l_31[i] = &l_32;
    #####:   68:  g_9 = (void *)0;
    #####:   69:  return l_33;
        -:   70:}
        -:   71:
        1:   72:int main(int argc, char *argv[]) {
        -:   73:  int i, j;
        1:   74:  int print_hash_value = 0;
       1*:   75:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   76:    print_hash_value = 1;
        1:   77:  platform_main_begin();
        1:   78:  crc32_gentab();
        1:   79:  func_1();
        3:   80:  for (i = 0; i < 2; i++) {
        2:   81:    transparent_crc(g_2[i], "g_2[i]", print_hash_value);
        2:   82:    if (print_hash_value)
    #####:   83:      printf("index = [%d]\n", i);
        -:   84:  }
        1:   85:  transparent_crc(g_3, "g_3", print_hash_value);
        1:   86:  transparent_crc(g_6, "g_6", print_hash_value);
        1:   87:  transparent_crc(g_10, "g_10", print_hash_value);
        2:   88:  for (i = 0; i < 1; i++) {
        4:   89:    for (j = 0; j < 3; j++) {
        3:   90:      transparent_crc(g_11[i][j].f0, "g_11[i][j].f0", print_hash_value);
        3:   91:      if (print_hash_value)
    #####:   92:        printf("index = [%d][%d]\n", i, j);
        -:   93:    }
        -:   94:  }
        1:   95:  transparent_crc(g_23.f0, "g_23.f0", print_hash_value);
        1:   96:  transparent_crc(g_34.f0, "g_34.f0", print_hash_value);
        1:   97:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   98:  return 0;
        -:   99:}

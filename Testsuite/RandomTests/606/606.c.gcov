        -:    0:Source:606.c
        -:    0:Graph:606.gcno
        -:    0:Data:606.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_6 = 0x45307222L;
        -:    7:static int32_t g_8 = 1L;
        -:    8:static uint64_t g_23[4] = {0x1FF29ACD409884CBLL, 0x1FF29ACD409884CBLL, 0x1FF29ACD409884CBLL, 0x1FF29ACD409884CBLL};
        -:    9:static uint32_t g_27 = 0xF27A4129L;
        -:   10:static uint32_t g_45 = 9UL;
        -:   11:static int32_t g_59 = (-1L);
        -:   12:static uint32_t g_60 = 4294967292UL;
        -:   13:static const volatile int32_t g_77[2][4] = {{(-1L), (-1L), (-1L), (-1L)}, {(-1L), (-1L), (-1L), (-1L)}};
        -:   14:static const volatile int32_t *g_76[1][1] = {{&g_77[0][3]}};
        -:   15:static const volatile int32_t *volatile *const g_75 = &g_76[0][0];
        -:   16:
        -:   17:static int32_t func_1(void);
        -:   18:static int32_t *func_9(int32_t p_10, int32_t *p_11);
        -:   19:
        1:   20:static int32_t func_1(void) {
        1:   21:  uint8_t l_2 = 255UL;
        1:   22:  int32_t l_26 = 2L;
        1:   23:  uint16_t l_43 = 65535UL;
        1:   24:  int32_t *l_46[4] = {&g_8, &g_8, &g_8, &g_8};
        -:   25:  int i;
        1:   26:  if (l_2) {
       29:   27:    for (l_2 = (-25); (l_2 != 3); ++l_2) {
       28:   28:      int32_t *l_5 = &g_6;
       28:   29:      int32_t *l_7 = &g_8;
       28:   30:      (*l_7) ^= ((*l_5) = 0xAED23B61L);
        -:   31:    }
        -:   32:  } else {
    #####:   33:    uint64_t *l_22 = &g_23[0];
    #####:   34:    uint32_t l_44 = 18446744073709551615UL;
    #####:   35:    int32_t **l_63 = &l_46[2];
    #####:   36:    int8_t l_64 = 0x94L;
    #####:   37:    int32_t l_65 = 0x7DCCC76BL;
    #####:   38:    (*l_63) = func_9((safe_rshift_func_int16_t_s_u((((safe_mod_func_uint32_t_u_u((safe_add_func_int32_t_s_s(g_8, ((safe_rshift_func_uint64_t_u_u(((*l_22) |= 4UL), (((safe_sub_func_int32_t_s_s((((g_27 = ((g_8, 0L) ^ (l_26 = g_6))) & ((safe_mod_func_uint64_t_u_u(g_6, (g_45 = (safe_div_func_uint8_t_u_u((((~(safe_rshift_func_int32_t_s_u((safe_lshift_func_uint64_t_u_u(((safe_div_func_int16_t_s_s(l_2, 0x9D44L)) == ((((safe_div_func_uint8_t_u_u((safe_mul_func_int64_t_s_s(l_43, g_8)), l_44)) > 0x835A7AB5L) ^ 0x29L) != 1L)), 48)), 16))) >= l_44) & l_44), g_6))))) > g_6)) ^ g_8), g_8)) & g_6) && 0L))), l_44))), g_8)) != 0L), l_44), l_44)), l_46[2]);
    #####:   39:    g_8 = (l_65 &= l_64);
        -:   40:  }
        1:   41:  g_6 = (safe_add_func_uint32_t_u_u((~(safe_rshift_func_uint16_t_u_s((safe_lshift_func_int32_t_s_s((safe_lshift_func_uint32_t_u_s(g_23[0], 15)), 0)), ((0xEEL <= 0xBDL), (&l_46[3] == g_75))))), (**g_75)));
        1:   42:  return g_45;
        -:   43:}
        -:   44:
    #####:   45:static int32_t *func_9(int32_t p_10, int32_t *p_11) {
    #####:   46:  int32_t *l_47 = (void *)0;
    #####:   47:  int32_t *l_48 = &g_8;
    #####:   48:  int32_t *l_49 = &g_6;
    #####:   49:  int32_t l_50 = 0x77D900D2L;
    #####:   50:  int32_t *l_51 = &g_6;
    #####:   51:  int32_t *l_52 = &g_6;
    #####:   52:  int32_t *l_53 = &g_6;
    #####:   53:  int32_t *l_54 = &g_8;
    #####:   54:  int32_t l_55 = (-9L);
    #####:   55:  int32_t l_56 = (-1L);
    #####:   56:  int32_t *l_57 = &l_50;
    #####:   57:  int32_t *l_58[3][2][2] = {{{&g_8, (void *)0}, {&g_8, (void *)0}}, {{&g_8, (void *)0}, {&g_8, (void *)0}}, {{&g_8, (void *)0}, {&g_8, (void *)0}}};
        -:   58:  int i, j, k;
    #####:   59:  g_60--;
    #####:   60:  return &g_8;
        -:   61:}
        -:   62:
        1:   63:int main(int argc, char *argv[]) {
        -:   64:  int i, j;
        1:   65:  int print_hash_value = 0;
       1*:   66:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   67:    print_hash_value = 1;
        1:   68:  platform_main_begin();
        1:   69:  crc32_gentab();
        1:   70:  func_1();
        1:   71:  transparent_crc(g_6, "g_6", print_hash_value);
        1:   72:  transparent_crc(g_8, "g_8", print_hash_value);
        5:   73:  for (i = 0; i < 4; i++) {
        4:   74:    transparent_crc(g_23[i], "g_23[i]", print_hash_value);
        4:   75:    if (print_hash_value)
    #####:   76:      printf("index = [%d]\n", i);
        -:   77:  }
        1:   78:  transparent_crc(g_27, "g_27", print_hash_value);
        1:   79:  transparent_crc(g_45, "g_45", print_hash_value);
        1:   80:  transparent_crc(g_59, "g_59", print_hash_value);
        1:   81:  transparent_crc(g_60, "g_60", print_hash_value);
        3:   82:  for (i = 0; i < 2; i++) {
       10:   83:    for (j = 0; j < 4; j++) {
        8:   84:      transparent_crc(g_77[i][j], "g_77[i][j]", print_hash_value);
        8:   85:      if (print_hash_value)
    #####:   86:        printf("index = [%d][%d]\n", i, j);
        -:   87:    }
        -:   88:  }
        1:   89:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   90:  return 0;
        -:   91:}

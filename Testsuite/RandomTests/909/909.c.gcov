        -:    0:Source:909.c
        -:    0:Graph:909.gcno
        -:    0:Data:909.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  volatile int64_t f0;
        -:    8:  const uint64_t f1;
        -:    9:  uint64_t f2;
        -:   10:};
        -:   11:
        -:   12:static volatile int32_t g_2 = 0x39ED080CL;
        -:   13:static volatile int32_t g_3 = 0xCD509978L;
        -:   14:static volatile int32_t g_4[5][2] = {{0x3D42374BL, (-6L)}, {(-6L), 0x3D42374BL}, {(-6L), (-6L)}, {0x3D42374BL, (-6L)}, {(-6L), 0x3D42374BL}};
        -:   15:static volatile int32_t g_5 = 0xCC25BFC8L;
        -:   16:static volatile int32_t g_6 = 1L;
        -:   17:static volatile int32_t g_7[2][3][3] = {{{9L, 9L, 1L}, {0xA7EF5D87L, 0x1B68DEE2L, 0xA7EF5D87L}, {9L, 1L, 1L}}, {{0x16542076L, 0x1B68DEE2L, 0x16542076L}, {9L, 9L, 1L}, {0xA7EF5D87L, 0x1B68DEE2L, 0xA7EF5D87L}}};
        -:   18:static volatile int32_t g_8[2] = {0x69AC54C9L, 0x69AC54C9L};
        -:   19:static volatile int32_t g_9 = 0x8D9DCEE3L;
        -:   20:static volatile int32_t g_10 = 0xF6B3E713L;
        -:   21:static int32_t g_11[3][4][1] = {{{8L}, {0x4EDF0EBFL}, {8L}, {0x4EDF0EBFL}}, {{8L}, {0x4EDF0EBFL}, {8L}, {0x4EDF0EBFL}}, {{8L}, {0x4EDF0EBFL}, {8L}, {0x4EDF0EBFL}}};
        -:   22:static int32_t g_14 = 0xEAF86F25L;
        -:   23:static int32_t g_18 = 0x0C6548AAL;
        -:   24:static volatile int32_t *volatile g_34 = &g_4[4][0];
        -:   25:static uint64_t g_43[2][4] = {{0x0F4AEDF2FFA36FE5LL, 0x0F4AEDF2FFA36FE5LL, 0x0F4AEDF2FFA36FE5LL, 0x0F4AEDF2FFA36FE5LL}, {0x0F4AEDF2FFA36FE5LL, 0x0F4AEDF2FFA36FE5LL, 0x0F4AEDF2FFA36FE5LL, 0x0F4AEDF2FFA36FE5LL}};
        -:   26:static uint64_t g_45[3] = {0x05B7518DB06862EALL, 0x05B7518DB06862EALL, 0x05B7518DB06862EALL};
        -:   27:static uint16_t g_52 = 0x04D9L;
        -:   28:static int16_t g_62[3] = {0L, 0L, 0L};
        -:   29:static struct S0 g_64[2] = {{-1L, 18446744073709551607UL, 0UL}, {-1L, 18446744073709551607UL, 0UL}};
        -:   30:
        -:   31:static uint32_t func_1(void);
        -:   32:static uint64_t func_38(int16_t p_39);
        -:   33:
        1:   34:static uint32_t func_1(void) {
        -:   35:  int32_t *l_37[1];
        1:   36:  uint64_t *l_42 = &g_43[1][3];
        1:   37:  uint64_t *l_44 = &g_45[0];
        1:   38:  uint64_t l_70 = 0UL;
        1:   39:  int16_t *l_71[5][2][1] = {{{&g_62[2]}, {&g_62[2]}}, {{&g_62[1]}, {&g_62[2]}}, {{&g_62[2]}, {&g_62[1]}}, {{&g_62[2]}, {&g_62[2]}}, {{&g_62[1]}, {&g_62[2]}}};
        1:   40:  int32_t l_72 = 0x5C327FA8L;
        -:   41:  int i, j, k;
        2:   42:  for (i = 0; i < 1; i++)
        1:   43:    l_37[i] = (void *)0;
       12:   44:  for (g_11[0][0][0] = 0; (g_11[0][0][0] <= 10); g_11[0][0][0]++) {
       11:   45:    uint32_t l_25 = 0UL;
       11:   46:    uint32_t l_28 = 7UL;
       88:   47:    for (g_14 = 0; (g_14 > (-7)); --g_14) {
       77:   48:      int32_t *l_17 = &g_18;
       77:   49:      int32_t *l_19 = (void *)0;
       77:   50:      int32_t *l_20 = &g_18;
       77:   51:      int32_t *l_21 = (void *)0;
       77:   52:      int32_t *l_22 = &g_18;
       77:   53:      int32_t *l_23 = &g_18;
        -:   54:      int32_t *l_24[2];
        -:   55:      int i;
      231:   56:      for (i = 0; i < 2; i++)
      154:   57:        l_24[i] = &g_18;
       77:   58:      --l_25;
       77:   59:      --l_28;
        -:   60:    }
      319:   61:    for (l_25 = 26; (l_25 != 54); ++l_25) {
      308:   62:      volatile int32_t *l_33 = (void *)0;
      308:   63:      (*g_34) = g_5;
        -:   64:    }
        -:   65:  }
        1:   66:  (*g_34) = ((safe_sub_func_uint16_t_u_u((&g_6 == l_37[0]), g_5)), ((l_72 = (g_62[2] = ((func_38((safe_lshift_func_int32_t_s_s((-1L), (((*l_44) = ((*l_42) = g_6)) | (safe_sub_func_int32_t_s_s(g_18, (!g_11[1][0][0]))))))) != g_14), l_70))) ^ g_64[0].f1));
        1:   67:  return g_7[0][1][0];
        -:   68:}
        -:   69:
        1:   70:static uint64_t func_38(int16_t p_39) {
        1:   71:  int32_t l_69 = (-1L);
        3:   72:  for (p_39 = 1; (p_39 >= 0); p_39 -= 1) {
        2:   73:    int32_t l_67 = 9L;
        2:   74:    int32_t l_68 = 0x2DBC4029L;
        8:   75:    for (g_18 = 2; (g_18 >= 0); g_18 -= 1) {
        6:   76:      uint16_t *l_51 = &g_52;
        6:   77:      int8_t l_59 = 0xFEL;
        6:   78:      int16_t *l_60 = (void *)0;
        6:   79:      int16_t *l_61[5] = {&g_62[1], &g_62[1], &g_62[1], &g_62[1], &g_62[1]};
        6:   80:      int32_t l_63 = 0x955DF93CL;
        -:   81:      int i, j;
       6*:   82:      g_4[(p_39 + 3)][p_39] = (((safe_div_func_uint16_t_u_u(0UL, (--(*l_51)))), (g_11[0][0][0] ^= ((safe_mul_func_uint64_t_u_u(((l_68 = (safe_div_func_uint32_t_u_u((&g_45[g_18] == &g_43[0][0]), (g_4[g_18][p_39], ((g_62[1] |= (((l_59, ((l_63 |= l_59), g_18)) == ((g_64[0], (l_67 <= 0UL)) | p_39)) ^ g_45[2])) || l_63))))) || l_69), l_69)) && 0xF73E8932A224D52ALL))) & l_69);
        6:   83:      for (l_68 = 1; (l_68 >= 0); l_68 -= 1) {
        -:   84:        int i, j, k;
        6:   85:        if (g_7[p_39][l_68][g_18])
        6:   86:          break;
    #####:   87:        return g_4[g_18][p_39];
        -:   88:      }
        -:   89:    }
        -:   90:  }
        1:   91:  return l_69;
        -:   92:}
        -:   93:
        1:   94:int main(int argc, char *argv[]) {
        -:   95:  int i, j, k;
        1:   96:  int print_hash_value = 0;
       1*:   97:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   98:    print_hash_value = 1;
        1:   99:  platform_main_begin();
        1:  100:  crc32_gentab();
        1:  101:  func_1();
        1:  102:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  103:  transparent_crc(g_3, "g_3", print_hash_value);
        6:  104:  for (i = 0; i < 5; i++) {
       15:  105:    for (j = 0; j < 2; j++) {
       10:  106:      transparent_crc(g_4[i][j], "g_4[i][j]", print_hash_value);
       10:  107:      if (print_hash_value)
    #####:  108:        printf("index = [%d][%d]\n", i, j);
        -:  109:    }
        -:  110:  }
        1:  111:  transparent_crc(g_5, "g_5", print_hash_value);
        1:  112:  transparent_crc(g_6, "g_6", print_hash_value);
        3:  113:  for (i = 0; i < 2; i++) {
        8:  114:    for (j = 0; j < 3; j++) {
       24:  115:      for (k = 0; k < 3; k++) {
       18:  116:        transparent_crc(g_7[i][j][k], "g_7[i][j][k]", print_hash_value);
       18:  117:        if (print_hash_value)
    #####:  118:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  119:      }
        -:  120:    }
        -:  121:  }
        3:  122:  for (i = 0; i < 2; i++) {
        2:  123:    transparent_crc(g_8[i], "g_8[i]", print_hash_value);
        2:  124:    if (print_hash_value)
    #####:  125:      printf("index = [%d]\n", i);
        -:  126:  }
        1:  127:  transparent_crc(g_9, "g_9", print_hash_value);
        1:  128:  transparent_crc(g_10, "g_10", print_hash_value);
        4:  129:  for (i = 0; i < 3; i++) {
       15:  130:    for (j = 0; j < 4; j++) {
       24:  131:      for (k = 0; k < 1; k++) {
       12:  132:        transparent_crc(g_11[i][j][k], "g_11[i][j][k]", print_hash_value);
       12:  133:        if (print_hash_value)
    #####:  134:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  135:      }
        -:  136:    }
        -:  137:  }
        1:  138:  transparent_crc(g_14, "g_14", print_hash_value);
        1:  139:  transparent_crc(g_18, "g_18", print_hash_value);
        3:  140:  for (i = 0; i < 2; i++) {
       10:  141:    for (j = 0; j < 4; j++) {
        8:  142:      transparent_crc(g_43[i][j], "g_43[i][j]", print_hash_value);
        8:  143:      if (print_hash_value)
    #####:  144:        printf("index = [%d][%d]\n", i, j);
        -:  145:    }
        -:  146:  }
        4:  147:  for (i = 0; i < 3; i++) {
        3:  148:    transparent_crc(g_45[i], "g_45[i]", print_hash_value);
        3:  149:    if (print_hash_value)
    #####:  150:      printf("index = [%d]\n", i);
        -:  151:  }
        1:  152:  transparent_crc(g_52, "g_52", print_hash_value);
        4:  153:  for (i = 0; i < 3; i++) {
        3:  154:    transparent_crc(g_62[i], "g_62[i]", print_hash_value);
        3:  155:    if (print_hash_value)
    #####:  156:      printf("index = [%d]\n", i);
        -:  157:  }
        3:  158:  for (i = 0; i < 2; i++) {
        2:  159:    transparent_crc(g_64[i].f0, "g_64[i].f0", print_hash_value);
        2:  160:    transparent_crc(g_64[i].f1, "g_64[i].f1", print_hash_value);
        2:  161:    transparent_crc(g_64[i].f2, "g_64[i].f2", print_hash_value);
        2:  162:    if (print_hash_value)
    #####:  163:      printf("index = [%d]\n", i);
        -:  164:  }
        1:  165:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  166:  return 0;
        -:  167:}

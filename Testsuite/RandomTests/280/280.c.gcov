        -:    0:Source:280.c
        -:    0:Graph:280.gcno
        -:    0:Data:280.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U0 {
        -:    7:  const uint16_t f0;
        -:    8:  uint8_t f1;
        -:    9:};
        -:   10:
        -:   11:static volatile union U0 g_3 = {0UL};
        -:   12:static volatile union U0 *volatile g_2 = &g_3;
        -:   13:static int32_t g_6 = 0L;
        -:   14:static int32_t g_8[5] = {0x08872FA4L, 0x08872FA4L, 0x08872FA4L, 0x08872FA4L, 0x08872FA4L};
        -:   15:static int32_t g_18 = 0x5B641B44L;
        -:   16:static volatile int64_t g_19 = 0L;
        -:   17:static volatile uint32_t g_20 = 0x574B6046L;
        -:   18:static uint32_t g_42[5] = {0x5701832DL, 0x5701832DL, 0x5701832DL, 0x5701832DL, 0x5701832DL};
        -:   19:static uint64_t g_43[3] = {6UL, 6UL, 6UL};
        -:   20:static int8_t g_46 = (-8L);
        -:   21:static uint16_t g_63 = 0UL;
        -:   22:static int16_t g_64 = 2L;
        -:   23:static int32_t g_70 = 2L;
        -:   24:static int32_t *volatile g_69[4] = {&g_8[2], &g_8[2], &g_8[2], &g_8[2]};
        -:   25:static union U0 g_86 = {0x6935L};
        -:   26:
        -:   27:static int8_t func_1(void);
        -:   28:static const int64_t func_27(uint32_t p_28, int16_t p_29);
        -:   29:
        1:   30:static int8_t func_1(void) {
        1:   31:  volatile union U0 *volatile *l_4 = &g_2;
        1:   32:  int32_t l_5[1][5] = {{5L, 5L, 5L, 5L, 5L}};
        -:   33:  int i, j;
        1:   34:lbl_7:
        1:   35:  (*l_4) = g_2;
        2:   36:  for (g_6 = 0; (g_6 <= 0); g_6 += 1) {
        1:   37:    int16_t l_15 = (-1L);
        1:   38:    int32_t l_17 = (-1L);
        1:   39:    if (g_6)
    #####:   40:      goto lbl_7;
        2:   41:    for (g_8[2] = 0; (g_8[2] <= 0); g_8[2] += 1) {
        1:   42:      int32_t l_9 = 0x01AAE4B9L;
        1:   43:      int32_t *l_10 = &l_5[g_8[2]][(g_6 + 2)];
        1:   44:      int32_t *l_11 = &l_5[0][1];
        1:   45:      int32_t *l_12 = (void *)0;
        1:   46:      int32_t *l_13 = &l_5[g_8[2]][(g_6 + 2)];
        1:   47:      int32_t *l_14 = (void *)0;
        -:   48:      int32_t *l_16[4];
        -:   49:      uint32_t *l_41[2];
        1:   50:      uint32_t l_47 = 18446744073709551615UL;
        -:   51:      int i, j;
        5:   52:      for (i = 0; i < 4; i++)
        4:   53:        l_16[i] = &l_9;
        3:   54:      for (i = 0; i < 2; i++)
        2:   55:        l_41[i] = &g_42[4];
        1:   56:      g_20--;
       1*:   57:      g_70 ^= (safe_div_func_uint64_t_u_u((safe_sub_func_int64_t_s_s(l_5[g_6][(g_6 + 3)], (-1L))), func_27(((l_5[g_8[2]][(g_8[2] + 1)] > (!(g_3.f0, ((safe_div_func_int32_t_s_s((((*l_13), (safe_lshift_func_int8_t_s_s(((safe_add_func_uint16_t_u_u(((((safe_mod_func_uint16_t_u_u(65535UL, (safe_lshift_func_uint8_t_u_u((((((g_43[1] = (g_42[2] = l_5[0][0])) <= l_17) || (g_46 |= ((safe_lshift_func_uint8_t_u_s(((void *)0 == &g_42[0]), (*l_13))), g_42[3]))) & l_17), 0x07L), 2)))) || (-10L)) && (*l_10)), g_20), 0x52C2L)) > 0L), 0))) ^ (-1L)), g_6)) != g_18)))) <= (*l_11)), l_47)));
        -:   58:    }
        -:   59:  }
        1:   60:  return g_43[1];
        -:   61:}
        -:   62:
        1:   63:static const int64_t func_27(uint32_t p_28, int16_t p_29) {
        1:   64:  uint32_t l_72 = 18446744073709551614UL;
        -:   65:  uint32_t *l_77[3];
        -:   66:  int i;
        4:   67:  for (i = 0; i < 3; i++)
        3:   68:    l_77[i] = &g_42[4];
       1*:   69:  for (g_18 = 0; (g_18 < (-5)); g_18 = safe_sub_func_uint64_t_u_u(g_18, 2)) {
    #####:   70:    uint32_t l_53 = 6UL;
    #####:   71:    uint32_t *l_59 = &g_42[4];
    #####:   72:    uint16_t *l_62 = &g_63;
    #####:   73:    g_64 |= (((+(0xD35DF961DFA23986LL | p_29)) && ((safe_lshift_func_int32_t_s_u((((l_53 < (l_53 || g_8[2])) < ((*l_62) = (((safe_add_func_int16_t_s_s(((0xC30F141BL >= (((~g_20) != 7L), (safe_mod_func_int8_t_s_s((((--(*l_59)) > 0L) && 6UL), p_28)))) < g_18), 0xF6C8L)), 0x63020822C3E505CELL) & p_28))) <= p_28), 22)) ^ g_8[2])) && g_20);
        -:   74:  }
        4:   75:  for (g_18 = 2; (g_18 >= 0); g_18 -= 1) {
        -:   76:    uint32_t *l_65[2];
        3:   77:    int32_t l_66[5][1] = {{0xC0C5DC74L}, {1L}, {0xC0C5DC74L}, {1L}, {0xC0C5DC74L}};
        3:   78:    union U0 *l_85 = &g_86;
        -:   79:    union U0 **l_84[2];
        -:   80:    int i, j;
        9:   81:    for (i = 0; i < 2; i++)
        6:   82:      l_65[i] = (void *)0;
        9:   83:    for (i = 0; i < 2; i++)
        6:   84:      l_84[i] = &l_85;
        3:   85:    if (((--g_42[4]) >= (g_43[g_18], g_43[g_18]))) {
        3:   86:      int32_t *l_71 = &l_66[4][0];
        3:   87:      (*l_71) &= p_29;
        3:   88:      l_66[0][0] = l_72;
        -:   89:    } else {
    #####:   90:      int32_t *l_87 = &l_66[2][0];
    #####:   91:      (*l_87) = (safe_add_func_int32_t_s_s(p_29, (safe_mod_func_int64_t_s_s((((((p_28, (l_77[2] != l_77[1])), &g_42[4]) != (void *)0) ^ (((safe_lshift_func_uint8_t_u_s(g_43[1], 0)) < ((((l_66[4][0] == ((safe_mul_func_int32_t_s_s((safe_div_func_uint32_t_u_u(((void *)0 != l_84[0]), p_29)), p_29)) < g_43[2])) & 1UL) < l_72) && (-1L))), g_86.f0)) != p_29), g_42[4]))));
    #####:   92:      (*l_87) &= 0x6B58F18CL;
        -:   93:    }
        -:   94:  }
        1:   95:  return g_42[4];
        -:   96:}
        -:   97:
        1:   98:int main(int argc, char *argv[]) {
        -:   99:  int i;
        1:  100:  int print_hash_value = 0;
       1*:  101:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  102:    print_hash_value = 1;
        1:  103:  platform_main_begin();
        1:  104:  crc32_gentab();
        1:  105:  func_1();
        1:  106:  transparent_crc(g_3.f0, "g_3.f0", print_hash_value);
        1:  107:  transparent_crc(g_6, "g_6", print_hash_value);
        6:  108:  for (i = 0; i < 5; i++) {
        5:  109:    transparent_crc(g_8[i], "g_8[i]", print_hash_value);
        5:  110:    if (print_hash_value)
    #####:  111:      printf("index = [%d]\n", i);
        -:  112:  }
        1:  113:  transparent_crc(g_18, "g_18", print_hash_value);
        1:  114:  transparent_crc(g_19, "g_19", print_hash_value);
        1:  115:  transparent_crc(g_20, "g_20", print_hash_value);
        6:  116:  for (i = 0; i < 5; i++) {
        5:  117:    transparent_crc(g_42[i], "g_42[i]", print_hash_value);
        5:  118:    if (print_hash_value)
    #####:  119:      printf("index = [%d]\n", i);
        -:  120:  }
        4:  121:  for (i = 0; i < 3; i++) {
        3:  122:    transparent_crc(g_43[i], "g_43[i]", print_hash_value);
        3:  123:    if (print_hash_value)
    #####:  124:      printf("index = [%d]\n", i);
        -:  125:  }
        1:  126:  transparent_crc(g_46, "g_46", print_hash_value);
        1:  127:  transparent_crc(g_63, "g_63", print_hash_value);
        1:  128:  transparent_crc(g_64, "g_64", print_hash_value);
        1:  129:  transparent_crc(g_70, "g_70", print_hash_value);
        1:  130:  transparent_crc(g_86.f0, "g_86.f0", print_hash_value);
        1:  131:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  132:  return 0;
        -:  133:}

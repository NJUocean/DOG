        -:    0:Source:232.c
        -:    0:Graph:232.gcno
        -:    0:Data:232.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  volatile unsigned f0 : 15;
        -:    8:  unsigned f1 : 8;
        -:    9:  unsigned f2 : 10;
        -:   10:  const unsigned f3 : 14;
        -:   11:  unsigned f4 : 5;
        -:   12:};
        -:   13:
        -:   14:static int32_t g_2 = 0x3152C58FL;
        -:   15:static int16_t g_34 = 0L;
        -:   16:static int8_t g_36 = 0xEDL;
        -:   17:static int8_t g_39 = 0xB6L;
        -:   18:static uint32_t g_42[3] = {3UL, 3UL, 3UL};
        -:   19:static int8_t g_43 = (-6L);
        -:   20:static struct S0 g_45 = {24, 6, 25, 69, 2};
        -:   21:static int32_t g_50[4] = {0xE9D0615AL, 0xE9D0615AL, 0xE9D0615AL, 0xE9D0615AL};
        -:   22:static uint8_t g_63 = 0UL;
        -:   23:static uint64_t g_66 = 0UL;
        -:   24:static const uint32_t g_76 = 4294967286UL;
        -:   25:static int32_t g_83 = 0x5E3094FCL;
        -:   26:
        -:   27:static uint8_t func_1(void);
        -:   28:static int64_t func_7(uint16_t p_8, int32_t p_9, uint64_t p_10);
        -:   29:
        1:   30:static uint8_t func_1(void) {
        -:   31:  uint32_t l_5[2][3];
        1:   32:  uint32_t l_37 = 4294967295UL;
        1:   33:  struct S0 *l_71 = &g_45;
        1:   34:  uint64_t l_80 = 1UL;
        -:   35:  int i, j;
        3:   36:  for (i = 0; i < 2; i++) {
        8:   37:    for (j = 0; j < 3; j++)
        6:   38:      l_5[i][j] = 0x8C7B5C6EL;
        -:   39:  }
       1*:   40:  for (g_2 = (-3); (g_2 < 21); g_2++) {
        1:   41:    uint32_t l_11 = 18446744073709551615UL;
        1:   42:    int8_t *l_35 = &g_36;
        1:   43:    int8_t *l_38 = &g_39;
        1:   44:    uint32_t *l_40 = &l_37;
        1:   45:    uint32_t *l_41 = &g_42[1];
        1:   46:    int32_t *l_48 = (void *)0;
        1:   47:    int32_t *l_49[3][2] = {{&g_50[1], &g_50[1]}, {&g_50[1], &g_50[1]}, {&g_50[1], &g_50[1]}};
        -:   48:    int i, j;
       1*:   49:    g_50[1] |= (((l_5[0][2] < 0x9BD697E7L) >= (!func_7(((l_11, (safe_mul_func_uint16_t_u_u((safe_lshift_func_int64_t_s_u((safe_mod_func_int64_t_s_s(0x7008B15E314A5EA9LL, g_2)), 41)), ((safe_add_func_uint8_t_u_u(g_2, ((g_43 ^= (safe_add_func_int32_t_s_s(((safe_rshift_func_uint32_t_u_u(((*l_41) ^= ((*l_40) = ((((*l_38) &= (((safe_mod_func_int8_t_s_s((safe_div_func_int8_t_s_s(((*l_35) = (l_11 ^ ((((g_2, ((safe_sub_func_int64_t_s_s((safe_mod_func_int8_t_s_s((g_34 = l_11), (-3L))), g_2)) <= 18446744073709551610UL)) | g_2), g_2) <= g_2))), g_2)), 0xCCL)), l_37) | g_2)) & g_2) != 0x8481L))), 29)) >= 0L), 0xBD2E84CBL))) && l_11))) == 0x2CL)))) & l_11), l_11, g_2))), (-1L));
       1*:   50:    for (l_11 = 0; (l_11 <= 3); l_11 += 1) {
        1:   51:      for (g_39 = 0; (g_39 <= 1); g_39 += 1) {
        -:   52:        int i;
        1:   53:        g_50[(g_39 + 2)] = ((void *)0 == &g_42[g_39]);
        1:   54:        return g_50[(g_39 + 2)];
        -:   55:      }
        -:   56:    }
        -:   57:  }
    #####:   58:  for (l_37 = 0; (l_37 <= 2); l_37 += 1) {
    #####:   59:    int32_t *l_57 = &g_50[1];
    #####:   60:    struct S0 *l_60 = (void *)0;
    #####:   61:    int8_t l_61[3][5][4] = {{{(-6L), 0x42L, 0xAAL, 0x42L}, {0x16L, 0L, (-4L), 0xAAL}, {0x42L, 0L, 0L, 0x42L}, {0L, 0x42L, 0x16L, (-6L)}, {0L, 0x16L, 0L, (-4L)}}, {{0x42L, (-6L), (-4L), (-4L)}, {0x16L, 0x16L, 0xAAL, (-6L)}, {(-6L), 0x42L, 0xAAL, 0x42L}, {0x16L, (-6L), 0xAAL, 0x16L}, {0L, (-6L), (-6L), 0L}}, {{(-6L), 0L, 0L, (-4L)}, {(-6L), 0L, (-6L), 0xAAL}, {0L, (-4L), 0xAAL, 0xAAL}, {0L, 0L, 0x16L, (-4L)}, {(-4L), 0L, 0x16L, 0L}}};
    #####:   62:    uint8_t *l_62 = &g_63;
    #####:   63:    const int16_t l_64 = 0xEDB0L;
        -:   64:    int i, j, k;
    #####:   65:    if ((((g_42[l_37] | ((g_42[l_37] > ((safe_add_func_int64_t_s_s((safe_unary_minus_func_int64_t_s(g_34)), (g_42[l_37] | (1L & ((!(((((*l_57) = (safe_lshift_func_int16_t_s_s(0xBD42L, 9))) >= g_2) >= (((*l_62) = (((l_5[1][1] && (safe_div_func_int16_t_s_s(((l_60 != l_60) | 0x02D9L), l_61[1][2][1]))) != g_42[2]), g_39)) > l_5[0][2])), g_45.f4)), l_64))))) >= g_42[1])), g_39)) != l_5[0][1]) <= 0x22E233AD2D1E5678LL)) {
    #####:   66:      uint64_t *l_65[5] = {&g_66, &g_66, &g_66, &g_66, &g_66};
    #####:   67:      const uint32_t *l_75 = &g_76;
    #####:   68:      const uint32_t **l_74 = &l_75;
    #####:   69:      int8_t *l_77[3][5][2] = {{{&l_61[1][2][1], (void *)0}, {&l_61[1][2][1], &g_43}, {&l_61[1][2][1], (void *)0}, {&l_61[1][2][1], (void *)0}, {(void *)0, &g_36}}, {{(void *)0, (void *)0}, {(void *)0, &g_43}, {&g_43, &l_61[1][2][1]}, {&g_36, &l_61[1][2][1]}, {&g_43, &g_43}}, {{(void *)0, (void *)0}, {(void *)0, &g_36}, {(void *)0, (void *)0}, {&l_61[1][2][1], (void *)0}, {&l_61[1][2][1], &g_43}}};
        -:   70:      int i, j, k;
    #####:   71:      if (((g_66 = 18446744073709551615UL) ^ (0x186757AC12ABB1EFLL == ((g_36 = ((((*l_62) = (7UL >= (safe_mul_func_int64_t_s_s((0x68CAL > (safe_rshift_func_int64_t_s_s((((l_71 == (g_45.f0, &g_45)), (((safe_rshift_func_uint8_t_u_s((&l_5[1][0] != ((*l_74) = &g_42[1])), (*l_57))) && 0x5C2614ACL) | 1UL)) | l_5[0][2]), 1))), l_5[0][2])))) ^ 0x92L) <= (*l_57))) >= 8L)))) {
    #####:   72:        return l_37;
        -:   73:      } else {
        -:   74:        return g_43;
        -:   75:      }
        -:   76:    } else {
        -:   77:      uint32_t l_82 = 3UL;
        -:   78:      l_82 |= ((*l_57) = (safe_sub_func_uint64_t_u_u((l_80 <= (!0UL)), g_50[1])));
        -:   79:    }
        -:   80:    return g_83;
        -:   81:  }
    #####:   82:  return l_5[0][2];
        -:   83:}
        -:   84:
        1:   85:static int64_t func_7(uint16_t p_8, int32_t p_9, uint64_t p_10) {
        1:   86:  const struct S0 *l_44 = &g_45;
        1:   87:  const struct S0 **l_46 = &l_44;
        1:   88:  int32_t l_47 = 1L;
        1:   89:  (*l_46) = l_44;
        1:   90:  return l_47;
        -:   91:}
        -:   92:
        1:   93:int main(int argc, char *argv[]) {
        -:   94:  int i;
        1:   95:  int print_hash_value = 0;
       1*:   96:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   97:    print_hash_value = 1;
        1:   98:  platform_main_begin();
        1:   99:  crc32_gentab();
        1:  100:  func_1();
        1:  101:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  102:  transparent_crc(g_34, "g_34", print_hash_value);
        1:  103:  transparent_crc(g_36, "g_36", print_hash_value);
        1:  104:  transparent_crc(g_39, "g_39", print_hash_value);
        4:  105:  for (i = 0; i < 3; i++) {
        3:  106:    transparent_crc(g_42[i], "g_42[i]", print_hash_value);
        3:  107:    if (print_hash_value)
    #####:  108:      printf("index = [%d]\n", i);
        -:  109:  }
        1:  110:  transparent_crc(g_43, "g_43", print_hash_value);
        1:  111:  transparent_crc(g_45.f0, "g_45.f0", print_hash_value);
        1:  112:  transparent_crc(g_45.f1, "g_45.f1", print_hash_value);
        1:  113:  transparent_crc(g_45.f2, "g_45.f2", print_hash_value);
        1:  114:  transparent_crc(g_45.f3, "g_45.f3", print_hash_value);
        1:  115:  transparent_crc(g_45.f4, "g_45.f4", print_hash_value);
        5:  116:  for (i = 0; i < 4; i++) {
        4:  117:    transparent_crc(g_50[i], "g_50[i]", print_hash_value);
        4:  118:    if (print_hash_value)
    #####:  119:      printf("index = [%d]\n", i);
        -:  120:  }
        1:  121:  transparent_crc(g_63, "g_63", print_hash_value);
        1:  122:  transparent_crc(g_66, "g_66", print_hash_value);
        1:  123:  transparent_crc(g_76, "g_76", print_hash_value);
        1:  124:  transparent_crc(g_83, "g_83", print_hash_value);
        1:  125:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  126:  return 0;
        -:  127:}

        -:    0:Source:158.c
        -:    0:Graph:158.gcno
        -:    0:Data:158.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  uint32_t f0;
        -:   10:  signed f1 : 31;
        -:   11:};
        -:   12:#pragma pack(pop)
        -:   13:
        -:   14:static int64_t g_6 = (-1L);
        -:   15:static const volatile struct S0 g_10 = {0x26EC17E5L, -34956};
        -:   16:static int32_t g_18 = 0x67457993L;
        -:   17:static int16_t g_19 = (-5L);
        -:   18:static uint8_t g_25 = 0x1FL;
        -:   19:static int32_t g_28 = (-4L);
        -:   20:static uint16_t g_31 = 1UL;
        -:   21:static volatile int8_t g_53 = 0xB0L;
        -:   22:static volatile uint16_t g_54 = 0x888AL;
        -:   23:static int32_t *g_63 = &g_28;
        -:   24:static int32_t **g_62 = &g_63;
        -:   25:static int32_t **g_67 = &g_63;
        -:   26:static int32_t ***g_66 = &g_67;
        -:   27:static uint32_t g_70 = 4294967295UL;
        -:   28:static volatile uint32_t g_93 = 0xCD183246L;
        -:   29:static struct S0 g_110[5][3] = {{{0x6A96B581L, 6968}, {0x6A96B581L, 6968}, {0x6A96B581L, 6968}}, {{0xFF43755EL, -41188}, {0x7FA4877AL, -35874}, {0xFF43755EL, -41188}}, {{0x6A96B581L, 6968}, {0x6A96B581L, 6968}, {0x6A96B581L, 6968}}, {{0xFF43755EL, -41188}, {0x7FA4877AL, -35874}, {0xFF43755EL, -41188}}, {{0x6A96B581L, 6968}, {0x6A96B581L, 6968}, {0x6A96B581L, 6968}}};
        -:   30:static struct S0 *const volatile g_124[5] = {&g_110[0][0], &g_110[0][0], &g_110[0][0], &g_110[0][0], &g_110[0][0]};
        -:   31:static struct S0 *volatile g_125 = &g_110[4][1];
        -:   32:static uint64_t g_147[2] = {1UL, 1UL};
        -:   33:
        -:   34:static uint32_t func_1(void);
        -:   35:static int32_t func_2(int64_t p_3, int8_t p_4, uint32_t p_5);
        -:   36:
        1:   37:static uint32_t func_1(void) {
        1:   38:  uint16_t l_9 = 0x3281L;
        1:   39:  int32_t *l_17 = &g_18;
        1:   40:  int32_t **l_65 = (void *)0;
        1:   41:  uint32_t l_78[5][5] = {{18446744073709551615UL, 0x56C6C4C5L, 0x56C6C4C5L, 18446744073709551615UL, 0xB50B9A65L}, {1UL, 5UL, 5UL, 1UL, 18446744073709551615UL}, {18446744073709551615UL, 0x56C6C4C5L, 0x56C6C4C5L, 18446744073709551615UL, 0xB50B9A65L}, {1UL, 5UL, 5UL, 1UL, 18446744073709551615UL}, {18446744073709551615UL, 0x56C6C4C5L, 0x56C6C4C5L, 18446744073709551615UL, 0x78ED0E11L}};
        1:   42:  int32_t l_87 = 0xDF6318FFL;
        1:   43:  int32_t l_88 = 0x989FA4E9L;
        1:   44:  int32_t l_89 = 0x6F198232L;
        1:   45:  int32_t l_90 = 0x8307115AL;
        -:   46:  int32_t l_92[3];
        1:   47:  int64_t l_156 = 0L;
        1:   48:  int32_t l_158 = 0xFBD2CEF0L;
        -:   49:  int i, j;
        4:   50:  for (i = 0; i < 3; i++)
        3:   51:    l_92[i] = 0L;
        1:   52:  if (func_2((((g_6 & (g_6, g_6)) >= ((l_9 != (g_6, (g_10, 0UL))) ^ ((*l_17) = (safe_sub_func_uint32_t_u_u(((((safe_add_func_int64_t_s_s(l_9, (safe_add_func_int16_t_s_s(1L, l_9)))) < 0x3AL) != g_6), g_6), l_9))))) & g_6), g_19, g_19)) {
        1:   53:    int32_t l_59 = 0x1F15F1D3L;
        1:   54:    int32_t *l_61 = &l_59;
        1:   55:    int32_t **l_60 = &l_61;
        1:   56:    int32_t ***l_64 = &g_62;
        1:   57:    int32_t ****l_68 = &g_66;
        -:   58:    uint32_t *l_69[1];
        -:   59:    int32_t l_91[3];
        1:   60:    int32_t *l_117 = &l_91[1];
        -:   61:    int i;
        2:   62:    for (i = 0; i < 1; i++)
        1:   63:      l_69[i] = &g_70;
        4:   64:    for (i = 0; i < 3; i++)
        3:   65:      l_91[i] = 0xF51BCBD0L;
       1*:   66:    if ((safe_rshift_func_int32_t_s_s((((*l_17) = (g_10.f1 && l_59)) == (&g_28 == ((*l_60) = l_17))), (1L && ((((g_70 = (((*l_64) = g_62) == (((l_65 != l_60), (((*l_68) = g_66) == &g_67)), (*g_66)))) <= (*g_63)) > g_28) != g_6))))) {
    #####:   67:      int64_t l_79 = 0x6699CBFF9F6C9230LL;
    #####:   68:      int32_t *l_80 = &l_59;
    #####:   69:      int32_t *l_81 = &g_18;
    #####:   70:      int32_t *l_82 = &l_59;
    #####:   71:      int32_t *l_83 = &g_18;
    #####:   72:      int32_t *l_84 = &g_18;
    #####:   73:      int32_t *l_85 = &l_59;
    #####:   74:      int32_t *l_86[4] = {&l_59, &l_59, &l_59, &l_59};
        -:   75:      int i;
    #####:   76:      for (g_18 = 0; (g_18 >= 0); g_18 -= 1) {
    #####:   77:        uint32_t l_73 = 0xB35A07F5L;
    #####:   78:        (***g_66) ^= (((*g_66) != ((*l_64) = (*g_66))) == (((safe_mod_func_uint8_t_u_u(l_73, (safe_sub_func_int16_t_s_s((4L == ((0L && (**l_60)) == ((*l_17), ((((((((((*l_61), l_73) > g_25) | g_10.f0) >= 0x33F6L) & 5L) && 0xA8624A7E6D0914BDLL) && g_19), l_78[1][4]) != 0x67AFL)))), l_79)))) & (*l_17)) ^ l_79));
        -:   79:      }
    #####:   80:      g_93++;
        -:   81:    } else {
        1:   82:      struct S0 l_96 = {6UL, -21060};
        1:   83:      if ((((*g_67) = (void *)0) == ((*l_60) = &l_88))) {
    #####:   84:        struct S0 *l_97 = &l_96;
    #####:   85:        (*l_97) = l_96;
        -:   86:      } else {
        1:   87:        const int8_t l_98 = 0x5AL;
        1:   88:        const uint32_t *l_103 = (void *)0;
        1:   89:        struct S0 l_114 = {1UL, 10107};
        -:   90:        uint16_t *l_115[2][1];
        1:   91:        int32_t l_116 = 0x7104891CL;
        -:   92:        int i, j;
        3:   93:        for (i = 0; i < 2; i++) {
        4:   94:          for (j = 0; j < 1; j++)
        2:   95:            l_115[i][j] = &l_9;
        -:   96:        }
       1*:   97:        (*l_61) = (((((l_98 | (((safe_rshift_func_int64_t_s_s(((safe_lshift_func_uint16_t_u_u((l_103 != &g_93), ((l_116 &= ((safe_mod_func_uint64_t_u_u(g_93, (safe_rshift_func_uint32_t_u_u(((((safe_div_func_uint8_t_u_u((g_110[0][0], 1UL), g_31)) ^ 0xAA811637L) ^ (safe_sub_func_uint8_t_u_u((safe_unary_minus_func_uint64_t_u((((l_114, g_25) != 0x5FE46E9995DD1021LL), l_96.f1))), 249UL))), g_28), g_6)))) == g_31)) != 0x94F6L))) < g_110[0][0].f0), g_70)), g_70), (*l_17))), l_117) == (*g_67)) && 0x522D6D4FL) == 4UL);
        -:   98:      }
        -:   99:    }
        -:  100:  } else {
    #####:  101:    int8_t l_118 = (-1L);
    #####:  102:    uint8_t *const l_159 = &g_25;
    #####:  103:    int32_t l_161 = 0L;
        -:  104:    if ((0x5A1EL | l_118)) {
    #####:  105:      for (g_25 = (-5); (g_25 == 52); ++g_25) {
    #####:  106:        return (*l_17);
        -:  107:      }
    #####:  108:      (*g_62) = (*g_67);
        -:  109:    } else {
        -:  110:      struct S0 *l_122 = &g_110[0][0];
        -:  111:      struct S0 **l_121 = &l_122;
        -:  112:      uint16_t l_153 = 0xFD6FL;
        -:  113:      int32_t *l_155 = (void *)0;
        -:  114:      uint32_t l_157 = 0x105832D0L;
        -:  115:      (*l_121) = (void *)0;
        -:  116:      if (l_118) {
        -:  117:        struct S0 l_123 = {0x8C23FB85L, -13973};
        -:  118:        (*g_125) = (l_123 = g_110[3][0]);
        -:  119:        (*g_67) = (void *)0;
        -:  120:      } else {
        -:  121:        uint8_t *l_141 = &g_25;
        -:  122:        uint64_t *l_145 = (void *)0;
        -:  123:        uint64_t *l_146 = &g_147[0];
        -:  124:        (***g_66) = (safe_add_func_int16_t_s_s((safe_add_func_uint16_t_u_u((safe_sub_func_uint8_t_u_u((0x11L != (safe_mod_func_int64_t_s_s(((g_110[0][0].f0 <= ((safe_mul_func_uint16_t_u_u((safe_lshift_func_int8_t_s_s((0xC9D1L != ((safe_mod_func_uint64_t_u_u((&g_110[0][0] == &g_110[2][1]), g_110[0][0].f1)) == ((safe_unary_minus_func_uint8_t_u((((*l_141) = 255UL), (safe_mul_func_int32_t_s_s(((!((*l_146)--)), (safe_mul_func_int64_t_s_s(((((((safe_unary_minus_func_int16_t_s(l_153)) == ((!(((*g_62) == l_155), g_70)) != (***g_66))) ^ l_156), g_31), g_6) >= l_118), 0xBEF20378A6B184C1LL))), 0xA41A2CE7L))))) && 0x36F0L))), 2)), g_110[0][0].f0)) | g_28)), l_157), 0xB2CD532626EB52EELL))), 0x1CL)), g_31)), (*l_17)));
        -:  125:        (*g_67) = (*g_67);
        -:  126:      }
        -:  127:    }
    #####:  128:    if ((((l_118 == (l_158, g_31)), (void *)0) == l_159)) {
    #####:  129:      int32_t l_160 = 0xB6F7AEC4L;
    #####:  130:      for (g_31 = 0; (g_31 <= 2); g_31 += 1) {
    #####:  131:        uint16_t l_162 = 0x646BL;
        -:  132:        int i;
    #####:  133:        (*g_62) = (*g_67);
    #####:  134:        ++l_162;
        -:  135:      }
        -:  136:    } else {
    #####:  137:      return l_161;
        -:  138:    }
        -:  139:  }
        1:  140:  return g_110[0][0].f0;
        -:  141:}
        -:  142:
        1:  143:static int32_t func_2(int64_t p_3, int8_t p_4, uint32_t p_5) {
        1:  144:  int32_t *l_47 = &g_18;
        1:  145:  int32_t *l_50 = &g_18;
        1:  146:  int32_t *l_51 = &g_18;
        -:  147:  int32_t *l_52[1][5];
        -:  148:  int i, j;
        2:  149:  for (i = 0; i < 1; i++) {
        6:  150:    for (j = 0; j < 5; j++)
        5:  151:      l_52[i][j] = &g_18;
        -:  152:  }
        5:  153:  for (g_18 = (-5); (g_18 < 23); g_18 = safe_add_func_int16_t_s_s(g_18, 9)) {
        4:  154:    uint16_t l_38 = 0x11F6L;
        -:  155:    int8_t l_49[1];
        -:  156:    int i;
        8:  157:    for (i = 0; i < 1; i++)
        4:  158:      l_49[i] = 0x79L;
       4*:  159:    for (p_3 = (-2); (p_3 == 15); ++p_3) {
    #####:  160:      uint32_t l_24 = 0x0B0881DDL;
    #####:  161:      int32_t l_26 = 0x37FC0336L;
    #####:  162:      int32_t *l_27 = &g_28;
        -:  163:      uint16_t *l_30[2];
    #####:  164:      int32_t *const l_48 = &l_26;
        -:  165:      int i;
    #####:  166:      for (i = 0; i < 2; i++)
    #####:  167:        l_30[i] = &g_31;
    #####:  168:      (*l_27) |= (p_3, (l_26 = ((0xF7BDD48407374FD5LL != (g_6 = l_24)) < g_25)));
    #####:  169:      (*l_48) = (((safe_unary_minus_func_uint16_t_u(((*l_27) = (p_5 || g_10.f0)))) > 0x3EL) | (((safe_sub_func_int64_t_s_s((((((safe_mod_func_uint8_t_u_u((((safe_sub_func_uint8_t_u_u(l_38, (safe_mod_func_int64_t_s_s((p_5 == g_25), (safe_sub_func_int16_t_s_s((safe_mod_func_uint64_t_u_u(0x95CC9E520C3D8D58LL, p_5)), (safe_sub_func_uint16_t_u_u((l_47 != l_48), 0xC114L)))))))) >= p_4) >= g_19), p_5)) || p_3) != p_5) && p_3) > 1UL), l_49[0])) & g_31) && p_3));
        -:  170:    }
        -:  171:  }
        1:  172:  --g_54;
        1:  173:  return g_25;
        -:  174:}
        -:  175:
        1:  176:int main(int argc, char *argv[]) {
        -:  177:  int i, j;
        1:  178:  int print_hash_value = 0;
       1*:  179:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  180:    print_hash_value = 1;
        1:  181:  platform_main_begin();
        1:  182:  crc32_gentab();
        1:  183:  func_1();
        1:  184:  transparent_crc(g_6, "g_6", print_hash_value);
        1:  185:  transparent_crc(g_10.f0, "g_10.f0", print_hash_value);
        1:  186:  transparent_crc(g_10.f1, "g_10.f1", print_hash_value);
        1:  187:  transparent_crc(g_18, "g_18", print_hash_value);
        1:  188:  transparent_crc(g_19, "g_19", print_hash_value);
        1:  189:  transparent_crc(g_25, "g_25", print_hash_value);
        1:  190:  transparent_crc(g_28, "g_28", print_hash_value);
        1:  191:  transparent_crc(g_31, "g_31", print_hash_value);
        1:  192:  transparent_crc(g_53, "g_53", print_hash_value);
        1:  193:  transparent_crc(g_54, "g_54", print_hash_value);
        1:  194:  transparent_crc(g_70, "g_70", print_hash_value);
        1:  195:  transparent_crc(g_93, "g_93", print_hash_value);
        6:  196:  for (i = 0; i < 5; i++) {
       20:  197:    for (j = 0; j < 3; j++) {
       15:  198:      transparent_crc(g_110[i][j].f0, "g_110[i][j].f0", print_hash_value);
       15:  199:      transparent_crc(g_110[i][j].f1, "g_110[i][j].f1", print_hash_value);
       15:  200:      if (print_hash_value)
    #####:  201:        printf("index = [%d][%d]\n", i, j);
        -:  202:    }
        -:  203:  }
        3:  204:  for (i = 0; i < 2; i++) {
        2:  205:    transparent_crc(g_147[i], "g_147[i]", print_hash_value);
        2:  206:    if (print_hash_value)
    #####:  207:      printf("index = [%d]\n", i);
        -:  208:  }
        1:  209:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  210:  return 0;
        -:  211:}

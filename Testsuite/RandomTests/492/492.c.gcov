        -:    0:Source:492.c
        -:    0:Graph:492.gcno
        -:    0:Data:492.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U0 {
        -:    7:  int32_t f0;
        -:    8:  signed f1 : 5;
        -:    9:  uint64_t f2;
        -:   10:};
        -:   11:
        -:   12:static int8_t g_10 = 0L;
        -:   13:static int32_t g_23 = 0xE3CB5AF9L;
        -:   14:static int32_t *volatile g_22 = &g_23;
        -:   15:static uint32_t g_42 = 0x724D257EL;
        -:   16:static int32_t g_44 = 0x24A04C7CL;
        -:   17:static uint8_t g_46 = 8UL;
        -:   18:static uint16_t g_61[4][2][1] = {{{0x47EFL}, {7UL}}, {{7UL}, {0x47EFL}}, {{7UL}, {7UL}}, {{0x47EFL}, {7UL}}};
        -:   19:static int64_t g_65[4][4][3] = {{{0x9021B0A093F77403LL, 0x9021B0A093F77403LL, 0x9021B0A093F77403LL}, {1L, (-2L), 1L}, {0x9021B0A093F77403LL, 0x9021B0A093F77403LL, 0x9021B0A093F77403LL}, {1L, (-2L), 1L}}, {{0x9021B0A093F77403LL, 0x9021B0A093F77403LL, 0x9021B0A093F77403LL}, {1L, (-2L), 1L}, {0x9021B0A093F77403LL, 0x9021B0A093F77403LL, 0x9021B0A093F77403LL}, {1L, (-2L), 1L}}, {{0x9021B0A093F77403LL, 0x9021B0A093F77403LL, 0x9021B0A093F77403LL}, {1L, (-2L), 1L}, {0x9021B0A093F77403LL, 0x9021B0A093F77403LL, 0x9021B0A093F77403LL}, {1L, (-2L), 1L}}, {{0x9021B0A093F77403LL, 0x9021B0A093F77403LL, 0x9021B0A093F77403LL}, {1L, (-2L), 1L}, {0x9021B0A093F77403LL, 0x9021B0A093F77403LL, 0x9021B0A093F77403LL}, {1L, (-2L), 1L}}};
        -:   20:static int16_t g_81 = 0L;
        -:   21:static int32_t g_83 = (-10L);
        -:   22:static volatile uint16_t g_85 = 0UL;
        -:   23:static int32_t *g_90 = &g_83;
        -:   24:static uint16_t g_113 = 8UL;
        -:   25:static int64_t g_115 = (-1L);
        -:   26:static int32_t g_116 = (-2L);
        -:   27:
        -:   28:static int32_t func_1(void);
        -:   29:static int64_t func_6(int32_t p_7, uint32_t p_8, int32_t p_9);
        -:   30:
        1:   31:static int32_t func_1(void) {
        1:   32:  union U0 l_11 = {0xCC2FDCBAL};
        1:   33:  int16_t l_29 = (-8L);
        1:   34:  int32_t *l_33 = &l_11.f0;
        1:   35:  int32_t l_45 = 0L;
        1:   36:  int8_t l_87 = 0x27L;
        1:   37:  if ((((safe_rshift_func_uint16_t_u_u(((safe_lshift_func_uint8_t_u_s(((func_6(g_10, (l_11, (safe_mod_func_int8_t_s_s(g_10, ((safe_lshift_func_uint64_t_u_u((~(~((safe_add_func_uint32_t_u_u(4294967294UL, l_11.f0)) != (safe_add_func_int8_t_s_s((g_10, (l_11.f0 <= l_11.f0)), l_11.f0))))), 63)) & g_10)))), g_10) | g_10) <= (-7L)), 1)) < 0x23EDB395L), 3)) | l_11.f0) | 0UL)) {
        1:   38:    int16_t l_32 = 0xC14CL;
       16:   39:    for (l_11.f0 = 0; (l_11.f0 != 15); l_11.f0++) {
       15:   40:      uint64_t l_34 = 0x638325423B19D88CLL;
       15:   41:      if (((((((safe_mod_func_uint8_t_u_u(l_29, g_23)) > g_10) != (((*g_22), (safe_lshift_func_uint16_t_u_s(g_23, 12))) >= (l_32, ((&g_23 == (void *)0) < ((void *)0 != l_33))))) >= l_34) >= 0x91L) && g_10)) {
        -:   42:        uint32_t l_35 = 0x3988F15EL;
        -:   43:        if (l_35)
        -:   44:          break;
        -:   45:        if ((*g_22))
        -:   46:          break;
        -:   47:      } else {
       15:   48:        uint8_t l_40 = 1UL;
        -:   49:        uint32_t *l_41[2];
       15:   50:        int32_t *l_43[3][5][5] = {{{&g_44, (void *)0, &l_11.f0, (void *)0, &g_44}, {&g_44, &g_44, &g_44, (void *)0, &l_11.f0}, {&g_44, (void *)0, &g_44, &g_44, &g_44}, {(void *)0, &g_44, &l_11.f0, (void *)0, &g_44}, {&l_11.f0, (void *)0, &g_44, (void *)0, &l_11.f0}}, {{(void *)0, (void *)0, &l_11.f0, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, (void *)0, &l_11.f0, (void *)0, &g_44}, {&g_44, &g_44, &g_44, (void *)0, &l_11.f0}, {&g_44, (void *)0, &g_44, &g_44, &g_44}}, {{(void *)0, &g_44, &l_11.f0, (void *)0, &g_44}, {&l_11.f0, (void *)0, &g_44, (void *)0, &l_11.f0}, {(void *)0, (void *)0, &l_11.f0, &g_44, &g_44}, {&g_44, &g_44, &g_44, &g_44, &g_44}, {&g_44, (void *)0, &l_11.f0, (void *)0, &g_44}}};
        -:   51:        int i, j, k;
       45:   52:        for (i = 0; i < 2; i++)
       30:   53:          l_41[i] = &g_42;
      15*:   54:        l_45 = (safe_div_func_int64_t_s_s((((g_42 = (((safe_add_func_uint32_t_u_u(0UL, (((g_23 < l_40) || ((*g_22) = 0xA7FAD540L)) && (0xBFF7L != ((*g_22) <= (*l_33)))))), (*g_22)), ((g_10 || l_34) == 5UL))) <= 0xFF9046E0L) || g_23), g_10));
        -:   55:      }
       15:   56:      g_46 &= (*l_33);
        -:   57:    }
        -:   58:  } else {
        -:   59:    int32_t l_76[3];
    #####:   60:    int32_t l_88 = 0x7447E389L;
    #####:   61:    int32_t l_96 = 0L;
        -:   62:    int32_t l_97[1];
        -:   63:    int i;
    #####:   64:    for (i = 0; i < 3; i++)
    #####:   65:      l_76[i] = 0x46FFD3C4L;
    #####:   66:    for (i = 0; i < 1; i++)
    #####:   67:      l_97[i] = 0xF1940C85L;
    #####:   68:    for (l_45 = 0; (l_45 > (-5)); --l_45) {
    #####:   69:      uint16_t *l_59 = (void *)0;
    #####:   70:      uint16_t *l_60 = &g_61[2][1][0];
    #####:   71:      int64_t *l_64 = &g_65[0][0][2];
        -:   72:      const int32_t l_77[2] = {0x4F21D6FFL, 0x4F21D6FFL};
    #####:   73:      int16_t *l_78 = (void *)0;
    #####:   74:      int16_t *l_79 = (void *)0;
    #####:   75:      int16_t *l_80[5][1][2] = {{{(void *)0, &l_29}}, {{(void *)0, &l_29}}, {{(void *)0, (void *)0}}, {{&l_29, &l_29}}, {{&l_29, (void *)0}}};
    #####:   76:      int8_t *l_82[4] = {&g_10, &g_10, &g_10, &g_10};
    #####:   77:      uint32_t *l_84 = &g_42;
    #####:   78:      int16_t l_86 = (-1L);
    #####:   79:      int32_t l_95 = (-1L);
        -:   80:      int i, j, k;
    #####:   81:      if ((g_23 || (l_88 = (((*l_64) = (safe_rshift_func_uint16_t_u_u(((safe_div_func_uint16_t_u_u(5UL, (safe_sub_func_int64_t_s_s((safe_lshift_func_uint8_t_u_u((safe_lshift_func_uint64_t_u_s((g_46 <= 18446744073709551607UL), 38)), g_10)), 0x1AA4961F0846D72DLL)))) != 0xA9375314680EDED6LL), ((*l_60)++)))) > (safe_rshift_func_int32_t_s_u((safe_mul_func_int64_t_s_s(((((((safe_lshift_func_uint8_t_u_s((((safe_mod_func_uint32_t_u_u((safe_add_func_int16_t_s_s(((((((*l_84) = ((*l_33) >= ((g_83 = ((((g_81 = (((l_76[0], &l_45) != &l_45) >= l_77[1])) <= g_42) || (*l_33)) | g_44)) > 0x18L))), (-1L)) ^ g_85) | 1L), 0x5EC3L), 0x9C11L)), 0x193A8FE1L)) && (*l_33)), 0x30L), l_86)), l_87), g_85) && g_83) == g_10), (-6L)), g_23)), (*l_33))))))) {
        -:   82:        int32_t **l_89[1];
        -:   83:        int i;
    #####:   84:        for (i = 0; i < 1; i++)
    #####:   85:          l_89[i] = &l_33;
    #####:   86:        g_22 = (g_90 = &l_88);
        -:   87:      } else {
    #####:   88:        int32_t *l_91 = &g_83;
    #####:   89:        int32_t *l_92 = &g_83;
    #####:   90:        int32_t l_93 = 0xAF4792CDL;
    #####:   91:        int32_t *l_94[4][3] = {{&l_11.f0, &l_93, &l_11.f0}, {&l_11.f0, &l_93, &l_11.f0}, {&l_11.f0, &l_93, &l_11.f0}, {&l_11.f0, &l_93, &l_11.f0}};
    #####:   92:        uint32_t l_98 = 0x566CB4C1L;
    #####:   93:        int64_t *l_114 = &g_115;
        -:   94:        int i, j;
    #####:   95:        l_98++;
    #####:   96:        (*l_92) = (((((safe_lshift_func_int64_t_s_u(g_44, ((safe_div_func_uint64_t_u_u((safe_rshift_func_uint32_t_u_s(((*l_92) || g_65[0][0][2]), 25)), ((*l_114) = (safe_rshift_func_uint16_t_u_u(((g_23 & (safe_rshift_func_uint64_t_u_s(((((((*g_22) == (safe_rshift_func_int64_t_s_u((&g_10 == &g_10), (&l_45 == (void *)0)))) ^ l_97[0]) >= 6UL), l_77[1]) | g_23), 37))) ^ 251UL), g_113))))) > 4L))) < g_61[0][0][0]), 0UL), (*l_33)) > (*l_33));
        -:   97:      }
        -:   98:    }
    #####:   99:    return g_61[2][1][0];
        -:  100:  }
        1:  101:  return g_116;
        -:  102:}
        -:  103:
        1:  104:static int64_t func_6(int32_t p_7, uint32_t p_8, int32_t p_9) {
        1:  105:  uint8_t l_24 = 0x66L;
        1:  106:  p_7 = 0x5F7919ADL;
        1:  107:  (*g_22) = g_10;
        1:  108:  return l_24;
        -:  109:}
        -:  110:
        1:  111:int main(int argc, char *argv[]) {
        -:  112:  int i, j, k;
        1:  113:  int print_hash_value = 0;
       1*:  114:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  115:    print_hash_value = 1;
        1:  116:  platform_main_begin();
        1:  117:  crc32_gentab();
        1:  118:  func_1();
        1:  119:  transparent_crc(g_10, "g_10", print_hash_value);
        1:  120:  transparent_crc(g_23, "g_23", print_hash_value);
        1:  121:  transparent_crc(g_42, "g_42", print_hash_value);
        1:  122:  transparent_crc(g_44, "g_44", print_hash_value);
        1:  123:  transparent_crc(g_46, "g_46", print_hash_value);
        5:  124:  for (i = 0; i < 4; i++) {
       12:  125:    for (j = 0; j < 2; j++) {
       16:  126:      for (k = 0; k < 1; k++) {
        8:  127:        transparent_crc(g_61[i][j][k], "g_61[i][j][k]", print_hash_value);
        8:  128:        if (print_hash_value)
    #####:  129:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  130:      }
        -:  131:    }
        -:  132:  }
        5:  133:  for (i = 0; i < 4; i++) {
       20:  134:    for (j = 0; j < 4; j++) {
       64:  135:      for (k = 0; k < 3; k++) {
       48:  136:        transparent_crc(g_65[i][j][k], "g_65[i][j][k]", print_hash_value);
       48:  137:        if (print_hash_value)
    #####:  138:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  139:      }
        -:  140:    }
        -:  141:  }
        1:  142:  transparent_crc(g_81, "g_81", print_hash_value);
        1:  143:  transparent_crc(g_83, "g_83", print_hash_value);
        1:  144:  transparent_crc(g_85, "g_85", print_hash_value);
        1:  145:  transparent_crc(g_113, "g_113", print_hash_value);
        1:  146:  transparent_crc(g_115, "g_115", print_hash_value);
        1:  147:  transparent_crc(g_116, "g_116", print_hash_value);
        1:  148:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  149:  return 0;
        -:  150:}

        -:    0:Source:571.c
        -:    0:Graph:571.gcno
        -:    0:Data:571.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_3 = (-3L);
        -:    7:static volatile int32_t g_4 = (-1L);
        -:    8:static volatile int32_t g_5 = 0L;
        -:    9:static volatile int32_t g_6 = (-3L);
        -:   10:static int32_t g_7 = (-1L);
        -:   11:static int32_t g_8[3] = {5L, 5L, 5L};
        -:   12:static int32_t g_10 = 0xBBE56890L;
        -:   13:static int32_t *g_19[2] = {&g_8[2], &g_8[2]};
        -:   14:static uint8_t g_21[5][2][4] = {{{255UL, 255UL, 255UL, 255UL}, {255UL, 255UL, 255UL, 255UL}}, {{255UL, 255UL, 255UL, 255UL}, {255UL, 255UL, 255UL, 255UL}}, {{255UL, 255UL, 255UL, 255UL}, {255UL, 255UL, 255UL, 255UL}}, {{255UL, 255UL, 255UL, 255UL}, {255UL, 255UL, 255UL, 255UL}}, {{255UL, 255UL, 255UL, 255UL}, {255UL, 255UL, 255UL, 255UL}}};
        -:   15:static int64_t g_23 = 0xEF2F37FC0336AE3DLL;
        -:   16:static uint8_t g_29 = 0xD7L;
        -:   17:static uint8_t *g_28 = &g_29;
        -:   18:static uint32_t g_31 = 0x1F64DB2AL;
        -:   19:static uint64_t g_49 = 0UL;
        -:   20:static int16_t g_53[1][1] = {{(-1L)}};
        -:   21:static volatile int32_t *g_55[2] = {&g_4, &g_4};
        -:   22:
        -:   23:static int32_t func_1(void);
        -:   24:static int64_t func_15(uint8_t p_16);
        -:   25:
        1:   26:static int32_t func_1(void) {
        1:   27:  int32_t l_2[1][4][2] = {{{0x8F8256A9L, 0x8F8256A9L}, {0x8F8256A9L, 0x8F8256A9L}, {0x8F8256A9L, 0x8F8256A9L}, {0x8F8256A9L, 0x8F8256A9L}}};
        1:   28:  int32_t *l_33 = (void *)0;
        1:   29:  int32_t l_58 = (-1L);
        -:   30:  int i, j, k;
       1*:   31:  for (g_3 = 0; (g_3 <= 0); g_3 += 1) {
        1:   32:    int32_t l_24 = 0L;
        1:   33:    int64_t l_27 = (-1L);
        1:   34:    int32_t *l_32 = &g_8[2];
        2:   35:    for (g_7 = 0; (g_7 >= 0); g_7 -= 1) {
        1:   36:      uint8_t *l_20 = &g_21[1][1][3];
        1:   37:      int64_t *l_22[3][5][4] = {{{&g_23, &g_23, &g_23, &g_23}, {&g_23, &g_23, &g_23, &g_23}, {&g_23, &g_23, &g_23, &g_23}, {&g_23, &g_23, &g_23, &g_23}, {&g_23, &g_23, &g_23, &g_23}}, {{&g_23, &g_23, &g_23, &g_23}, {&g_23, &g_23, &g_23, &g_23}, {&g_23, &g_23, &g_23, &g_23}, {&g_23, &g_23, &g_23, &g_23}, {&g_23, &g_23, &g_23, &g_23}}, {{&g_23, &g_23, &g_23, &g_23}, {&g_23, &g_23, &g_23, &g_23}, {&g_23, &g_23, &g_23, &g_23}, {&g_23, &g_23, &g_23, &g_23}, {&g_23, &g_23, &g_23, &g_23}}};
        1:   38:      uint32_t *l_30 = &g_31;
        1:   39:      int32_t *l_34 = &g_10;
        1:   40:      uint64_t *l_52 = &g_49;
        -:   41:      int i, j, k;
        2:   42:      for (g_8[2] = 0; (g_8[2] >= 0); g_8[2] -= 1) {
        -:   43:        int32_t *l_9[4];
        -:   44:        int i;
        5:   45:        for (i = 0; i < 4; i++)
        4:   46:          l_9[i] = &g_10;
        1:   47:        g_10 ^= (-1L);
        -:   48:      }
        1:   49:      g_53[0][0] ^= (safe_rshift_func_uint64_t_u_u(5UL, (((*l_52) = (g_6 > (safe_mul_func_int16_t_s_s((func_15((safe_rshift_func_int32_t_s_u(((*l_34) ^= ((((((g_19[0] = &g_3) == (((*l_30) = ((((*l_20) = g_8[0]) <= (((l_24 = 0x0B0881DDA8DB8846LL) < (g_23 |= g_7)), ((safe_rshift_func_uint16_t_u_u(l_27, ((void *)0 == g_28))) > g_3))) & l_2[0][1][0])), l_32)), l_33) == l_32), (void *)0) == l_30)), 2))) != 18446744073709551610UL), g_8[0])))) == g_7)));
        2:   50:      for (g_49 = 0; (g_49 <= 0); g_49 += 1) {
        1:   51:        int32_t **l_54 = &l_33;
        1:   52:        (*l_54) = l_33;
        1:   53:        g_55[0] = &g_4;
        -:   54:      }
        -:   55:    }
        1:   56:    g_19[0] = &g_8[2];
       1*:   57:    for (l_27 = 0; (l_27 >= 0); l_27 -= 1) {
        1:   58:      int32_t *l_56 = &g_10;
        -:   59:      int32_t *l_57[2];
        1:   60:      uint16_t l_59 = 0xF1CAL;
        -:   61:      int i;
        3:   62:      for (i = 0; i < 2; i++)
        2:   63:        l_57[i] = (void *)0;
        1:   64:      l_59++;
        1:   65:      for (g_31 = 0; (g_31 <= 0); g_31 += 1) {
        -:   66:        int i, j, k;
        1:   67:        return l_2[g_31][(g_31 + 3)][(g_3 + 1)];
        -:   68:      }
        -:   69:    }
        -:   70:  }
    #####:   71:  return l_58;
        -:   72:}
        -:   73:
        1:   74:static int64_t func_15(uint8_t p_16) {
        1:   75:  uint32_t l_35 = 0x3763964EL;
        1:   76:  int32_t *l_36 = &g_8[1];
        1:   77:  int32_t *l_37 = (void *)0;
        1:   78:  int32_t *l_38 = &g_8[2];
        1:   79:  int32_t *l_39 = (void *)0;
        1:   80:  int32_t *l_40 = &g_8[0];
        1:   81:  int32_t *l_41 = &g_8[2];
        1:   82:  int32_t *l_42 = &g_8[2];
        1:   83:  int32_t *l_43 = &g_8[0];
        1:   84:  int32_t *l_44 = &g_8[2];
        -:   85:  int32_t *l_45[2][4];
        1:   86:  int32_t l_46 = 0x35AC29F8L;
        -:   87:  int8_t l_47[5][4][1];
        1:   88:  int8_t l_48 = 0x3DL;
        -:   89:  int i, j, k;
        3:   90:  for (i = 0; i < 2; i++) {
       10:   91:    for (j = 0; j < 4; j++)
        8:   92:      l_45[i][j] = &g_10;
        -:   93:  }
        6:   94:  for (i = 0; i < 5; i++) {
       25:   95:    for (j = 0; j < 4; j++) {
       40:   96:      for (k = 0; k < 1; k++)
       20:   97:        l_47[i][j][k] = (-3L);
        -:   98:    }
        -:   99:  }
        1:  100:  l_35 &= (-8L);
        1:  101:  ++g_49;
        1:  102:  return p_16;
        -:  103:}
        -:  104:
        1:  105:int main(int argc, char *argv[]) {
        -:  106:  int i, j, k;
        1:  107:  int print_hash_value = 0;
       1*:  108:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  109:    print_hash_value = 1;
        1:  110:  platform_main_begin();
        1:  111:  crc32_gentab();
        1:  112:  func_1();
        1:  113:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  114:  transparent_crc(g_4, "g_4", print_hash_value);
        1:  115:  transparent_crc(g_5, "g_5", print_hash_value);
        1:  116:  transparent_crc(g_6, "g_6", print_hash_value);
        1:  117:  transparent_crc(g_7, "g_7", print_hash_value);
        4:  118:  for (i = 0; i < 3; i++) {
        3:  119:    transparent_crc(g_8[i], "g_8[i]", print_hash_value);
        3:  120:    if (print_hash_value)
    #####:  121:      printf("index = [%d]\n", i);
        -:  122:  }
        1:  123:  transparent_crc(g_10, "g_10", print_hash_value);
        6:  124:  for (i = 0; i < 5; i++) {
       15:  125:    for (j = 0; j < 2; j++) {
       50:  126:      for (k = 0; k < 4; k++) {
       40:  127:        transparent_crc(g_21[i][j][k], "g_21[i][j][k]", print_hash_value);
       40:  128:        if (print_hash_value)
    #####:  129:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  130:      }
        -:  131:    }
        -:  132:  }
        1:  133:  transparent_crc(g_23, "g_23", print_hash_value);
        1:  134:  transparent_crc(g_29, "g_29", print_hash_value);
        1:  135:  transparent_crc(g_31, "g_31", print_hash_value);
        1:  136:  transparent_crc(g_49, "g_49", print_hash_value);
        2:  137:  for (i = 0; i < 1; i++) {
        2:  138:    for (j = 0; j < 1; j++) {
        1:  139:      transparent_crc(g_53[i][j], "g_53[i][j]", print_hash_value);
        1:  140:      if (print_hash_value)
    #####:  141:        printf("index = [%d][%d]\n", i, j);
        -:  142:    }
        -:  143:  }
        1:  144:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  145:  return 0;
        -:  146:}

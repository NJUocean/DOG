        -:    0:Source:468.c
        -:    0:Graph:468.gcno
        -:    0:Data:468.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static uint16_t g_2[1] = {0x3946L};
        -:    7:static volatile int32_t g_3[1][5] = {{0xA59C1763L, 0xA59C1763L, 0xA59C1763L, 0xA59C1763L, 0xA59C1763L}};
        -:    8:static int32_t g_4 = 0xF759609CL;
        -:    9:static volatile int32_t g_5 = 0xE63E3155L;
        -:   10:static int32_t g_6 = (-8L);
        -:   11:static uint32_t g_17[2][1] = {{0x3147F59EL}, {0x3147F59EL}};
        -:   12:static int32_t g_20 = 0xA3BDF78BL;
        -:   13:static const int32_t *g_19 = &g_20;
        -:   14:static int8_t g_36 = 0L;
        -:   15:
        -:   16:static int8_t func_1(void);
        -:   17:static int32_t *func_7(int16_t p_8, const int32_t p_9, int32_t p_10, uint32_t p_11);
        -:   18:
        1:   19:static int8_t func_1(void) {
        1:   20:  int16_t l_18 = 0xBC2AL;
        2:   21:  for (g_4 = 0; (g_4 <= 0); g_4 += 1) {
        1:   22:    int8_t l_16 = 0x65L;
        1:   23:    int16_t l_34 = 1L;
        2:   24:    for (g_6 = 0; (g_6 >= 0); g_6 -= 1) {
        1:   25:      int32_t *l_15 = &g_4;
        1:   26:      int32_t **l_14 = &l_15;
        -:   27:      int i;
        1:   28:      (*l_14) = func_7(g_2[g_4], ((((&g_3[0][0] != &g_6) != (safe_mod_func_int16_t_s_s((0xE008FB0B44CF5927LL > (g_4 ^ ((((*l_14) = &g_4) == (void *)0) >= (g_17[0][0] = (((g_4 != g_5) ^ l_16) != l_16))))), l_16))), l_16), 0x189D9E62L), l_18, g_6);
        -:   29:    }
        2:   30:    for (l_18 = 0; (l_18 <= 0); l_18 += 1) {
        1:   31:      int32_t *l_31 = &g_6;
        1:   32:      int8_t *l_35 = (void *)0;
        1:   33:      int32_t *l_37 = &g_20;
       1*:   34:      (*l_37) = ((!(g_36 |= (safe_add_func_int8_t_s_s((((safe_sub_func_uint64_t_u_u(g_20, (0L || (l_18 <= ((safe_lshift_func_int16_t_s_s((safe_mul_func_uint64_t_u_u(((g_3[0][0], (((*l_31) = l_16) || (safe_div_func_int32_t_s_s((((1L | (l_16 && (*l_31))) || 0L), l_18), g_17[0][0])))) || g_17[0][0]), l_18)), 10)) & g_17[0][0]))))) <= 18446744073709551615UL), l_34), l_16)))) < 1UL);
        -:   35:    }
        -:   36:  }
        1:   37:  return g_3[0][0];
        -:   38:}
        -:   39:
        1:   40:static int32_t *func_7(int16_t p_8, const int32_t p_9, int32_t p_10, uint32_t p_11) {
        1:   41:  int32_t *l_21 = &g_6;
        1:   42:  g_19 = &p_9;
        1:   43:  return l_21;
        -:   44:}
        -:   45:
        1:   46:int main(int argc, char *argv[]) {
        -:   47:  int i, j;
        1:   48:  int print_hash_value = 0;
       1*:   49:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   50:    print_hash_value = 1;
        1:   51:  platform_main_begin();
        1:   52:  crc32_gentab();
        1:   53:  func_1();
        2:   54:  for (i = 0; i < 1; i++) {
        1:   55:    transparent_crc(g_2[i], "g_2[i]", print_hash_value);
        1:   56:    if (print_hash_value)
    #####:   57:      printf("index = [%d]\n", i);
        -:   58:  }
        2:   59:  for (i = 0; i < 1; i++) {
        6:   60:    for (j = 0; j < 5; j++) {
        5:   61:      transparent_crc(g_3[i][j], "g_3[i][j]", print_hash_value);
        5:   62:      if (print_hash_value)
    #####:   63:        printf("index = [%d][%d]\n", i, j);
        -:   64:    }
        -:   65:  }
        1:   66:  transparent_crc(g_4, "g_4", print_hash_value);
        1:   67:  transparent_crc(g_5, "g_5", print_hash_value);
        1:   68:  transparent_crc(g_6, "g_6", print_hash_value);
        3:   69:  for (i = 0; i < 2; i++) {
        4:   70:    for (j = 0; j < 1; j++) {
        2:   71:      transparent_crc(g_17[i][j], "g_17[i][j]", print_hash_value);
        2:   72:      if (print_hash_value)
    #####:   73:        printf("index = [%d][%d]\n", i, j);
        -:   74:    }
        -:   75:  }
        1:   76:  transparent_crc(g_20, "g_20", print_hash_value);
        1:   77:  transparent_crc(g_36, "g_36", print_hash_value);
        1:   78:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   79:  return 0;
        -:   80:}

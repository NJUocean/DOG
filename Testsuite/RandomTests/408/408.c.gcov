        -:    0:Source:408.c
        -:    0:Graph:408.gcno
        -:    0:Data:408.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_3 = (-1L);
        -:    7:static volatile int8_t g_6[2][5][1] = {{{(-1L)}, {9L}, {(-1L)}, {9L}, {(-1L)}}, {{9L}, {(-1L)}, {9L}, {(-1L)}, {9L}}};
        -:    8:static volatile uint16_t g_7 = 0xA727L;
        -:    9:
        -:   10:static int64_t func_1(void);
        -:   11:
        1:   12:static int64_t func_1(void) {
        1:   13:  int32_t *l_2 = &g_3;
        1:   14:  int32_t *l_4 = (void *)0;
        -:   15:  int32_t *l_5[3][1];
        -:   16:  int i, j;
        4:   17:  for (i = 0; i < 3; i++) {
        6:   18:    for (j = 0; j < 1; j++)
        3:   19:      l_5[i][j] = &g_3;
        -:   20:  }
        1:   21:  --g_7;
        1:   22:  return g_6[0][3][0];
        -:   23:}
        -:   24:
        1:   25:int main(int argc, char *argv[]) {
        -:   26:  int i, j, k;
        1:   27:  int print_hash_value = 0;
       1*:   28:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   29:    print_hash_value = 1;
        1:   30:  platform_main_begin();
        1:   31:  crc32_gentab();
        1:   32:  func_1();
        1:   33:  transparent_crc(g_3, "g_3", print_hash_value);
        3:   34:  for (i = 0; i < 2; i++) {
       12:   35:    for (j = 0; j < 5; j++) {
       20:   36:      for (k = 0; k < 1; k++) {
       10:   37:        transparent_crc(g_6[i][j][k], "g_6[i][j][k]", print_hash_value);
       10:   38:        if (print_hash_value)
    #####:   39:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   40:      }
        -:   41:    }
        -:   42:  }
        1:   43:  transparent_crc(g_7, "g_7", print_hash_value);
        1:   44:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   45:  return 0;
        -:   46:}

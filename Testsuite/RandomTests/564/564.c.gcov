        -:    0:Source:564.c
        -:    0:Graph:564.gcno
        -:    0:Data:564.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  unsigned f0 : 27;
        -:    8:  volatile int32_t f1;
        -:    9:  int32_t f2;
        -:   10:};
        -:   11:
        -:   12:struct S1 {
        -:   13:  const signed f0 : 3;
        -:   14:  unsigned f1 : 14;
        -:   15:  signed f2 : 23;
        -:   16:};
        -:   17:
        -:   18:static int64_t g_13 = 0x061A652065C829EDLL;
        -:   19:static int8_t g_35 = 4L;
        -:   20:static uint32_t g_38 = 0xA4087B33L;
        -:   21:static volatile uint64_t g_42[1] = {18446744073709551615UL};
        -:   22:static int16_t g_51 = 0x7B79L;
        -:   23:static int32_t g_57 = 0xBC0E3E0EL;
        -:   24:static int32_t *volatile g_56 = &g_57;
        -:   25:static struct S0 g_58[2] = {{3785, 0x18344157L, 0L}, {3785, 0x18344157L, 0L}};
        -:   26:static struct S0 g_60 = {4826, -9L, -8L};
        -:   27:static uint16_t g_78 = 1UL;
        -:   28:static int32_t *volatile g_82 = &g_58[1].f2;
        -:   29:static uint8_t *g_92 = (void *)0;
        -:   30:static int16_t g_111 = 1L;
        -:   31:static uint16_t g_112 = 0xD6F6L;
        -:   32:
        -:   33:static uint32_t func_1(void);
        -:   34:static struct S0 func_5(const struct S1 p_6, int16_t p_7, uint32_t p_8, int8_t p_9);
        -:   35:
        1:   36:static uint32_t func_1(void) {
        1:   37:  uint64_t l_2[4][1] = {{18446744073709551606UL}, {0UL}, {18446744073709551606UL}, {0UL}};
        -:   38:  const struct S1 l_10 = {1, 57, -2205};
        1:   39:  int8_t *l_34 = &g_35;
        1:   40:  int8_t **l_36 = &l_34;
        1:   41:  uint32_t *l_37[4][5] = {{(void *)0, &g_38, &g_38, (void *)0, (void *)0}, {(void *)0, &g_38, &g_38, (void *)0, (void *)0}, {(void *)0, &g_38, &g_38, (void *)0, (void *)0}, {(void *)0, &g_38, &g_38, (void *)0, (void *)0}};
        -:   42:  int32_t l_39[5];
        1:   43:  int32_t l_40 = 0xC2D16CF0L;
        1:   44:  int32_t l_41 = (-2L);
        1:   45:  uint8_t l_43 = 246UL;
        -:   46:  const uint8_t *l_91[2];
        1:   47:  uint8_t *l_94 = &l_43;
        -:   48:  int i, j;
        6:   49:  for (i = 0; i < 5; i++)
        5:   50:    l_39[i] = (-1L);
        3:   51:  for (i = 0; i < 2; i++)
        2:   52:    l_91[i] = &l_43;
        1:   53:lbl_95:
        1:   54:  l_2[1][0]++;
       1*:   55:  if ((func_5(l_10, (safe_mul_func_uint64_t_u_u((((1L <= g_13) && (((safe_sub_func_uint64_t_u_u(((((safe_rshift_func_uint32_t_u_s((safe_lshift_func_int32_t_s_s((-7L), (safe_add_func_uint32_t_u_u(((l_10.f0 < (safe_sub_func_int64_t_s_s((l_41 = (safe_mod_func_int32_t_s_s(0xD5D08818L, ((l_40 &= (((safe_mod_func_int8_t_s_s(l_2[1][0], (safe_mod_func_uint8_t_u_u((safe_div_func_uint16_t_u_u(((((l_39[0] = ((safe_add_func_int16_t_s_s((((*l_34) = g_13) || (((((*l_36) = l_34) != &g_35) || g_13) == l_2[3][0])), g_13)) < l_10.f0)), (-1L)) > (-1L)) == l_10.f0), 0x2BBAL)), g_13)))) | 0L) ^ l_2[1][0])) && l_40)))), 0x3C77D98A9A26275FLL))) | g_42[0]), g_38)))), g_38)), l_10.f1) > l_43) & l_10.f1), g_13)) & 0x7D9FL) == 9UL)) || g_38), l_10.f0)), g_13, l_2[1][0]), 8L)) {
        -:   56:    const struct S1 l_59 = {0, 80, 2045};
        1:   57:    uint8_t *l_63 = &l_43;
        -:   58:    uint16_t *l_77[2];
        1:   59:    int32_t l_79 = (-6L);
        1:   60:    int32_t *l_80 = &g_57;
        -:   61:    int i;
        3:   62:    for (i = 0; i < 2; i++)
        2:   63:      l_77[i] = &g_78;
        1:   64:    g_60 = func_5(l_59, l_59.f1, g_58[1].f1, (l_10, g_35));
        1:   65:    (*l_80) = (safe_mul_func_int64_t_s_s(l_10.f2, (((*l_63) = 248UL) < (0xCAL != (!(0x1FL >= ((safe_sub_func_int32_t_s_s(((safe_sub_func_uint16_t_u_u((l_79 = ((g_58[1].f2 <= 1UL), (safe_mod_func_uint16_t_u_u((g_51 == l_41), (safe_rshift_func_uint8_t_u_s((safe_lshift_func_uint16_t_u_u(l_59.f2, 1)), 1)))))), 0x4DBBL)) < g_42[0]), l_40)) < g_51)))))));
        -:   66:  } else {
        -:   67:    uint8_t l_81[1];
        -:   68:    uint8_t **l_93 = &g_92;
        -:   69:    int i;
        -:   70:    for (i = 0; i < 1; i++)
        -:   71:      l_81[i] = 1UL;
        -:   72:    (*g_82) |= l_81[0];
        -:   73:    if ((g_78 == (7L < (((((!(+((safe_mul_func_int32_t_s_s(l_81[0], (safe_add_func_uint32_t_u_u((((*g_82) | 0x1A7339E9L) < ((l_91[0] != ((*l_93) = g_92)) < l_2[1][0])), (l_37[2][0] != l_37[3][4]))))) ^ g_35))) != g_60.f2) && l_81[0]), g_92) != l_94)))) {
        -:   74:      if (g_78)
        -:   75:        goto lbl_95;
        -:   76:    } else {
        -:   77:      int32_t *l_96 = &g_60.f2;
        -:   78:      int32_t *l_97 = (void *)0;
        -:   79:      int32_t *l_98 = &l_39[3];
        -:   80:      int32_t *l_99 = &l_39[0];
        -:   81:      int32_t *l_100 = &l_40;
        -:   82:      int32_t *l_101 = &l_39[2];
        -:   83:      int32_t *l_102 = &g_60.f2;
        -:   84:      int32_t *l_103 = &g_57;
        -:   85:      int32_t *l_104 = &g_60.f2;
        -:   86:      int32_t *l_105 = &g_57;
        -:   87:      int32_t *l_106 = (void *)0;
        -:   88:      int32_t *l_107 = &l_39[0];
        -:   89:      int32_t *l_108 = &g_57;
        -:   90:      int32_t *l_109 = (void *)0;
        -:   91:      int32_t *l_110[1];
        -:   92:      int i;
        -:   93:      for (i = 0; i < 1; i++)
        -:   94:        l_110[i] = &l_41;
        -:   95:      g_112--;
        -:   96:      (*l_98) = (*g_56);
        -:   97:    }
        -:   98:  }
        1:   99:  return l_41;
        -:  100:}
        -:  101:
        2:  102:static struct S0 func_5(const struct S1 p_6, int16_t p_7, uint32_t p_8, int8_t p_9) {
        2:  103:  int8_t l_44 = 6L;
        2:  104:  int16_t *l_49 = (void *)0;
        2:  105:  int16_t *l_50 = &g_51;
        2:  106:  (*g_56) = (l_44 >= (safe_mul_func_uint8_t_u_u(((((void *)0 != &l_44) || (safe_mul_func_int32_t_s_s(p_8, l_44))) > (((*l_50) |= p_7) == ((safe_rshift_func_int64_t_s_u(p_9, 28)) && (-7L)))), (safe_mod_func_int32_t_s_s(((&p_7 == l_50) > l_44), g_13)))));
        2:  107:  return g_58[1];
        -:  108:}
        -:  109:
        1:  110:int main(int argc, char *argv[]) {
        -:  111:  int i;
        1:  112:  int print_hash_value = 0;
       1*:  113:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  114:    print_hash_value = 1;
        1:  115:  platform_main_begin();
        1:  116:  crc32_gentab();
        1:  117:  func_1();
        1:  118:  transparent_crc(g_13, "g_13", print_hash_value);
        1:  119:  transparent_crc(g_35, "g_35", print_hash_value);
        1:  120:  transparent_crc(g_38, "g_38", print_hash_value);
        2:  121:  for (i = 0; i < 1; i++) {
        1:  122:    transparent_crc(g_42[i], "g_42[i]", print_hash_value);
        1:  123:    if (print_hash_value)
    #####:  124:      printf("index = [%d]\n", i);
        -:  125:  }
        1:  126:  transparent_crc(g_51, "g_51", print_hash_value);
        1:  127:  transparent_crc(g_57, "g_57", print_hash_value);
        3:  128:  for (i = 0; i < 2; i++) {
        2:  129:    transparent_crc(g_58[i].f0, "g_58[i].f0", print_hash_value);
        2:  130:    transparent_crc(g_58[i].f1, "g_58[i].f1", print_hash_value);
        2:  131:    transparent_crc(g_58[i].f2, "g_58[i].f2", print_hash_value);
        2:  132:    if (print_hash_value)
    #####:  133:      printf("index = [%d]\n", i);
        -:  134:  }
        1:  135:  transparent_crc(g_60.f0, "g_60.f0", print_hash_value);
        1:  136:  transparent_crc(g_60.f1, "g_60.f1", print_hash_value);
        1:  137:  transparent_crc(g_60.f2, "g_60.f2", print_hash_value);
        1:  138:  transparent_crc(g_78, "g_78", print_hash_value);
        1:  139:  transparent_crc(g_111, "g_111", print_hash_value);
        1:  140:  transparent_crc(g_112, "g_112", print_hash_value);
        1:  141:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  142:  return 0;
        -:  143:}

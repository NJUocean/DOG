        -:    0:Source:680.c
        -:    0:Graph:680.gcno
        -:    0:Data:680.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  volatile unsigned f0 : 4;
        -:    8:};
        -:    9:
        -:   10:union U1 {
        -:   11:  signed f0 : 1;
        -:   12:  const uint8_t f1;
        -:   13:  uint32_t f2;
        -:   14:  const volatile int32_t f3;
        -:   15:  const volatile uint16_t f4;
        -:   16:};
        -:   17:
        -:   18:static int64_t g_7 = 0x0566A927213EC752LL;
        -:   19:static volatile struct S0 g_20 = {1};
        -:   20:static int16_t g_23 = 1L;
        -:   21:static int64_t g_27 = 1L;
        -:   22:static int32_t g_29 = 0x0538E0EAL;
        -:   23:static union U1 g_30[2][1][3] = {{{{0L}, {0L}, {0L}}}, {{{0L}, {0L}, {0L}}}};
        -:   24:static volatile union U1 g_33 = {-8L};
        -:   25:static uint64_t g_35 = 0xDB5CF63547A0585CLL;
        -:   26:static int32_t g_37 = 0x8161DBFAL;
        -:   27:
        -:   28:static int32_t func_1(void);
        -:   29:static union U1 func_8(int64_t p_9);
        -:   30:
        1:   31:static int32_t func_1(void) {
        1:   32:  int8_t l_10 = 0x1EL;
        1:   33:  uint64_t *l_34[2][3][2] = {{{&g_35, &g_35}, {&g_35, &g_35}, {&g_35, &g_35}}, {{&g_35, &g_35}, {&g_35, &g_35}, {&g_35, &g_35}}};
        1:   34:  int32_t *l_36 = &g_37;
        -:   35:  int i, j, k;
        1:   36:  (*l_36) ^= (safe_mod_func_uint16_t_u_u(((((safe_div_func_uint8_t_u_u((0xBC662A2B3B7BEDEDLL && ((safe_unary_minus_func_uint8_t_u((((g_7 < g_7) < g_7), ((func_8(l_10), (safe_sub_func_int16_t_s_s((((g_33, (l_10 & (g_35 = l_10))) > 0x8169B2B29335309FLL), g_7), 0x28C5L))) < g_7)))) >= 0x456BBB30732BAB2BLL)), l_10)), l_10) || 0x624E194E4064544ALL), 0x4792L), g_7));
        1:   37:  return g_30[0][0][2].f0;
        -:   38:}
        -:   39:
        1:   40:static union U1 func_8(int64_t p_9) {
        1:   41:  int16_t *l_21 = (void *)0;
        1:   42:  int16_t *l_22 = &g_23;
        1:   43:  int32_t l_24 = 0L;
        1:   44:  int16_t l_25 = (-9L);
        1:   45:  int64_t *l_26 = &g_27;
        1:   46:  int32_t *l_28 = &g_29;
       1*:   47:  (*l_28) &= (((((safe_rshift_func_uint64_t_u_s(((((g_7 <= ((((((((*l_26) = (g_7 && (((safe_lshift_func_uint8_t_u_u((safe_unary_minus_func_int64_t_s((((g_7 > ((safe_rshift_func_int16_t_s_s(p_9, (safe_unary_minus_func_uint16_t_u(p_9)))) > 0xA5D840DFL)) ^ ((+1UL), (((g_7 > ((*l_22) = (g_20, 0x5D06L))) < l_24) != l_25))) < p_9))), 1)) < 0xF9L) ^ 7UL))) <= g_7) == l_25) | 0xB4763523L) || p_9) | p_9) > 0xE7L)) | g_7), g_20.f0) && g_20.f0), 37)) < l_24) ^ g_7) >= 0L), g_7);
        1:   48:  return g_30[0][0][2];
        -:   49:}
        -:   50:
        1:   51:int main(int argc, char *argv[]) {
        -:   52:  int i, j, k;
        1:   53:  int print_hash_value = 0;
       1*:   54:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   55:    print_hash_value = 1;
        1:   56:  platform_main_begin();
        1:   57:  crc32_gentab();
        1:   58:  func_1();
        1:   59:  transparent_crc(g_7, "g_7", print_hash_value);
        1:   60:  transparent_crc(g_20.f0, "g_20.f0", print_hash_value);
        1:   61:  transparent_crc(g_23, "g_23", print_hash_value);
        1:   62:  transparent_crc(g_27, "g_27", print_hash_value);
        1:   63:  transparent_crc(g_29, "g_29", print_hash_value);
        3:   64:  for (i = 0; i < 2; i++) {
        4:   65:    for (j = 0; j < 1; j++) {
        8:   66:      for (k = 0; k < 3; k++) {
        6:   67:        transparent_crc(g_30[i][j][k].f0, "g_30[i][j][k].f0", print_hash_value);
        6:   68:        if (print_hash_value)
    #####:   69:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   70:      }
        -:   71:    }
        -:   72:  }
        1:   73:  transparent_crc(g_33.f0, "g_33.f0", print_hash_value);
        1:   74:  transparent_crc(g_35, "g_35", print_hash_value);
        1:   75:  transparent_crc(g_37, "g_37", print_hash_value);
        1:   76:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   77:  return 0;
        -:   78:}

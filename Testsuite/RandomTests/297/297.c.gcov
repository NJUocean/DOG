        -:    0:Source:297.c
        -:    0:Graph:297.gcno
        -:    0:Data:297.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  uint8_t f0;
        -:   10:};
        -:   11:#pragma pack(pop)
        -:   12:
        -:   13:static int32_t g_2 = 0x108F8256L;
        -:   14:static int32_t g_5 = 0L;
        -:   15:static struct S0 g_16 = {0x5BL};
        -:   16:static int32_t g_33 = 0x81DDA8DBL;
        -:   17:
        -:   18:static int16_t func_1(void);
        -:   19:static int16_t func_14(struct S0 p_15);
        -:   20:
        1:   21:static int16_t func_1(void) {
        1:   22:  int16_t l_31 = 0x8033L;
        1:   23:  uint16_t l_34 = 0x1F0EL;
       1*:   24:  for (g_2 = 0; (g_2 < (-9)); g_2--) {
    #####:   25:    struct S0 *l_20 = &g_16;
    #####:   26:    int32_t l_30 = 0xAF7BDD48L;
    #####:   27:    for (g_5 = 0; (g_5 >= (-4)); g_5 = safe_sub_func_int16_t_s_s(g_5, 6)) {
    #####:   28:      struct S0 *l_21 = &g_16;
    #####:   29:      struct S0 **l_22 = &l_21;
    #####:   30:      int32_t *l_32 = &g_33;
    #####:   31:      (*l_32) &= (safe_mod_func_uint8_t_u_u(((safe_add_func_uint32_t_u_u(g_5, (safe_rshift_func_uint16_t_u_u(0x6EC1L, ((func_14(g_16), (g_16.f0, (safe_sub_func_uint8_t_u_u(((g_16.f0, l_20) != ((*l_22) = l_21)), (safe_lshift_func_uint16_t_u_s((+(safe_mul_func_uint8_t_u_u((safe_div_func_uint16_t_u_u(g_5, g_16.f0)), 0xF3L))), 12)))))) <= g_5))))) | l_30), l_31));
        -:   32:    }
        -:   33:  }
        1:   34:  return l_34;
        -:   35:}
        -:   36:
    #####:   37:static int16_t func_14(struct S0 p_15) {
    #####:   38:  struct S0 *l_17[4] = {&g_16, &g_16, &g_16, &g_16};
        -:   39:  int i;
    #####:   40:  g_16 = (p_15 = p_15);
    #####:   41:  for (p_15.f0 = 0; (p_15.f0 <= 3); p_15.f0 += 1) {
    #####:   42:    if (p_15.f0)
    #####:   43:      break;
        -:   44:  }
    #####:   45:  return g_2;
        -:   46:}
        -:   47:
        1:   48:int main(int argc, char *argv[]) {
        1:   49:  int print_hash_value = 0;
       1*:   50:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   51:    print_hash_value = 1;
        1:   52:  platform_main_begin();
        1:   53:  crc32_gentab();
        1:   54:  func_1();
        1:   55:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   56:  transparent_crc(g_5, "g_5", print_hash_value);
        1:   57:  transparent_crc(g_16.f0, "g_16.f0", print_hash_value);
        1:   58:  transparent_crc(g_33, "g_33", print_hash_value);
        1:   59:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   60:  return 0;
        -:   61:}

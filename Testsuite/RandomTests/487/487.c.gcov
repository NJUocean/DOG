        -:    0:Source:487.c
        -:    0:Graph:487.gcno
        -:    0:Data:487.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U1 {
        -:    7:  const int32_t f0;
        -:    8:  const volatile int16_t f1;
        -:    9:  uint8_t f2;
        -:   10:  uint32_t f3;
        -:   11:};
        -:   12:
        -:   13:union U4 {
        -:   14:  int16_t f0;
        -:   15:  uint8_t f1;
        -:   16:  const int8_t f2;
        -:   17:  volatile uint32_t f3;
        -:   18:  const int32_t f4;
        -:   19:};
        -:   20:
        -:   21:static uint8_t g_4 = 1UL;
        -:   22:static int16_t g_6[2][2] = {{1L, 1L}, {1L, 1L}};
        -:   23:static volatile union U4 g_7 = {0xF0A9L};
        -:   24:static int64_t g_13 = 0x7C14AB653B1DAB55LL;
        -:   25:static uint32_t g_14 = 0UL;
        -:   26:static int32_t g_18 = (-3L);
        -:   27:static int32_t *const volatile g_17[5] = {&g_18, &g_18, &g_18, &g_18, &g_18};
        -:   28:static uint32_t g_37 = 0x6798564DL;
        -:   29:static union U1 g_52 = {0xA8988ED9L};
        -:   30:static union U1 g_83[1][4] = {{{0xB4ADBCF7L}, {0xB4ADBCF7L}, {0xB4ADBCF7L}, {0xB4ADBCF7L}}};
        -:   31:static uint16_t g_104 = 0UL;
        -:   32:static uint64_t g_105 = 0x40609845791C840DLL;
        -:   33:static uint16_t g_130[1][4] = {{7UL, 7UL, 7UL, 7UL}};
        -:   34:static uint16_t g_138 = 1UL;
        -:   35:static uint64_t g_149 = 0xBCBAD6A7F728D9C3LL;
        -:   36:
        -:   37:static int32_t func_1(void);
        -:   38:static int64_t func_2(uint8_t p_3);
        -:   39:
        1:   40:static int32_t func_1(void) {
        1:   41:  int64_t l_26 = 0L;
        1:   42:  int32_t l_27 = (-1L);
        1:   43:  int64_t *l_40[5] = {&g_13, &g_13, &g_13, &g_13, &g_13};
        1:   44:  int8_t l_76 = 0x57L;
        1:   45:  int32_t l_78 = 0x721BC9AFL;
        1:   46:  int32_t l_79 = 0x2D270846L;
        1:   47:  uint8_t l_80 = 255UL;
        1:   48:  int32_t *l_102 = &l_27;
        1:   49:  int32_t l_153 = 0x05F85640L;
        -:   50:  int i;
        1:   51:  if ((func_2(g_4) < g_4)) {
        -:   52:    uint8_t l_24[2];
        -:   53:    int32_t *l_25[1];
        -:   54:    int i;
        3:   55:    for (i = 0; i < 2; i++)
        2:   56:      l_24[i] = 0UL;
        2:   57:    for (i = 0; i < 1; i++)
        1:   58:      l_25[i] = (void *)0;
        1:   59:    l_27 = (l_26 = l_24[1]);
       1*:   60:    for (l_26 = 0; (l_26 < 15); l_26 = safe_add_func_uint32_t_u_u(l_26, 4)) {
        1:   61:      int16_t l_57 = (-1L);
        1:   62:      uint16_t l_58 = 65534UL;
        -:   63:      uint32_t l_60[1][5];
        1:   64:      int32_t l_61 = 0x91E6DCF6L;
        1:   65:      int32_t l_62 = 0x36EFE450L;
        -:   66:      int i, j;
        2:   67:      for (i = 0; i < 1; i++) {
        6:   68:        for (j = 0; j < 5; j++)
        5:   69:          l_60[i][j] = 1UL;
        -:   70:      }
       1*:   71:      for (g_18 = (-15); (g_18 >= (-8)); ++g_18) {
    #####:   72:        int32_t l_51 = (-1L);
    #####:   73:        uint32_t *l_59 = &g_14;
    #####:   74:        l_62 = (!((safe_rshift_func_uint32_t_u_u((safe_add_func_uint32_t_u_u((g_37--), (l_61 &= (l_40[0] == ((safe_add_func_int16_t_s_s((((*l_59) = (safe_div_func_int8_t_s_s(((safe_lshift_func_int64_t_s_u(((g_18 && (safe_mul_func_int64_t_s_s((((safe_div_func_int64_t_s_s(((l_51 || ((g_52, (safe_lshift_func_int8_t_s_s(g_14, ((-1L) != ((&l_25[0] == ((((g_7.f0 > (safe_add_func_int8_t_s_s(((g_14, (void *)0) == &g_18), l_57))) || g_7.f0) != g_6[0][0]), &l_25[0])) == g_14))))) <= 1L)) <= l_51), l_58)), g_18) <= g_18), l_27))) < 1UL), l_57)), l_57), 0x78L))), 0x1BFDL), l_60[0][2])), (void *)0))))), g_52.f0)) >= 0xD1L));
        -:   75:      }
        1:   76:      if (l_57)
        1:   77:        break;
        -:   78:    }
        -:   79:  } else {
    #####:   80:    int32_t *l_63 = &l_27;
    #####:   81:    int32_t *l_64 = (void *)0;
    #####:   82:    int32_t *l_65 = &g_18;
    #####:   83:    int32_t *l_66 = &l_27;
    #####:   84:    int32_t *l_67 = (void *)0;
    #####:   85:    int32_t *l_68 = &l_27;
    #####:   86:    int32_t *l_69 = &g_18;
    #####:   87:    int32_t *l_70 = &g_18;
    #####:   88:    int32_t *l_71 = &l_27;
    #####:   89:    int32_t l_72 = 0L;
    #####:   90:    int32_t *l_73 = &l_72;
    #####:   91:    int32_t *l_74 = &l_27;
        -:   92:    int32_t *l_75[1][2];
    #####:   93:    int32_t l_77[5] = {(-6L), (-6L), (-6L), (-6L), (-6L)};
        -:   94:    uint16_t *l_103[1];
        -:   95:    int i, j;
    #####:   96:    for (i = 0; i < 1; i++) {
    #####:   97:      for (j = 0; j < 2; j++)
    #####:   98:        l_75[i][j] = &g_18;
        -:   99:    }
    #####:  100:    for (i = 0; i < 1; i++)
    #####:  101:      l_103[i] = &g_104;
    #####:  102:    l_80--;
    #####:  103:    (*l_70) = (g_105 &= ((g_83[0][3], (((((safe_rshift_func_int64_t_s_u(g_83[0][3].f0, ((-1L) || ((*l_102) = (g_104 = ((safe_mod_func_int8_t_s_s(((safe_rshift_func_uint32_t_u_u((safe_add_func_int16_t_s_s(((safe_sub_func_int16_t_s_s((((l_79 == ((g_13 != (0x67F9L | (safe_lshift_func_uint8_t_u_s(g_18, 1)))) || (safe_mul_func_uint32_t_u_u((safe_sub_func_int64_t_s_s(l_78, ((((safe_mul_func_uint8_t_u_u(g_6[1][1], l_26)), &l_78) == l_102) >= g_52.f0))), (*l_102))))) <= 0x1D5E08CE29F52E16LL) >= g_4), 0xD553L)) == (*l_70)), 1L)), g_4)) >= 4294967287UL), g_18)), g_52.f0)))))), g_52.f0) ^ (*l_70)) && 0x5FL), &g_13)) != &l_26));
        -:  104:  }
       1*:  105:  for (l_26 = 0; (l_26 == 20); l_26 = safe_add_func_uint32_t_u_u(l_26, 8)) {
        -:  106:    uint32_t *l_128[5];
        -:  107:    int32_t l_129[1][1];
        -:  108:    int32_t l_133[3];
    #####:  109:    uint16_t *l_136 = &g_104;
    #####:  110:    uint16_t *l_137 = &g_138;
    #####:  111:    int16_t *l_147[2][5][2] = {{{&g_6[1][0], &g_6[1][0]}, {&g_6[0][1], &g_6[0][1]}, {&g_6[0][1], &g_6[1][0]}, {&g_6[1][0], &g_6[1][0]}, {&g_6[1][0], &g_6[1][0]}}, {{&g_6[1][0], &g_6[1][0]}, {&g_6[0][1], &g_6[0][1]}, {&g_6[0][1], &g_6[1][0]}, {&g_6[1][0], &g_6[1][0]}, {&g_6[1][0], &g_6[0][1]}}};
    #####:  112:    uint64_t *l_148 = &g_149;
    #####:  113:    uint64_t l_150 = 0xE49567760C71652FLL;
    #####:  114:    uint8_t *l_151 = (void *)0;
    #####:  115:    uint8_t *l_152 = &g_83[0][3].f2;
        -:  116:    int i, j, k;
    #####:  117:    for (i = 0; i < 5; i++)
    #####:  118:      l_128[i] = (void *)0;
    #####:  119:    for (i = 0; i < 1; i++) {
    #####:  120:      for (j = 0; j < 1; j++)
    #####:  121:        l_129[i][j] = 0x15BDED78L;
        -:  122:    }
    #####:  123:    for (i = 0; i < 3; i++)
    #####:  124:      l_133[i] = (-9L);
        -:  125:  }
        1:  126:  return l_153;
        -:  127:}
        -:  128:
        1:  129:static int64_t func_2(uint8_t p_3) {
        1:  130:  uint32_t l_5 = 1UL;
        1:  131:  int64_t *l_12 = &g_13;
       1*:  132:  g_14 = ((g_6[1][0] = (l_5, (p_3 >= 0x0EC3203BL))) && (g_7, (safe_div_func_int16_t_s_s((((g_7.f0 ^ p_3) == (safe_mod_func_int16_t_s_s((((((*l_12) = (p_3 < g_6[0][1])) == g_6[1][0]) & p_3), 0x6671L), (-1L)))) && p_3), l_5))));
       1*:  133:  for (g_13 = 0; (g_13 == 21); g_13 = safe_add_func_uint8_t_u_u(g_13, 5)) {
    #####:  134:    if (p_3) {
    #####:  135:      int32_t *l_19 = (void *)0;
        -:  136:      int32_t *l_20[1];
    #####:  137:      uint32_t l_21 = 0x123020F6L;
        -:  138:      int i;
    #####:  139:      for (i = 0; i < 1; i++)
    #####:  140:        l_20[i] = &g_18;
    #####:  141:      l_21 &= (0x1DD2L == (l_12 == &g_13));
        -:  142:    } else {
    #####:  143:      const int32_t *l_23 = &g_18;
    #####:  144:      const int32_t **l_22 = &l_23;
    #####:  145:      (*l_22) = (void *)0;
        -:  146:    }
        -:  147:  }
        1:  148:  return g_6[1][0];
        -:  149:}
        -:  150:
        1:  151:int main(int argc, char *argv[]) {
        -:  152:  int i, j;
        1:  153:  int print_hash_value = 0;
       1*:  154:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  155:    print_hash_value = 1;
        1:  156:  platform_main_begin();
        1:  157:  crc32_gentab();
        1:  158:  func_1();
        1:  159:  transparent_crc(g_4, "g_4", print_hash_value);
        3:  160:  for (i = 0; i < 2; i++) {
        6:  161:    for (j = 0; j < 2; j++) {
        4:  162:      transparent_crc(g_6[i][j], "g_6[i][j]", print_hash_value);
        4:  163:      if (print_hash_value)
    #####:  164:        printf("index = [%d][%d]\n", i, j);
        -:  165:    }
        -:  166:  }
        1:  167:  transparent_crc(g_7.f0, "g_7.f0", print_hash_value);
        1:  168:  transparent_crc(g_13, "g_13", print_hash_value);
        1:  169:  transparent_crc(g_14, "g_14", print_hash_value);
        1:  170:  transparent_crc(g_18, "g_18", print_hash_value);
        1:  171:  transparent_crc(g_37, "g_37", print_hash_value);
        1:  172:  transparent_crc(g_52.f0, "g_52.f0", print_hash_value);
        2:  173:  for (i = 0; i < 1; i++) {
        5:  174:    for (j = 0; j < 4; j++) {
        4:  175:      transparent_crc(g_83[i][j].f0, "g_83[i][j].f0", print_hash_value);
        4:  176:      if (print_hash_value)
    #####:  177:        printf("index = [%d][%d]\n", i, j);
        -:  178:    }
        -:  179:  }
        1:  180:  transparent_crc(g_104, "g_104", print_hash_value);
        1:  181:  transparent_crc(g_105, "g_105", print_hash_value);
        2:  182:  for (i = 0; i < 1; i++) {
        5:  183:    for (j = 0; j < 4; j++) {
        4:  184:      transparent_crc(g_130[i][j], "g_130[i][j]", print_hash_value);
        4:  185:      if (print_hash_value)
    #####:  186:        printf("index = [%d][%d]\n", i, j);
        -:  187:    }
        -:  188:  }
        1:  189:  transparent_crc(g_138, "g_138", print_hash_value);
        1:  190:  transparent_crc(g_149, "g_149", print_hash_value);
        1:  191:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  192:  return 0;
        -:  193:}

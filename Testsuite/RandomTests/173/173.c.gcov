        -:    0:Source:173.c
        -:    0:Graph:173.gcno
        -:    0:Data:173.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_5[5][5] = {{7L, 0xC3EEE2FDL, 0xC3EEE2FDL, 7L, 7L}, {(-10L), 1L, (-10L), 1L, (-10L)}, {7L, 7L, 0xC3EEE2FDL, 0xC3EEE2FDL, 7L}, {0x1F1EB32AL, 1L, 0x1F1EB32AL, 1L, 0x1F1EB32AL}, {7L, 0xC3EEE2FDL, 0xC3EEE2FDL, 7L, 7L}};
        -:    7:static int32_t *g_4 = &g_5[2][4];
        -:    8:static int32_t g_6[3] = {0x5C285CE9L, 0x5C285CE9L, 0x5C285CE9L};
        -:    9:static volatile int32_t g_7 = (-9L);
        -:   10:static int32_t g_8 = 0L;
        -:   11:
        -:   12:static int32_t func_1(void);
        -:   13:static int32_t *const func_2(int32_t *p_3);
        -:   14:
        1:   15:static int32_t func_1(void) {
        1:   16:  uint64_t l_37 = 1UL;
        1:   17:  g_4 = func_2(g_4);
        1:   18:  return l_37;
        -:   19:}
        -:   20:
        1:   21:static int32_t *const func_2(int32_t *p_3) {
        1:   22:  int8_t l_19 = 0xC5L;
        1:   23:  int8_t l_25 = 0x51L;
        1:   24:  int32_t l_33 = 0x19924203L;
        6:   25:  for (g_6[0] = 4; (g_6[0] >= 0); g_6[0] -= 1) {
        5:   26:    uint32_t l_24 = 0x00B0881DL;
       25:   27:    for (g_8 = 1; (g_8 <= 4); g_8 += 1) {
       20:   28:      uint64_t l_26 = 18446744073709551615UL;
        -:   29:      int i, j;
      20*:   30:      g_5[g_6[0]][g_6[0]] = (safe_mul_func_int32_t_s_s(((safe_sub_func_int8_t_s_s((safe_mul_func_int8_t_s_s((g_5[g_8][g_8] == (safe_mod_func_uint64_t_u_u((g_5[g_8][g_8], (((((g_7 >= (safe_mul_func_int64_t_s_s(g_6[0], ((l_19 && ((((safe_rshift_func_int64_t_s_u((safe_sub_func_uint32_t_u_u(l_24, (g_5[2][4] == g_5[2][4]))), 30)) || ((((g_5[1][0] ^ l_19), l_24) & g_5[g_8][g_8]), g_6[2])) & g_6[0]) ^ l_25)) <= g_5[2][4])))), p_3) == &g_6[2]), l_26) == l_24)), g_8))), g_8)), g_5[g_8][g_8])) >= 0xC5A4A104L), 0xF6C5533FL));
        -:   31:    }
       25:   32:    for (l_24 = 1; (l_24 <= 4); l_24 += 1) {
       20:   33:      int32_t *l_27 = &g_5[2][4];
       20:   34:      int32_t *l_28 = &g_5[g_6[0]][g_6[0]];
       20:   35:      int32_t *l_29 = (void *)0;
       20:   36:      int32_t *l_30 = &g_5[3][3];
       20:   37:      int32_t *l_31 = (void *)0;
        -:   38:      int32_t *l_32[3];
       20:   39:      uint32_t l_34 = 1UL;
        -:   40:      int i, j;
       80:   41:      for (i = 0; i < 3; i++)
       60:   42:        l_32[i] = &g_5[l_24][l_24];
       20:   43:      ++l_34;
        -:   44:    }
        -:   45:  }
        1:   46:  (*g_4) = (*p_3);
        1:   47:  return &g_8;
        -:   48:}
        -:   49:
        1:   50:int main(int argc, char *argv[]) {
        -:   51:  int i, j;
        1:   52:  int print_hash_value = 0;
       1*:   53:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   54:    print_hash_value = 1;
        1:   55:  platform_main_begin();
        1:   56:  crc32_gentab();
        1:   57:  func_1();
        6:   58:  for (i = 0; i < 5; i++) {
       30:   59:    for (j = 0; j < 5; j++) {
       25:   60:      transparent_crc(g_5[i][j], "g_5[i][j]", print_hash_value);
       25:   61:      if (print_hash_value)
    #####:   62:        printf("index = [%d][%d]\n", i, j);
        -:   63:    }
        -:   64:  }
        4:   65:  for (i = 0; i < 3; i++) {
        3:   66:    transparent_crc(g_6[i], "g_6[i]", print_hash_value);
        3:   67:    if (print_hash_value)
    #####:   68:      printf("index = [%d]\n", i);
        -:   69:  }
        1:   70:  transparent_crc(g_7, "g_7", print_hash_value);
        1:   71:  transparent_crc(g_8, "g_8", print_hash_value);
        1:   72:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   73:  return 0;
        -:   74:}

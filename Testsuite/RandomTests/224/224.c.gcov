        -:    0:Source:224.c
        -:    0:Graph:224.gcno
        -:    0:Data:224.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int64_t g_3 = 6L;
        -:    7:static uint8_t g_20[4] = {255UL, 255UL, 255UL, 255UL};
        -:    8:static int64_t g_23[5][4] = {{0xD816F93BD5DE1FC6LL, 0xD816F93BD5DE1FC6LL, 0x718BD850270F9E3DLL, 0xD816F93BD5DE1FC6LL}, {0xD816F93BD5DE1FC6LL, (-2L), (-2L), 0xD816F93BD5DE1FC6LL}, {(-2L), 0xD816F93BD5DE1FC6LL, (-2L), (-2L)}, {0xD816F93BD5DE1FC6LL, 0xD816F93BD5DE1FC6LL, 0x718BD850270F9E3DLL, 0xD816F93BD5DE1FC6LL}, {0xD816F93BD5DE1FC6LL, (-2L), (-2L), 0xD816F93BD5DE1FC6LL}};
        -:    9:static int64_t g_27[2][3][2] = {{{0xDB6084EDC0223DECLL, 0xDB6084EDC0223DECLL}, {0xDB6084EDC0223DECLL, 0xDB6084EDC0223DECLL}, {0xDB6084EDC0223DECLL, 0xDB6084EDC0223DECLL}}, {{0xDB6084EDC0223DECLL, 0xDB6084EDC0223DECLL}, {0xDB6084EDC0223DECLL, 0xDB6084EDC0223DECLL}, {0xDB6084EDC0223DECLL, 0xDB6084EDC0223DECLL}}};
        -:   10:static int32_t g_31 = (-5L);
        -:   11:static volatile int64_t g_45[4] = {(-9L), (-9L), (-9L), (-9L)};
        -:   12:static volatile int64_t *g_44 = &g_45[3];
        -:   13:static volatile int64_t *volatile *g_43 = &g_44;
        -:   14:static uint16_t g_47 = 0xB0DEL;
        -:   15:static int32_t g_49 = 0xA52FA57AL;
        -:   16:
        -:   17:static uint32_t func_1(void);
        -:   18:static const uint64_t func_9(int16_t p_10, int32_t p_11, int16_t p_12, uint8_t p_13, uint32_t p_14);
        -:   19:
        1:   20:static uint32_t func_1(void) {
        1:   21:  uint8_t l_4 = 250UL;
        1:   22:  uint64_t l_15 = 3UL;
        1:   23:  int64_t *l_21 = (void *)0;
        1:   24:  int64_t *l_22 = &g_23[1][3];
        1:   25:  int64_t *l_24 = (void *)0;
        1:   26:  int64_t *l_25 = (void *)0;
        1:   27:  int64_t *l_26 = &g_27[0][2][1];
        1:   28:  int64_t l_28 = 1L;
        1:   29:  int32_t l_50 = (-1L);
       1*:   30:  l_50 = (!((l_4 = g_3) <= (safe_rshift_func_int8_t_s_u((safe_add_func_uint64_t_u_u(func_9(l_15, (((safe_add_func_int32_t_s_s((((l_15 || ((l_15 >= (safe_mod_func_int32_t_s_s((g_20[1] = 1L), (((*l_22) |= ((l_15 ^ g_3) & l_15)) || (((*l_26) = ((*l_22) = l_15)) || (-4L)))))), g_3)) ^ 0x281CL) >= g_3), l_28)) ^ g_3) && 1L), l_28, l_15, g_3), 0x75881DD571B4D09DLL)), 2))));
        1:   31:  return g_47;
        -:   32:}
        -:   33:
        1:   34:static const uint64_t func_9(int16_t p_10, int32_t p_11, int16_t p_12, uint8_t p_13, uint32_t p_14) {
        1:   35:  const int64_t *l_30 = &g_27[0][2][1];
        1:   36:  const int64_t **l_29 = &l_30;
        -:   37:  uint64_t l_33[3];
        -:   38:  int64_t *l_37[3];
        -:   39:  int64_t **l_36[1];
        1:   40:  int64_t ***l_38 = (void *)0;
        1:   41:  int64_t ***l_39 = &l_36[0];
        1:   42:  int64_t ***l_40 = (void *)0;
        1:   43:  int64_t **l_42 = &l_37[2];
        1:   44:  int64_t ***l_41 = &l_42;
        1:   45:  uint16_t *l_46 = &g_47;
        1:   46:  int32_t *l_48 = &g_49;
        -:   47:  int i;
        4:   48:  for (i = 0; i < 3; i++)
        3:   49:    l_33[i] = 0xD8EB7BFBC35CF455LL;
        4:   50:  for (i = 0; i < 3; i++)
        3:   51:    l_37[i] = &g_23[2][2];
        2:   52:  for (i = 0; i < 1; i++)
        1:   53:    l_36[i] = &l_37[1];
        1:   54:  l_29 = l_29;
       1*:   55:  (*l_48) = (((g_31 = g_20[1]) == ((0xDEFCL | ((safe_unary_minus_func_int32_t_s(((g_27[0][2][1] > ((((((l_33[0], (((void *)0 == (*l_29)) >= p_10)) != (safe_rshift_func_int8_t_s_s((((*l_46) = ((l_33[0], ((((*l_41) = ((*l_39) = l_36[0])) == g_43) | l_33[0])) || 0x2BAB2BD6L)) | g_23[4][2]), l_33[2]))) > g_23[1][3]), (*l_39)) != &g_44) ^ l_33[0])) < 0x90942075L))) < g_27[0][2][0])), l_33[0])) | l_33[0]);
        1:   56:  return (*l_48);
        -:   57:}
        -:   58:
        1:   59:int main(int argc, char *argv[]) {
        -:   60:  int i, j, k;
        1:   61:  int print_hash_value = 0;
       1*:   62:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   63:    print_hash_value = 1;
        1:   64:  platform_main_begin();
        1:   65:  crc32_gentab();
        1:   66:  func_1();
        1:   67:  transparent_crc(g_3, "g_3", print_hash_value);
        5:   68:  for (i = 0; i < 4; i++) {
        4:   69:    transparent_crc(g_20[i], "g_20[i]", print_hash_value);
        4:   70:    if (print_hash_value)
    #####:   71:      printf("index = [%d]\n", i);
        -:   72:  }
        6:   73:  for (i = 0; i < 5; i++) {
       25:   74:    for (j = 0; j < 4; j++) {
       20:   75:      transparent_crc(g_23[i][j], "g_23[i][j]", print_hash_value);
       20:   76:      if (print_hash_value)
    #####:   77:        printf("index = [%d][%d]\n", i, j);
        -:   78:    }
        -:   79:  }
        3:   80:  for (i = 0; i < 2; i++) {
        8:   81:    for (j = 0; j < 3; j++) {
       18:   82:      for (k = 0; k < 2; k++) {
       12:   83:        transparent_crc(g_27[i][j][k], "g_27[i][j][k]", print_hash_value);
       12:   84:        if (print_hash_value)
    #####:   85:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   86:      }
        -:   87:    }
        -:   88:  }
        1:   89:  transparent_crc(g_31, "g_31", print_hash_value);
        5:   90:  for (i = 0; i < 4; i++) {
        4:   91:    transparent_crc(g_45[i], "g_45[i]", print_hash_value);
        4:   92:    if (print_hash_value)
    #####:   93:      printf("index = [%d]\n", i);
        -:   94:  }
        1:   95:  transparent_crc(g_47, "g_47", print_hash_value);
        1:   96:  transparent_crc(g_49, "g_49", print_hash_value);
        1:   97:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   98:  return 0;
        -:   99:}

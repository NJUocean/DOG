        -:    0:Source:824.c
        -:    0:Graph:824.gcno
        -:    0:Data:824.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_3 = 0xB770A77CL;
        -:    7:static volatile int32_t g_4[2][1][3] = {{{(-7L), 0x8AFA2FAFL, (-7L)}}, {{(-7L), 0x8AFA2FAFL, (-7L)}}};
        -:    8:static int32_t g_5 = (-1L);
        -:    9:static int32_t g_6 = 0x80CA9F8DL;
        -:   10:static int32_t *const *volatile g_10 = (void *)0;
        -:   11:static int32_t g_14[2][1][3] = {{{(-2L), 0L, (-2L)}}, {{(-2L), 0L, (-2L)}}};
        -:   12:static int32_t g_25 = 0xD2321210L;
        -:   13:static int32_t **g_35 = (void *)0;
        -:   14:static int32_t *g_39 = &g_25;
        -:   15:static int32_t *g_40[4][1] = {{&g_14[1][0][2]}, {&g_25}, {&g_14[1][0][2]}, {&g_25}};
        -:   16:
        -:   17:static int64_t func_1(void);
        -:   18:static int32_t *func_7(int32_t *const p_8);
        -:   19:
        1:   20:static int64_t func_1(void) {
        -:   21:  uint32_t l_2[1];
        1:   22:  int32_t *const l_9 = (void *)0;
        1:   23:  int32_t l_45 = 0xA21DEC74L;
        1:   24:  int32_t l_47 = 0x5F25AD92L;
        1:   25:  int32_t l_49 = 0x0040642FL;
        1:   26:  int32_t l_50[2][4] = {{1L, 1L, 1L, 1L}, {1L, 1L, 1L, 1L}};
        -:   27:  int i, j;
        2:   28:  for (i = 0; i < 1; i++)
        1:   29:    l_2[i] = 4294967295UL;
       1*:   30:  for (g_5 = 0; (g_5 >= 0); g_5 -= 1) {
        1:   31:    for (g_6 = 0; (g_6 >= 0); g_6 -= 1) {
        -:   32:      int i;
        1:   33:      return l_2[g_5];
        -:   34:    }
    #####:   35:    g_40[3][0] = (g_39 = func_7(l_9));
    #####:   36:    for (g_25 = 0; (g_25 >= 0); g_25 -= 1) {
        -:   37:      int i;
    #####:   38:      return l_2[g_5];
        -:   39:    }
        -:   40:  }
    #####:   41:  for (g_25 = (-19); (g_25 >= 0); g_25 = safe_add_func_int8_t_s_s(g_25, 7)) {
    #####:   42:    int32_t *l_43 = &g_5;
    #####:   43:    int32_t *l_44 = &g_14[0][0][0];
    #####:   44:    int32_t *l_46 = &g_14[0][0][2];
        -:   45:    int32_t *l_48[1][3];
    #####:   46:    int32_t l_51 = 0x153CDCE3L;
    #####:   47:    uint16_t l_52 = 0UL;
        -:   48:    int i, j;
    #####:   49:    for (i = 0; i < 1; i++) {
    #####:   50:      for (j = 0; j < 3; j++)
    #####:   51:        l_48[i][j] = &g_6;
        -:   52:    }
    #####:   53:    --l_52;
        -:   54:  }
    #####:   55:  return g_4[0][0][1];
        -:   56:}
        -:   57:
    #####:   58:static int32_t *func_7(int32_t *const p_8) {
    #####:   59:  int32_t *const l_20 = &g_6;
        -:   60:  int32_t *l_38[3];
        -:   61:  int i;
    #####:   62:  for (i = 0; i < 3; i++)
    #####:   63:    l_38[i] = &g_5;
    #####:   64:lbl_13:
    #####:   65:  g_10 = g_10;
    #####:   66:  for (g_6 = 0; (g_6 != 24); g_6 = safe_add_func_uint32_t_u_u(g_6, 4)) {
    #####:   67:    uint64_t l_15 = 0xD402DA3C3D21462CLL;
    #####:   68:    uint16_t l_22 = 65530UL;
    #####:   69:    int32_t l_28 = 0x8ACC167DL;
    #####:   70:    uint16_t l_34 = 0xBB1DL;
    #####:   71:    if (g_6)
    #####:   72:      goto lbl_13;
    #####:   73:    for (g_14[0][0][0] = 0; (g_14[0][0][0] <= 0); g_14[0][0][0] += 1) {
    #####:   74:      uint32_t l_29 = 0xE695EF2BL;
    #####:   75:      int32_t ***l_36 = &g_35;
    #####:   76:      int32_t *l_37 = &l_28;
    #####:   77:      if ((l_22 |= ((l_15 >= (safe_mod_func_int32_t_s_s(0xFFD03B15L, l_15))) || (((void *)0 == l_20) > (!3L))))) {
    #####:   78:        int8_t l_23 = (-5L);
    #####:   79:        int32_t *l_24 = &g_25;
    #####:   80:        int32_t *l_26 = &g_25;
    #####:   81:        int32_t *l_27[5][2][1] = {{{&g_25}, {(void *)0}}, {{&g_25}, {(void *)0}}, {{&g_25}, {(void *)0}}, {{&g_25}, {(void *)0}}, {{&g_25}, {(void *)0}}};
        -:   82:        int i, j, k;
    #####:   83:        ++l_29;
        -:   84:      } else {
        -:   85:        int32_t *l_32[1];
    #####:   86:        int32_t **l_33 = &l_32[0];
        -:   87:        int i;
    #####:   88:        for (i = 0; i < 1; i++)
    #####:   89:          l_32[i] = (void *)0;
    #####:   90:        (*l_33) = l_32[0];
        -:   91:      }
    #####:   92:      (*l_37) |= (((l_20 == &l_28) | (l_34 = 0x2ED4L)) == (&p_8 != ((*l_36) = g_35)));
    #####:   93:      for (l_22 = 0; (l_22 <= 0); l_22 += 1) {
    #####:   94:        return l_38[1];
        -:   95:      }
        -:   96:    }
        -:   97:  }
    #####:   98:  return l_38[1];
        -:   99:}
        -:  100:
        1:  101:int main(int argc, char *argv[]) {
        -:  102:  int i, j, k;
        1:  103:  int print_hash_value = 0;
       1*:  104:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  105:    print_hash_value = 1;
        1:  106:  platform_main_begin();
        1:  107:  crc32_gentab();
        1:  108:  func_1();
        1:  109:  transparent_crc(g_3, "g_3", print_hash_value);
        3:  110:  for (i = 0; i < 2; i++) {
        4:  111:    for (j = 0; j < 1; j++) {
        8:  112:      for (k = 0; k < 3; k++) {
        6:  113:        transparent_crc(g_4[i][j][k], "g_4[i][j][k]", print_hash_value);
        6:  114:        if (print_hash_value)
    #####:  115:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  116:      }
        -:  117:    }
        -:  118:  }
        1:  119:  transparent_crc(g_5, "g_5", print_hash_value);
        1:  120:  transparent_crc(g_6, "g_6", print_hash_value);
        3:  121:  for (i = 0; i < 2; i++) {
        4:  122:    for (j = 0; j < 1; j++) {
        8:  123:      for (k = 0; k < 3; k++) {
        6:  124:        transparent_crc(g_14[i][j][k], "g_14[i][j][k]", print_hash_value);
        6:  125:        if (print_hash_value)
    #####:  126:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  127:      }
        -:  128:    }
        -:  129:  }
        1:  130:  transparent_crc(g_25, "g_25", print_hash_value);
        1:  131:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  132:  return 0;
        -:  133:}

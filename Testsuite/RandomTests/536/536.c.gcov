        -:    0:Source:536.c
        -:    0:Graph:536.gcno
        -:    0:Data:536.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int16_t g_2 = 0x2061L;
        -:    7:static uint32_t g_5 = 0xCC2FDCBAL;
        -:    8:static int16_t g_7 = 6L;
        -:    9:static int16_t g_15[4][1] = {{6L}, {0x1022L}, {6L}, {0x1022L}};
        -:   10:static int16_t *g_14[2] = {&g_15[3][0], &g_15[3][0]};
        -:   11:static int32_t g_23[2] = {0L, 0L};
        -:   12:static const int32_t *g_22 = &g_23[0];
        -:   13:static int32_t g_24 = 0xDB39523DL;
        -:   14:static int32_t g_25 = 3L;
        -:   15:static uint32_t g_48[5][5][4] = {{{4294967292UL, 0x6A8ACDD1L, 4294967292UL, 0xAF849FB9L}, {4294967292UL, 0xAF849FB9L, 0xAF849FB9L, 4294967292UL}, {8UL, 0xAF849FB9L, 1UL, 0xAF849FB9L}, {0xAF849FB9L, 0x6A8ACDD1L, 1UL, 1UL}, {8UL, 8UL, 0xAF849FB9L, 1UL}},
        -:   16:                                 {{4294967292UL, 0x6A8ACDD1L, 4294967292UL, 0xAF849FB9L}, {4294967292UL, 0xAF849FB9L, 0xAF849FB9L, 4294967292UL}, {8UL, 0xAF849FB9L, 1UL, 0xAF849FB9L}, {0xAF849FB9L, 0x6A8ACDD1L, 1UL, 1UL}, {8UL, 8UL, 4294967292UL, 0x6A8ACDD1L}},
        -:   17:                                 {{1UL, 8UL, 1UL, 4294967292UL}, {1UL, 4294967292UL, 4294967292UL, 1UL}, {0xAF849FB9L, 4294967292UL, 0x6A8ACDD1L, 4294967292UL}, {4294967292UL, 8UL, 0x6A8ACDD1L, 0x6A8ACDD1L}, {0xAF849FB9L, 0xAF849FB9L, 4294967292UL, 0x6A8ACDD1L}},
        -:   18:                                 {{1UL, 8UL, 1UL, 4294967292UL}, {1UL, 4294967292UL, 4294967292UL, 1UL}, {0xAF849FB9L, 4294967292UL, 0x6A8ACDD1L, 4294967292UL}, {4294967292UL, 8UL, 0x6A8ACDD1L, 0x6A8ACDD1L}, {0xAF849FB9L, 0xAF849FB9L, 4294967292UL, 0x6A8ACDD1L}},
        -:   19:                                 {{1UL, 8UL, 1UL, 4294967292UL}, {1UL, 4294967292UL, 4294967292UL, 1UL}, {0xAF849FB9L, 4294967292UL, 0x6A8ACDD1L, 4294967292UL}, {4294967292UL, 8UL, 0x6A8ACDD1L, 0x6A8ACDD1L}, {0xAF849FB9L, 0xAF849FB9L, 4294967292UL, 0x6A8ACDD1L}}};
        -:   20:static uint16_t g_51 = 65533UL;
        -:   21:static uint8_t g_55[4][5][2] = {{{0x4CL, 0xC9L}, {0xC9L, 0x4CL}, {0xC9L, 0xC9L}, {0x4CL, 0xC9L}, {0xC9L, 0x4CL}}, {{0xC9L, 0xC9L}, {0x4CL, 0xC9L}, {0xC9L, 0x4CL}, {0xC9L, 0xC9L}, {0x4CL, 0xC9L}}, {{0xC9L, 0x4CL}, {0xC9L, 0xC9L}, {0x4CL, 0xC9L}, {0xC9L, 0x4CL}, {0xC9L, 0xC9L}}, {{0x4CL, 0xC9L}, {0xC9L, 0x4CL}, {0xC9L, 0xC9L}, {0x4CL, 0xC9L}, {0xC9L, 0x4CL}}};
        -:   22:static int32_t g_59 = (-7L);
        -:   23:
        -:   24:static uint8_t func_1(void);
        -:   25:static int16_t func_11(int16_t *p_12, uint32_t p_13);
        -:   26:
        1:   27:static uint8_t func_1(void) {
        1:   28:  int16_t l_4[5] = {0x1867L, 0x1867L, 0x1867L, 0x1867L, 0x1867L};
        1:   29:  int16_t *l_6 = &g_7;
        1:   30:  int32_t l_8 = 0x391CB4E7L;
        1:   31:  int16_t **l_16 = &g_14[0];
        -:   32:  uint32_t l_57[3];
        1:   33:  int32_t *l_58[5][4][5] = {{{&g_59, &g_59, &g_59, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}}, {{&g_59, &g_59, &g_59, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}}, {{&g_59, &g_59, &g_59, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}}, {{&g_59, &g_59, &g_59, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}}, {{&g_59, &g_59, &g_59, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}, {(void *)0, &g_59, (void *)0, &g_59, &g_59}, {&g_59, &g_59, &g_59, &g_59, &g_59}}};
        -:   34:  int i, j, k;
        4:   35:  for (i = 0; i < 3; i++)
        3:   36:    l_57[i] = 4UL;
       1*:   37:  g_59 ^= ((g_2 <= (((((l_8 = (+((*l_6) |= ((l_4[3] <= g_5) > 0xBA47C9D5FAC12265LL)))) == ((safe_add_func_int16_t_s_s(func_11(((*l_16) = g_14[0]), g_5), ((l_4[3] || ((0UL == g_51) | l_4[3])) == 0x7BE4440DL))), l_57[1])) ^ g_51) >= 5L), l_57[1])) >= 0x97L);
        1:   38:  return g_2;
        -:   39:}
        -:   40:
        1:   41:static int16_t func_11(int16_t *p_12, uint32_t p_13) {
        1:   42:  int16_t **l_18 = &g_14[0];
        1:   43:  int16_t ***l_17 = &l_18;
        1:   44:  int32_t l_43 = 0xEA376659L;
        1:   45:  (*l_17) = &p_12;
        2:   46:  for (p_13 = 0; (p_13 <= 0); p_13 += 1) {
        1:   47:    const int32_t *l_19 = (void *)0;
        1:   48:    const int32_t **l_20 = (void *)0;
        -:   49:    const int32_t **l_21[5];
        -:   50:    int i;
        6:   51:    for (i = 0; i < 5; i++)
        5:   52:      l_21[i] = &l_19;
        1:   53:    g_22 = l_19;
        2:   54:    for (g_24 = 0; (g_24 >= 0); g_24 -= 1) {
        1:   55:      uint32_t l_28 = 18446744073709551610UL;
        2:   56:      for (g_25 = 0; (g_25 <= 0); g_25 += 1) {
        1:   57:        int16_t *l_31 = (void *)0;
        1:   58:        const int32_t *l_46 = &g_24;
        -:   59:        uint32_t *l_47[2][5];
        -:   60:        int32_t l_49[2];
        -:   61:        uint16_t *l_50[5];
        1:   62:        int32_t l_52 = 0x9046E0AEL;
        1:   63:        uint8_t *l_53 = (void *)0;
        1:   64:        uint8_t *l_54 = &g_55[2][2][1];
        1:   65:        int32_t *l_56 = &g_23[1];
        -:   66:        int i, j;
        3:   67:        for (i = 0; i < 2; i++) {
       12:   68:          for (j = 0; j < 5; j++)
       10:   69:            l_47[i][j] = &g_48[2][4][2];
        -:   70:        }
        3:   71:        for (i = 0; i < 2; i++)
        2:   72:          l_49[i] = 1L;
        6:   73:        for (i = 0; i < 5; i++)
        5:   74:          l_50[i] = &g_51;
       1*:   75:        (*l_56) |= (((((safe_lshift_func_uint32_t_u_u(((g_15[g_25][g_24] && l_28), ((safe_lshift_func_uint64_t_u_u(((l_31 == (((((safe_add_func_uint8_t_u_u(((*l_54) ^= ((*p_12), (safe_mul_func_uint16_t_u_u(((l_52 ^= ((safe_div_func_int8_t_s_s((~(((g_15[3][0] == p_13) <= (l_49[1] = (safe_sub_func_uint16_t_u_u((safe_mul_func_int16_t_s_s(l_43, (safe_sub_func_uint64_t_u_u(g_15[g_25][g_24], (l_46 == &g_23[0]))))), l_43)))) <= p_13)), g_24)) < (*p_12))) && (*l_46)), (*l_46))))), 0x50L)), g_48[2][4][2]) >= g_15[1][0]) || (*p_12)), (void *)0)) > (*l_46)), 13)) & (*p_12))), l_28)) == p_13), 0x562E4323L) ^ l_28) != p_13);
        -:   76:      }
        -:   77:    }
        -:   78:  }
        1:   79:  return l_43;
        -:   80:}
        -:   81:
        1:   82:int main(int argc, char *argv[]) {
        -:   83:  int i, j, k;
        1:   84:  int print_hash_value = 0;
       1*:   85:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   86:    print_hash_value = 1;
        1:   87:  platform_main_begin();
        1:   88:  crc32_gentab();
        1:   89:  func_1();
        1:   90:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   91:  transparent_crc(g_5, "g_5", print_hash_value);
        1:   92:  transparent_crc(g_7, "g_7", print_hash_value);
        5:   93:  for (i = 0; i < 4; i++) {
        8:   94:    for (j = 0; j < 1; j++) {
        4:   95:      transparent_crc(g_15[i][j], "g_15[i][j]", print_hash_value);
        4:   96:      if (print_hash_value)
    #####:   97:        printf("index = [%d][%d]\n", i, j);
        -:   98:    }
        -:   99:  }
        3:  100:  for (i = 0; i < 2; i++) {
        2:  101:    transparent_crc(g_23[i], "g_23[i]", print_hash_value);
        2:  102:    if (print_hash_value)
    #####:  103:      printf("index = [%d]\n", i);
        -:  104:  }
        1:  105:  transparent_crc(g_24, "g_24", print_hash_value);
        1:  106:  transparent_crc(g_25, "g_25", print_hash_value);
        6:  107:  for (i = 0; i < 5; i++) {
       30:  108:    for (j = 0; j < 5; j++) {
      125:  109:      for (k = 0; k < 4; k++) {
      100:  110:        transparent_crc(g_48[i][j][k], "g_48[i][j][k]", print_hash_value);
      100:  111:        if (print_hash_value)
    #####:  112:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  113:      }
        -:  114:    }
        -:  115:  }
        1:  116:  transparent_crc(g_51, "g_51", print_hash_value);
        5:  117:  for (i = 0; i < 4; i++) {
       24:  118:    for (j = 0; j < 5; j++) {
       60:  119:      for (k = 0; k < 2; k++) {
       40:  120:        transparent_crc(g_55[i][j][k], "g_55[i][j][k]", print_hash_value);
       40:  121:        if (print_hash_value)
    #####:  122:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  123:      }
        -:  124:    }
        -:  125:  }
        1:  126:  transparent_crc(g_59, "g_59", print_hash_value);
        1:  127:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  128:  return 0;
        -:  129:}

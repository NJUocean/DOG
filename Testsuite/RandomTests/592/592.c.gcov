        -:    0:Source:592.c
        -:    0:Graph:592.gcno
        -:    0:Data:592.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U2 {
        -:    7:  const int8_t f0;
        -:    8:  int32_t f1;
        -:    9:  uint8_t f2;
        -:   10:};
        -:   11:
        -:   12:static const volatile uint8_t g_4 = 255UL;
        -:   13:static int8_t g_16 = 0x75L;
        -:   14:static const union U2 g_22 = {0x08L};
        -:   15:static uint16_t g_26[3][4][1] = {{{65526UL}, {0xA608L}, {0xDDBFL}, {65535UL}}, {{0xDDBFL}, {0xA608L}, {65526UL}, {0xA608L}}, {{0xDDBFL}, {65535UL}, {0xDDBFL}, {0xA608L}}};
        -:   16:static uint16_t g_30[2][3][3] = {{{0xBF74L, 2UL, 0UL}, {8UL, 1UL, 8UL}, {8UL, 0xBF74L, 1UL}}, {{0xBF74L, 8UL, 8UL}, {1UL, 8UL, 0UL}, {2UL, 0xBF74L, 0x300CL}}};
        -:   17:static uint16_t *g_29 = &g_30[0][0][0];
        -:   18:static uint32_t g_40[3] = {0x7EC53A21L, 0x7EC53A21L, 0x7EC53A21L};
        -:   19:static int64_t g_42 = 0x15BFEB1EC6C04840LL;
        -:   20:static uint32_t g_49 = 0x34ECA669L;
        -:   21:static volatile int32_t g_86 = 1L;
        -:   22:static volatile int32_t *g_85 = &g_86;
        -:   23:static volatile int32_t g_89[3][4] = {{0x7B8CEE11L, 0L, 0x7B8CEE11L, 3L}, {0x7B8CEE11L, 3L, 3L, 0x7B8CEE11L}, {0x41AB8767L, 3L, (-1L), 3L}};
        -:   24:static int32_t g_93 = 4L;
        -:   25:
        -:   26:static uint32_t func_1(void);
        -:   27:static int8_t func_7(uint32_t p_8, uint32_t p_9);
        -:   28:
        1:   29:static uint32_t func_1(void) {
        1:   30:  union U2 l_10 = {0xF8L};
        1:   31:  int8_t l_13 = 0xB2L;
        1:   32:  int32_t *l_92 = &g_93;
        1:   33:  (*l_92) ^= (1UL == (((safe_rshift_func_int16_t_s_s((-8L), ((g_4 > ((safe_mod_func_int8_t_s_s(func_7((l_10, (safe_mul_func_int64_t_s_s(l_13, (safe_rshift_func_int16_t_s_u(g_16, 9))))), g_16), (safe_sub_func_uint32_t_u_u(4294967286UL, l_13)))) == g_22.f0)) < 248UL))) < l_13), l_10.f0));
        1:   34:  return g_26[0][2][0];
        -:   35:}
        -:   36:
        1:   37:static int8_t func_7(uint32_t p_8, uint32_t p_9) {
        1:   38:  uint16_t *l_25 = &g_26[0][0][0];
        1:   39:  const uint16_t *l_36 = (void *)0;
        1:   40:  uint16_t **l_37 = &g_29;
        1:   41:  uint16_t *l_38 = &g_26[0][0][0];
        1:   42:  uint32_t *l_39 = &g_40[2];
        1:   43:  int32_t l_41[4][2] = {{0x1D1A932DL, 0x1D1A932DL}, {0x1D1A932DL, 0x1D1A932DL}, {0x1D1A932DL, 0x1D1A932DL}, {0x1D1A932DL, 0x1D1A932DL}};
        -:   44:  int32_t l_58[1][4];
        1:   45:  int32_t **l_59 = (void *)0;
        1:   46:  int16_t l_81 = 0L;
        -:   47:  int i, j;
        2:   48:  for (i = 0; i < 1; i++) {
        5:   49:    for (j = 0; j < 4; j++)
        4:   50:      l_58[i][j] = (-1L);
        -:   51:  }
       1*:   52:  if ((+(safe_sub_func_int64_t_s_s(((safe_mod_func_int32_t_s_s(((g_22, (safe_lshift_func_uint16_t_u_u(((((*l_25)--) >= ((void *)0 != g_29)), (((*l_39) |= (((safe_add_func_int16_t_s_s(((safe_rshift_func_int32_t_s_s((~0x06D9E96BB6454879LL), g_30[0][1][1])) == (l_36 != ((*l_37) = &g_26[0][0][0]))), (((void *)0 == l_25), 65534UL))), l_38) == &g_26[2][0][0])) || l_41[2][1])), 11))) >= 0x416DA84B505D01CDLL), g_42)) == 0x6FL), l_41[0][1])))) {
        1:   53:    int32_t *l_48[5][1][5] = {{{&l_41[1][0], &l_41[2][1], &l_41[1][0], &l_41[3][0], &l_41[3][0]}}, {{&l_41[0][0], &l_41[2][1], &l_41[0][0], &l_41[2][1], &l_41[2][1]}}, {{&l_41[1][0], &l_41[2][1], &l_41[1][0], &l_41[3][0], &l_41[3][0]}}, {{&l_41[0][0], &l_41[2][1], &l_41[0][0], &l_41[2][1], &l_41[2][1]}}, {{&l_41[1][0], &l_41[2][1], &l_41[1][0], &l_41[3][0], &l_41[3][0]}}};
        -:   54:    int i, j, k;
       42:   55:    for (g_16 = 29; (g_16 != (-12)); --g_16) {
       41:   56:      int32_t *const l_45 = &l_41[2][1];
       41:   57:      int32_t *l_47 = &l_41[2][0];
       41:   58:      int32_t **l_46 = &l_47;
       41:   59:      (*l_46) = l_45;
       41:   60:      if (g_40[2])
       41:   61:        continue;
        -:   62:    }
        1:   63:    g_49--;
        -:   64:  } else {
    #####:   65:    int32_t *l_56 = (void *)0;
    #####:   66:    int32_t l_57 = 0L;
    #####:   67:    uint16_t *l_60 = &g_26[1][0][0];
    #####:   68:    int64_t *l_69 = &g_42;
    #####:   69:    int64_t *l_77 = (void *)0;
    #####:   70:    volatile int32_t *l_88 = &g_89[0][1];
    #####:   71:    if ((safe_mul_func_int32_t_s_s(0x7B8A5F03L, (l_41[2][1] < ((((((l_58[0][2] = (l_57 = p_8)) < (((((void *)0 != l_59), l_60) == ((safe_sub_func_uint32_t_u_u(((0L | ((safe_div_func_uint8_t_u_u((safe_lshift_func_uint16_t_u_s((safe_div_func_uint16_t_u_u((g_16 <= ((*l_69) &= (l_56 != (void *)0))), (*g_29))), 9)), g_40[2])) && p_8)), g_22.f0), p_9)), (void *)0)) & g_30[0][0][0])) < p_8), g_40[2]), p_9) >= p_9))))) {
    #####:   72:      int32_t *l_70 = &l_41[2][1];
    #####:   73:      int32_t **l_71 = &l_70;
    #####:   74:      (*l_71) = l_70;
        -:   75:    } else {
    #####:   76:      int64_t **l_76 = &l_69;
    #####:   77:      int64_t **l_78 = &l_77;
    #####:   78:      int32_t l_82 = (-6L);
    #####:   79:      l_82 = ((l_81 &= ((((((((((safe_mod_func_uint32_t_u_u((safe_mul_func_int16_t_s_s((0L == (((g_42, ((*l_76) = &g_42)) == ((*l_78) = l_77)) == (p_8 || g_30[1][1][2]))), (safe_rshift_func_uint16_t_u_s((p_9 || ((((p_9 == p_9), g_26[0][0][0]) & (-8L)) <= g_22.f0)), p_8)))), g_26[2][3][0])) > 0xD6CD47B9DA0115B5LL), l_60) != &g_26[0][0][0]) < 0xE5F43C7198F9F05BLL) == g_40[1]) ^ 1UL) >= p_8) && 3L) & 0x9C35E3C92AC9E043LL)), g_49);
    #####:   80:      for (l_57 = 0; (l_57 >= 3); ++l_57) {
    #####:   81:        volatile int32_t **l_87 = &g_85;
    #####:   82:        (*l_87) = g_85;
    #####:   83:        l_88 = g_85;
        -:   84:      }
        -:   85:    }
        -:   86:  }
        1:   87:  return g_30[0][0][0];
        -:   88:}
        -:   89:
        1:   90:int main(int argc, char *argv[]) {
        -:   91:  int i, j, k;
        1:   92:  int print_hash_value = 0;
       1*:   93:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   94:    print_hash_value = 1;
        1:   95:  platform_main_begin();
        1:   96:  crc32_gentab();
        1:   97:  func_1();
        1:   98:  transparent_crc(g_4, "g_4", print_hash_value);
        1:   99:  transparent_crc(g_16, "g_16", print_hash_value);
        1:  100:  transparent_crc(g_22.f0, "g_22.f0", print_hash_value);
        4:  101:  for (i = 0; i < 3; i++) {
       15:  102:    for (j = 0; j < 4; j++) {
       24:  103:      for (k = 0; k < 1; k++) {
       12:  104:        transparent_crc(g_26[i][j][k], "g_26[i][j][k]", print_hash_value);
       12:  105:        if (print_hash_value)
    #####:  106:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  107:      }
        -:  108:    }
        -:  109:  }
        3:  110:  for (i = 0; i < 2; i++) {
        8:  111:    for (j = 0; j < 3; j++) {
       24:  112:      for (k = 0; k < 3; k++) {
       18:  113:        transparent_crc(g_30[i][j][k], "g_30[i][j][k]", print_hash_value);
       18:  114:        if (print_hash_value)
    #####:  115:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  116:      }
        -:  117:    }
        -:  118:  }
        4:  119:  for (i = 0; i < 3; i++) {
        3:  120:    transparent_crc(g_40[i], "g_40[i]", print_hash_value);
        3:  121:    if (print_hash_value)
    #####:  122:      printf("index = [%d]\n", i);
        -:  123:  }
        1:  124:  transparent_crc(g_42, "g_42", print_hash_value);
        1:  125:  transparent_crc(g_49, "g_49", print_hash_value);
        1:  126:  transparent_crc(g_86, "g_86", print_hash_value);
        4:  127:  for (i = 0; i < 3; i++) {
       15:  128:    for (j = 0; j < 4; j++) {
       12:  129:      transparent_crc(g_89[i][j], "g_89[i][j]", print_hash_value);
       12:  130:      if (print_hash_value)
    #####:  131:        printf("index = [%d][%d]\n", i, j);
        -:  132:    }
        -:  133:  }
        1:  134:  transparent_crc(g_93, "g_93", print_hash_value);
        1:  135:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  136:  return 0;
        -:  137:}

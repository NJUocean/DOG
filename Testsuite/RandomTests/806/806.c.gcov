        -:    0:Source:806.c
        -:    0:Graph:806.gcno
        -:    0:Data:806.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  int16_t f0;
        -:    8:  const int16_t f1;
        -:    9:};
        -:   10:
        -:   11:static volatile int32_t g_2 = 0x6182EAC4L;
        -:   12:static int32_t g_3 = (-4L);
        -:   13:static struct S0 g_11[1][5][5] = {{{{0x722BL, 0x7B7EL}, {0L, 0x05B2L}, {0x722BL, 0x7B7EL}, {0x722BL, 0x7B7EL}, {0L, 0x05B2L}}, {{0xF498L, 0xFF29L}, {0x8F6CL, 0x18E9L}, {0x331CL, -1L}, {-9L, 0x8F98L}, {0x331CL, -1L}}, {{0L, 0x05B2L}, {0L, 0x05B2L}, {0xCD40L, 0x884CL}, {0L, 0x05B2L}, {0L, 0x05B2L}}, {{0x331CL, -1L}, {-9L, 0x8F98L}, {0x331CL, -1L}, {0x8F6CL, 0x18E9L}, {0xF498L, 0xFF29L}}, {{0L, 0x05B2L}, {0x722BL, 0x7B7EL}, {0x722BL, 0x7B7EL}, {0L, 0x05B2L}, {0x722BL, 0x7B7EL}}}};
        -:   14:static int32_t g_13 = 0xD9BA5F27L;
        -:   15:static struct S0 g_16 = {0x4B7BL, 3L};
        -:   16:static struct S0 *g_15 = &g_16;
        -:   17:
        -:   18:static struct S0 func_1(void);
        -:   19:static struct S0 *func_6(struct S0 *p_7, int32_t p_8, struct S0 *p_9);
        -:   20:
        1:   21:static struct S0 func_1(void) {
        1:   22:  struct S0 *l_10 = &g_11[0][0][1];
        2:   23:  for (g_3 = 12; (g_3 <= 12); g_3 = safe_add_func_uint16_t_u_u(g_3, 2)) {
        1:   24:    int32_t *l_12 = &g_13;
        1:   25:    g_15 = func_6(l_10, ((*l_12) &= g_11[0][0][1].f0), &g_11[0][3][0]);
        -:   26:  }
        1:   27:  return (*l_10);
        -:   28:}
        -:   29:
        1:   30:static struct S0 *func_6(struct S0 *p_7, int32_t p_8, struct S0 *p_9) {
        1:   31:  uint32_t l_14[5] = {0x37D02268L, 0x37D02268L, 0x37D02268L, 0x37D02268L, 0x37D02268L};
        -:   32:  int i;
        1:   33:  g_2 &= (l_14[1] >= l_14[1]);
        1:   34:  return &g_11[0][0][1];
        -:   35:}
        -:   36:
        1:   37:int main(int argc, char *argv[]) {
        -:   38:  int i, j, k;
        1:   39:  int print_hash_value = 0;
       1*:   40:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   41:    print_hash_value = 1;
        1:   42:  platform_main_begin();
        1:   43:  crc32_gentab();
        1:   44:  func_1();
        1:   45:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   46:  transparent_crc(g_3, "g_3", print_hash_value);
        2:   47:  for (i = 0; i < 1; i++) {
        6:   48:    for (j = 0; j < 5; j++) {
       30:   49:      for (k = 0; k < 5; k++) {
       25:   50:        transparent_crc(g_11[i][j][k].f0, "g_11[i][j][k].f0", print_hash_value);
       25:   51:        transparent_crc(g_11[i][j][k].f1, "g_11[i][j][k].f1", print_hash_value);
       25:   52:        if (print_hash_value)
    #####:   53:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   54:      }
        -:   55:    }
        -:   56:  }
        1:   57:  transparent_crc(g_13, "g_13", print_hash_value);
        1:   58:  transparent_crc(g_16.f0, "g_16.f0", print_hash_value);
        1:   59:  transparent_crc(g_16.f1, "g_16.f1", print_hash_value);
        1:   60:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   61:  return 0;
        -:   62:}

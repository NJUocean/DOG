        -:    0:Source:157.c
        -:    0:Graph:157.gcno
        -:    0:Data:157.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static const volatile int64_t g_13 = 7L;
        -:    7:static int8_t g_16 = (-8L);
        -:    8:static uint64_t g_36[2] = {0x7B38E5161E33ECDCLL, 0x7B38E5161E33ECDCLL};
        -:    9:static uint32_t g_38 = 18446744073709551607UL;
        -:   10:static uint8_t g_41 = 0x80L;
        -:   11:static int16_t g_42 = 0x54C6L;
        -:   12:static uint32_t g_44 = 1UL;
        -:   13:static int32_t **volatile g_49[5] = {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0};
        -:   14:static int32_t g_52 = 0x8A0E7B2EL;
        -:   15:static int32_t *g_51 = &g_52;
        -:   16:static int32_t **volatile g_50 = &g_51;
        -:   17:static int32_t *volatile g_54 = &g_52;
        -:   18:static uint64_t g_85 = 0UL;
        -:   19:
        -:   20:static uint32_t func_1(void);
        -:   21:static uint16_t func_6(int32_t p_7, uint32_t p_8, uint64_t p_9, int8_t p_10);
        -:   22:
        1:   23:static uint32_t func_1(void) {
        1:   24:  int16_t l_21 = 0x7BDDL;
        1:   25:  int32_t *l_37 = (void *)0;
        1:   26:  uint8_t l_40[3][1][5] = {{{4UL, 4UL, 0x86L, 4UL, 4UL}}, {{0xE3L, 0x32L, 0xE3L, 0xE3L, 0x32L}}, {{4UL, 3UL, 3UL, 4UL, 3UL}}};
        1:   27:  uint32_t *l_43 = &g_44;
        1:   28:  uint32_t l_45 = 0xEA8E4340L;
        1:   29:  int64_t l_53 = 0x888327BC4A6B1F15LL;
        1:   30:  uint16_t l_80 = 0x721FL;
        1:   31:  uint64_t l_84 = 18446744073709551614UL;
        -:   32:  int i, j, k;
       1*:   33:    if (((safe_mul_func_uint32_t_u_u((((safe_rshift_func_uint32_t_u_u(((*l_43) ^= (0xC4888999L < (g_42 = (g_41 = ((((func_6((safe_add_func_int8_t_s_s(((((((((g_13 >= ((((-6L) == (safe_rshift_func_uint32_t_u_u(((((g_16 &= 0L) != (safe_div_func_uint16_t_u_u(65535UL, (safe_lshift_func_int32_t_s_s(l_21, 8))))) > (safe_lshift_func_int64_t_s_u((safe_rshift_func_int64_t_s_s(0L, ((safe_mul_func_int32_t_s_s((g_38 = (safe_mul_func_uint64_t_u_u((safe_add_func_int64_t_s_s(0xE3D4752E4A6B2C4ELL, (safe_sub_func_int32_t_s_s((safe_rshift_func_uint16_t_u_u(0xCFF2L, g_36[1])), 4L)))), l_21))), 4294967295UL)) >= 0x04ACD6BAL))), l_21))) | g_36[1]), g_36[1]))) && g_36[1]) > 1L)) | g_36[1]) > 1L) && 0x520C3D8D58945CB2LL) , (-10L)) == l_21) ^ g_36[0]) > g_36[0]), 0xF8L)), g_36[0], g_36[1], g_36[0]) || l_40[0][0][3]) != g_36[1]) > 0x898791B1L) != g_36[1]))))), g_36[0])) || 1UL) >= l_45), 0xB1D00576L)) < 0x7C2923F8C0E5C5CCLL))
        -:   34:    {
        1:   35:      int32_t l_48 = 0x33DF123EL;
        1:   36:      uint64_t l_68 = 0xD2A1986173B00C6BLL;
        1:   37:      if ((g_13 != (safe_mod_func_uint32_t_u_u(g_44, l_48)))) {
        1:   38:        (*g_50) = l_37;
        1:   39:        (*g_54) = l_53;
        -:   40:      } else {
    #####:   41:        int32_t **l_55 = &l_37;
    #####:   42:        int32_t **l_56 = &g_51;
    #####:   43:        (*l_56) = ((*l_55) = (*g_50));
        -:   44:      }
       1*:   45:      for (l_21 = 0; (l_21 <= (-17)); l_21--) {
    #####:   46:        uint32_t l_69[5][1][4] = {{{0x5A07F58EL, 0x1342F278L, 0x5A07F58EL, 0UL}}, {{0x526DE3FEL, 0x0F5C685BL, 0UL, 0UL}}, {{0x1342F278L, 0x1342F278L, 4294967294UL, 0x0F5C685BL}}, {{0x0F5C685BL, 0x526DE3FEL, 4294967294UL, 0x526DE3FEL}}, {{0x1342F278L, 0x5A07F58EL, 0UL, 4294967294UL}}};
        -:   47:        int i, j, k;
    #####:   48:        for (g_16 = (-23); (g_16 != (-23)); g_16 = safe_add_func_uint32_t_u_u(g_16, 4)) {
    #####:   49:          uint8_t l_61 = 255UL;
    #####:   50:          l_61 |= 0xCFD24BD9L;
        -:   51:        }
    #####:   52:        if (((((safe_rshift_func_uint8_t_u_s((safe_mod_func_uint64_t_u_u((safe_lshift_func_int32_t_s_u(l_48, (0xE52E9AD701FB0335LL | (((void *)0 == &g_51) <= (((g_13 <= ((l_68 >= (l_69[1][0][2] > l_69[1][0][0])), 0x89175669BA90DD06LL)), l_69[1][0][2]) >= g_38))))), g_44)), g_38)) != g_41) < g_36[1]) >= l_68)) {
    #####:   53:          int32_t *l_70 = &g_52;
    #####:   54:          (*l_70) = l_68;
        -:   55:        } else {
    #####:   56:          return g_52;
        -:   57:        }
        -:   58:      }
        -:   59:    } else {
        -:   60:      uint8_t *l_73 = (void *)0;
        -:   61:      uint8_t *l_74[5][3][3] = {{{(void *)0, &l_40[0][0][3], &l_40[0][0][4]}, {&g_41, &l_40[0][0][3], (void *)0}, {&l_40[0][0][3], &l_40[0][0][4], &g_41}}, {{&l_40[2][0][3], &l_40[0][0][3], &g_41}, {&l_40[0][0][3], &l_40[0][0][3], (void *)0}, {(void *)0, &l_40[0][0][3], (void *)0}}, {{(void *)0, &l_40[0][0][4], &l_40[2][0][3]}, {&l_40[0][0][3], &l_40[0][0][3], (void *)0}, {&l_40[2][0][3], &l_40[0][0][3], (void *)0}}, {{&l_40[0][0][3], &l_40[0][0][4], &g_41}, {&l_40[2][0][3], &l_40[0][0][3], &g_41}, {&l_40[0][0][3], &l_40[0][0][3], (void *)0}}, {{(void *)0, &l_40[0][0][3], (void *)0}, {(void *)0, &l_40[0][0][4], &l_40[2][0][3]}, {&l_40[0][0][3], &l_40[0][0][3], (void *)0}}};
        -:   62:      int32_t l_75 = 0L;
        -:   63:      int32_t **l_81 = (void *)0;
        -:   64:      int32_t **l_82 = &g_51;
        -:   65:      uint32_t *l_83 = &g_44;
        -:   66:      int32_t *l_86 = &g_52;
        -:   67:      int i, j, k;
        -:   68:      (*l_86) = (g_52 ^ ((((safe_mul_func_int8_t_s_s((&g_44 == (void *)0), ((l_75 = 3UL) || ((safe_rshift_func_int64_t_s_s((safe_mul_func_uint16_t_u_u(((l_80, l_43) != ((*l_82) = &l_75)), ((((((l_83 != l_83) || g_42) <= g_52) == g_36[1]) <= l_84), g_85))), 36)), g_13)))) && g_42) & g_52) <= g_16));
        -:   69:    }
        1:   70:    return g_36[0];
        -:   71:}
        -:   72:
        1:   73:static uint16_t func_6(int32_t p_7, uint32_t p_8, uint64_t p_9, int8_t p_10) {
        1:   74:  int64_t l_39 = (-8L);
        1:   75:  return l_39;
        -:   76:}
        -:   77:
        1:   78:int main(int argc, char *argv[]) {
        -:   79:  int i;
        1:   80:  int print_hash_value = 0;
       1*:   81:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   82:    print_hash_value = 1;
        1:   83:  platform_main_begin();
        1:   84:  crc32_gentab();
        1:   85:  func_1();
        1:   86:  transparent_crc(g_13, "g_13", print_hash_value);
        1:   87:  transparent_crc(g_16, "g_16", print_hash_value);
        3:   88:  for (i = 0; i < 2; i++) {
        2:   89:    transparent_crc(g_36[i], "g_36[i]", print_hash_value);
        2:   90:    if (print_hash_value)
    #####:   91:      printf("index = [%d]\n", i);
        -:   92:  }
        1:   93:  transparent_crc(g_38, "g_38", print_hash_value);
        1:   94:  transparent_crc(g_41, "g_41", print_hash_value);
        1:   95:  transparent_crc(g_42, "g_42", print_hash_value);
        1:   96:  transparent_crc(g_44, "g_44", print_hash_value);
        1:   97:  transparent_crc(g_52, "g_52", print_hash_value);
        1:   98:  transparent_crc(g_85, "g_85", print_hash_value);
        1:   99:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  100:  return 0;
        -:  101:}

        -:    0:Source:672.c
        -:    0:Graph:672.gcno
        -:    0:Data:672.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_2 = (-1L);
        -:    7:static volatile int32_t g_3 = 0x05BAF43BL;
        -:    8:static volatile int32_t g_4 = (-1L);
        -:    9:static volatile int32_t g_5 = 1L;
        -:   10:static int32_t g_6[5] = {0x97EEDE0BL, 0x97EEDE0BL, 0x97EEDE0BL, 0x97EEDE0BL, 0x97EEDE0BL};
        -:   11:static int8_t g_10 = 0x44L;
        -:   12:
        -:   13:static uint16_t func_1(void);
        -:   14:
        1:   15:static uint16_t func_1(void) {
       10:   16:  for (g_6[2] = 0; (g_6[2] != 9); ++g_6[2]) {
        9:   17:    uint32_t l_9 = 0x07D7C118L;
       9*:   18:    g_10 |= (g_2 || (g_3 && l_9));
        -:   19:  }
        1:   20:  return g_6[1];
        -:   21:}
        -:   22:
        1:   23:int main(int argc, char *argv[]) {
        -:   24:  int i;
        1:   25:  int print_hash_value = 0;
       1*:   26:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   27:    print_hash_value = 1;
        1:   28:  platform_main_begin();
        1:   29:  crc32_gentab();
        1:   30:  func_1();
        1:   31:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   32:  transparent_crc(g_3, "g_3", print_hash_value);
        1:   33:  transparent_crc(g_4, "g_4", print_hash_value);
        1:   34:  transparent_crc(g_5, "g_5", print_hash_value);
        6:   35:  for (i = 0; i < 5; i++) {
        5:   36:    transparent_crc(g_6[i], "g_6[i]", print_hash_value);
        5:   37:    if (print_hash_value)
    #####:   38:      printf("index = [%d]\n", i);
        -:   39:  }
        1:   40:  transparent_crc(g_10, "g_10", print_hash_value);
        1:   41:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   42:  return 0;
        -:   43:}

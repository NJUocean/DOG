        -:    0:Source:978.c
        -:    0:Graph:978.gcno
        -:    0:Data:978.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int64_t g_9 = 0x4BF8F0AA6E6F7FBFLL;
        -:    7:static uint8_t g_11 = 1UL;
        -:    8:static uint8_t g_14 = 255UL;
        -:    9:static volatile uint8_t *volatile *volatile g_22 = (void *)0;
        -:   10:static int32_t g_24[1][4][1] = {{{1L}, {(-4L)}, {1L}, {(-4L)}}};
        -:   11:static uint8_t g_35 = 5UL;
        -:   12:static int64_t g_63[1][1][1] = {{{(-1L)}}};
        -:   13:static uint16_t g_66[3] = {65531UL, 65531UL, 65531UL};
        -:   14:static int32_t *g_74 = &g_24[0][0][0];
        -:   15:static int32_t **volatile g_73 = &g_74;
        -:   16:static uint32_t g_84 = 0xA549F135L;
        -:   17:static uint16_t g_91 = 1UL;
        -:   18:static uint8_t g_92 = 0xAAL;
        -:   19:
        -:   20:static uint64_t func_1(void);
        -:   21:static uint8_t *func_16(int8_t p_17);
        -:   22:
        1:   23:static uint64_t func_1(void) {
        1:   24:  uint32_t l_6 = 0x074DD032L;
        1:   25:  uint8_t *l_10 = &g_11;
        1:   26:  uint8_t *l_12 = (void *)0;
        1:   27:  uint8_t *l_13 = &g_14;
        1:   28:  uint8_t **l_15 = &l_12;
        1:   29:  int32_t l_20 = 6L;
        1:   30:  uint8_t *l_37 = (void *)0;
        1:   31:  uint8_t **l_36 = &l_37;
        1:   32:  int32_t l_105 = 1L;
        1:   33:  int32_t l_106 = (-1L);
        1:   34:  int32_t l_108 = 0xA79CFC9BL;
        1:   35:  if ((((*l_13) = ((*l_10) |= (safe_rshift_func_uint32_t_u_s((safe_sub_func_int32_t_s_s(l_6, 0UL)), (safe_rshift_func_int8_t_s_u(g_9, 1)))))) == (((l_6, l_6), ((*l_15) = (void *)0)) != ((*l_36) = func_16((safe_add_func_int32_t_s_s(l_20, ((((safe_unary_minus_func_int16_t_s(g_9)) >= ((0xFAD5BEFAL & g_9), (-1L))), (void *)0) == g_22)))))))) {
    #####:   36:    uint8_t l_42 = 0x96L;
    #####:   37:    int64_t *l_62 = &g_63[0][0][0];
    #####:   38:    int16_t l_64 = 4L;
        -:   39:    int16_t *l_65[1];
    #####:   40:    int32_t **l_80[5][4] = {{&g_74, &g_74, &g_74, &g_74}, {(void *)0, &g_74, &g_74, &g_74}, {&g_74, (void *)0, &g_74, (void *)0}, {(void *)0, &g_74, (void *)0, (void *)0}, {(void *)0, (void *)0, &g_74, &g_74}};
        -:   41:    int i, j;
    #####:   42:    for (i = 0; i < 1; i++)
    #####:   43:      l_65[i] = (void *)0;
    #####:   44:    if (((g_66[1] = (safe_rshift_func_int16_t_s_s(((safe_rshift_func_int8_t_s_s(l_42, (safe_add_func_uint16_t_u_u(((0x928DL && g_24[0][0][0]), (((g_24[0][0][0] != (safe_add_func_uint64_t_u_u((safe_add_func_uint8_t_u_u(l_6, (safe_add_func_int32_t_s_s(g_9, (safe_unary_minus_func_int8_t_s((safe_add_func_int64_t_s_s((0xC2001377L == (safe_rshift_func_int32_t_s_s(g_14, (safe_sub_func_uint16_t_u_u((((safe_mod_func_int64_t_s_s(((*l_62) = (safe_sub_func_int8_t_s_s((0L == l_6), (-3L)))), l_20)) > l_64) < g_11), 65532UL))))), l_64)))))))), 0xC7F1499195F91B20LL))) != 5L) != 1UL)), 0xBCF7L)))) < l_6), g_14))) <= g_11)) {
    #####:   45:      for (g_11 = (-17); (g_11 <= 48); g_11 = safe_add_func_int32_t_s_s(g_11, 6)) {
    #####:   46:        int32_t *l_70[5] = {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0};
    #####:   47:        int32_t **l_69 = &l_70[4];
        -:   48:        int i;
    #####:   49:        (*l_69) = &g_24[0][0][0];
    #####:   50:        return g_24[0][0][0];
        -:   51:      }
        -:   52:    } else {
    #####:   53:      int16_t l_87 = 0xC470L;
    #####:   54:      for (g_9 = 0; (g_9 == 1); ++g_9) {
    #####:   55:        int32_t **l_82 = &g_74;
    #####:   56:        int32_t ***l_81 = &l_82;
    #####:   57:        uint32_t *l_83 = &g_84;
    #####:   58:        uint16_t *l_88 = (void *)0;
    #####:   59:        uint16_t *l_89 = &g_66[2];
    #####:   60:        uint16_t *l_90 = &g_91;
    #####:   61:        (*g_73) = &g_24[0][2][0];
    #####:   62:        (*g_74) ^= (~((safe_lshift_func_int16_t_s_u(((((((safe_mod_func_uint32_t_u_u(g_9, 0xBCB33D27L)) < (g_92 = ((((l_80[1][1] = (void *)0) != ((*l_81) = &g_74)) >= (0x3E9DL && ((((*l_83) = g_63[0][0][0]), ((*l_90) = ((*l_89) = ((safe_rshift_func_uint32_t_u_u(l_6, l_87)) <= g_66[0])))) & 0x7406L))) ^ l_6))) ^ g_63[0][0][0]) == 0UL), g_84), l_87), 13)), l_6));
        -:   63:      }
        -:   64:    }
        -:   65:  } else {
        1:   66:    const int8_t l_97[3] = {1L, 1L, 1L};
        1:   67:    int32_t l_107 = 0x139C9446L;
        1:   68:    int32_t l_109 = 0x98692F7AL;
        1:   69:    uint8_t l_110 = 0xDBL;
        -:   70:    int i;
        1:   71:    if (((safe_mul_func_int8_t_s_s(0xB8L, (l_6 == (**g_73)))) == (safe_rshift_func_int64_t_s_u((l_97[1] & g_14), l_97[1])))) {
        1:   72:      int32_t *l_98 = &l_20;
        1:   73:      int32_t *l_99 = &l_20;
        1:   74:      int32_t *l_100 = &l_20;
        1:   75:      int32_t *l_101 = &l_20;
        1:   76:      int32_t *l_102 = &g_24[0][0][0];
        1:   77:      int32_t *l_103 = &g_24[0][2][0];
        -:   78:      int32_t *l_104[1];
        -:   79:      int i;
        2:   80:      for (i = 0; i < 1; i++)
        1:   81:        l_104[i] = (void *)0;
        1:   82:      --l_110;
        -:   83:    } else {
    #####:   84:      int8_t l_113 = 0x7DL;
    #####:   85:      return l_113;
        -:   86:    }
        -:   87:  }
        1:   88:  return g_14;
        -:   89:}
        -:   90:
        1:   91:static uint8_t *func_16(int8_t p_17) {
        1:   92:  int32_t *l_23 = &g_24[0][0][0];
        1:   93:  int32_t *l_25 = (void *)0;
        1:   94:  int32_t l_26 = 0x53B1DAB5L;
        1:   95:  int32_t *l_27 = &g_24[0][0][0];
        1:   96:  int32_t l_28 = 0x0DD93BA6L;
        1:   97:  int32_t *l_29 = &l_26;
        -:   98:  int32_t *l_30[1][1][1];
        1:   99:  uint64_t l_31[5][2][1] = {{{0xEB855BD1B8438CF8LL}, {0x6DCF67A9F656345DLL}}, {{0x6DCF67A9F656345DLL}, {0xEB855BD1B8438CF8LL}}, {{0xD2C4C26B3FA45FE6LL}, {0xEB855BD1B8438CF8LL}}, {{0x6DCF67A9F656345DLL}, {0x6DCF67A9F656345DLL}}, {{0xEB855BD1B8438CF8LL}, {0xD2C4C26B3FA45FE6LL}}};
        1:  100:  uint8_t *l_34 = &g_35;
        -:  101:  int i, j, k;
        2:  102:  for (i = 0; i < 1; i++) {
        2:  103:    for (j = 0; j < 1; j++) {
        2:  104:      for (k = 0; k < 1; k++)
        1:  105:        l_30[i][j][k] = &l_26;
        -:  106:    }
        -:  107:  }
        1:  108:  --l_31[3][1][0];
        1:  109:  l_25 = &g_24[0][0][0];
        1:  110:  return l_34;
        -:  111:}
        -:  112:
        1:  113:int main(int argc, char *argv[]) {
        -:  114:  int i, j, k;
        1:  115:  int print_hash_value = 0;
       1*:  116:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  117:    print_hash_value = 1;
        1:  118:  platform_main_begin();
        1:  119:  crc32_gentab();
        1:  120:  func_1();
        1:  121:  transparent_crc(g_9, "g_9", print_hash_value);
        1:  122:  transparent_crc(g_11, "g_11", print_hash_value);
        1:  123:  transparent_crc(g_14, "g_14", print_hash_value);
        2:  124:  for (i = 0; i < 1; i++) {
        5:  125:    for (j = 0; j < 4; j++) {
        8:  126:      for (k = 0; k < 1; k++) {
        4:  127:        transparent_crc(g_24[i][j][k], "g_24[i][j][k]", print_hash_value);
        4:  128:        if (print_hash_value)
    #####:  129:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  130:      }
        -:  131:    }
        -:  132:  }
        1:  133:  transparent_crc(g_35, "g_35", print_hash_value);
        2:  134:  for (i = 0; i < 1; i++) {
        2:  135:    for (j = 0; j < 1; j++) {
        2:  136:      for (k = 0; k < 1; k++) {
        1:  137:        transparent_crc(g_63[i][j][k], "g_63[i][j][k]", print_hash_value);
        1:  138:        if (print_hash_value)
    #####:  139:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  140:      }
        -:  141:    }
        -:  142:  }
        4:  143:  for (i = 0; i < 3; i++) {
        3:  144:    transparent_crc(g_66[i], "g_66[i]", print_hash_value);
        3:  145:    if (print_hash_value)
    #####:  146:      printf("index = [%d]\n", i);
        -:  147:  }
        1:  148:  transparent_crc(g_84, "g_84", print_hash_value);
        1:  149:  transparent_crc(g_91, "g_91", print_hash_value);
        1:  150:  transparent_crc(g_92, "g_92", print_hash_value);
        1:  151:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  152:  return 0;
        -:  153:}

        -:    0:Source:852.c
        -:    0:Graph:852.gcno
        -:    0:Data:852.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static const volatile int8_t g_7 = 0xA7L;
        -:    7:static int32_t g_12 = (-1L);
        -:    8:
        -:    9:static const int16_t func_1(void);
        -:   10:static int8_t func_4(int32_t p_5);
        -:   11:
        1:   12:static const int16_t func_1(void) {
        1:   13:  int32_t l_6 = 0x038591B6L;
        1:   14:  int8_t l_8 = 0x26L;
       1*:   15:  g_12 &= ((safe_mod_func_int8_t_s_s(0xAAL, (((func_4((0x74L ^ ((l_6 && (g_7 & l_8)) != (!(-6L))))) > 255UL) >= (safe_sub_func_int16_t_s_s((safe_unary_minus_func_uint8_t_u(((void *)0 != &l_6))), l_8))) & 5UL))), 0xD5FEAF86L);
        1:   16:  return l_6;
        -:   17:}
        -:   18:
        1:   19:static int8_t func_4(int32_t p_5) {
        1:   20:  uint32_t l_10 = 18446744073709551611UL;
        -:   21:  uint64_t l_13[4];
        -:   22:  int i;
        5:   23:  for (i = 0; i < 4; i++)
        4:   24:    l_13[i] = 0UL;
        1:   25:  if (l_10) {
        1:   26:    return l_10;
        -:   27:  } else {
    #####:   28:    int32_t *l_11 = &g_12;
    #####:   29:    l_11 = l_11;
        -:   30:  }
    #####:   31:  return l_13[1];
        -:   32:}
        -:   33:
        1:   34:int main(int argc, char *argv[]) {
        1:   35:  int print_hash_value = 0;
       1*:   36:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   37:    print_hash_value = 1;
        1:   38:  platform_main_begin();
        1:   39:  crc32_gentab();
        1:   40:  func_1();
        1:   41:  transparent_crc(g_7, "g_7", print_hash_value);
        1:   42:  transparent_crc(g_12, "g_12", print_hash_value);
        1:   43:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   44:  return 0;
        -:   45:}

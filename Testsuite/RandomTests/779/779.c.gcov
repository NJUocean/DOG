        -:    0:Source:779.c
        -:    0:Graph:779.gcno
        -:    0:Data:779.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  unsigned f0 : 15;
        -:   10:  const unsigned f1 : 8;
        -:   11:  volatile signed f2 : 10;
        -:   12:};
        -:   13:#pragma pack(pop)
        -:   14:
        -:   15:static volatile int32_t g_3[5][4] = {{0x0A77C874L, 0xFFAB8C3AL, 0x0A77C874L, 0x0A77C874L}, {0xFFAB8C3AL, 0xFFAB8C3AL, (-1L), 0xFFAB8C3AL}, {0xFFAB8C3AL, 0x0A77C874L, 0x0A77C874L, 0xFFAB8C3AL}, {0x0A77C874L, 0xFFAB8C3AL, 0x0A77C874L, 0x0A77C874L}, {0xFFAB8C3AL, 0xFFAB8C3AL, (-1L), 0xFFAB8C3AL}};
        -:   16:static volatile int32_t g_4 = 0x58A835A2L;
        -:   17:static int32_t g_5[5] = {0x6F8C7B5CL, 0x6F8C7B5CL, 0x6F8C7B5CL, 0x6F8C7B5CL, 0x6F8C7B5CL};
        -:   18:static uint16_t g_27 = 0xFFD0L;
        -:   19:static volatile uint8_t g_29[1] = {0x84L};
        -:   20:static int32_t g_65 = (-8L);
        -:   21:static uint8_t g_69 = 0x3DL;
        -:   22:static uint32_t g_71[2] = {0xFAF23098L, 0xFAF23098L};
        -:   23:static volatile struct S0 g_97 = {93, 0, 16};
        -:   24:
        -:   25:static uint32_t func_1(void);
        -:   26:static uint16_t func_12(uint16_t p_13, const int8_t p_14, uint32_t p_15, int8_t p_16);
        -:   27:
        1:   28:static uint32_t func_1(void) {
        -:   29:  uint16_t l_2[2];
        1:   30:  uint16_t *l_26 = &g_27;
        1:   31:  uint32_t l_104 = 18446744073709551606UL;
        1:   32:  int32_t l_105 = (-1L);
        -:   33:  int i;
        3:   34:  for (i = 0; i < 2; i++)
        2:   35:    l_2[i] = 0x9B54L;
        1:   36:  for (g_5[3] = 1; (g_5[3] >= 0); g_5[3] -= 1) {
        -:   37:    int i;
        1:   38:    return l_2[g_5[3]];
        -:   39:  }
    #####:   40:  l_105 = (safe_mul_func_int32_t_s_s((safe_lshift_func_int32_t_s_u(((safe_sub_func_int16_t_s_s(l_2[0], func_12((safe_unary_minus_func_uint64_t_u(l_2[1])), g_4, l_2[1], (safe_sub_func_int8_t_s_s(0x30L, (g_5[3] < (l_2[0] & (safe_lshift_func_int64_t_s_u(((safe_rshift_func_uint64_t_u_s((safe_div_func_uint64_t_u_u(((((*l_26) = 0xCD20L) ^ (l_2[0] && g_5[3])) & g_5[4]), g_5[3])), 37)) || 1UL), g_5[1]))))))))) | 0x725CL), 30)), l_104));
    #####:   41:  return g_5[3];
        -:   42:}
        -:   43:
    #####:   44:static uint16_t func_12(uint16_t p_13, const int8_t p_14, uint32_t p_15, int8_t p_16) {
    #####:   45:  volatile int32_t *l_28 = (void *)0;
    #####:   46:  uint16_t *l_37 = &g_27;
    #####:   47:  uint16_t **l_38 = (void *)0;
    #####:   48:  uint16_t **l_39 = &l_37;
        -:   49:  uint16_t l_42[3][1];
    #####:   50:  int32_t l_66 = 0x0B53CF54L;
    #####:   51:  uint8_t *l_67 = (void *)0;
    #####:   52:  uint8_t *l_68 = &g_69;
    #####:   53:  uint32_t *l_70 = &g_71[1];
    #####:   54:  uint32_t l_72 = 1UL;
        -:   55:  int64_t l_93[1][1];
    #####:   56:  int8_t l_103 = (-6L);
        -:   57:  int i, j;
    #####:   58:  for (i = 0; i < 3; i++) {
    #####:   59:    for (j = 0; j < 1; j++)
    #####:   60:      l_42[i][j] = 1UL;
        -:   61:  }
    #####:   62:  for (i = 0; i < 1; i++) {
    #####:   63:    for (j = 0; j < 1; j++)
    #####:   64:      l_93[i][j] = (-4L);
        -:   65:  }
    #####:   66:  g_29[0] = g_4;
    #####:   67:    if ((safe_add_func_int16_t_s_s((((safe_lshift_func_uint8_t_u_s((((*l_39) = (((+p_13) > 0UL) , l_37)) == (((g_5[4] && (safe_mul_func_uint8_t_u_u((l_42[2][0] || (p_16 >= ((((((*l_70) = ((safe_mul_func_uint8_t_u_u(((safe_add_func_int32_t_s_s((!(g_3[2][2] , ((*l_68) |= (safe_lshift_func_uint16_t_u_s(((safe_mul_func_uint64_t_u_u(((l_42[2][0] ^ (safe_div_func_int16_t_s_s(((safe_mul_func_int32_t_s_s((l_66 ^= (safe_mod_func_uint8_t_u_u((safe_rshift_func_uint16_t_u_s((!(safe_add_func_int8_t_s_s((safe_div_func_int16_t_s_s(g_4, g_65)), 0xB0L))), g_5[3])), p_16))), p_14)) , g_29[0]), g_27))) & p_15), 0xB1D319D7FCCEA59FLL)) , 65535UL), g_27))))), 0xBA349A2DL)) <= g_65), g_5[2])) >= p_16)) , &l_66) == l_70) >= 0xF25AD92EL) & g_5[3]))), p_13))) , 0x90L) , &p_13)), g_65)) > l_42[2][0]) , l_72), g_65)))
        -:   68:    {
    #####:   69:      return p_14;
        -:   70:    } else {
    #####:   71:      int32_t *l_90 = &l_66;
    #####:   72:      int32_t l_94 = (-1L);
    #####:   73:      uint32_t l_95 = 0xF7B51EF1L;
    #####:   74:      int64_t *l_96 = &l_93[0][0];
    #####:   75:      int32_t *l_98 = &g_5[0];
    #####:   76:      (*l_98) = ((((safe_sub_func_uint32_t_u_u((g_69 | (safe_add_func_uint32_t_u_u((p_15 != (((p_14 & ((((*l_96) = (~((((p_15, (safe_sub_func_int32_t_s_s(p_15, ((0x7192L ^ ((safe_lshift_func_uint16_t_u_s(((safe_sub_func_uint16_t_u_u((((safe_div_func_int32_t_s_s((safe_lshift_func_uint16_t_u_s(((**l_39) = ((safe_mul_func_int32_t_s_s(((*l_90) = 0xEBA052C4L), ((0xB18AL || ((safe_rshift_func_uint32_t_u_u(0x128409D7L, 15)), 0x8675L)) && p_13))), p_15)), 10)), g_3[3][3])) <= p_16), l_93[0][0]), g_5[0])) > l_94), 15)), l_95)) == 0x0AL)))) > p_13), (void *)0) != (void *)0))), g_97), p_15)) <= p_13) && 0x4A103C2894B961ACLL)), 0UL))), p_13)), 1UL) ^ 249UL) ^ g_5[3]);
    #####:   77:      for (g_65 = 0; (g_65 < 7); g_65 = safe_add_func_uint32_t_u_u(g_65, 1)) {
    #####:   78:        for (p_16 = 0; (p_16 >= (-17)); --p_16) {
    #####:   79:          (*l_98) ^= g_3[0][0];
        -:   80:        }
        -:   81:      }
        -:   82:    }
    #####:   83:    return l_103;
        -:   84:}
        -:   85:
        1:   86:int main(int argc, char *argv[]) {
        -:   87:  int i, j;
        1:   88:  int print_hash_value = 0;
       1*:   89:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   90:    print_hash_value = 1;
        1:   91:  platform_main_begin();
        1:   92:  crc32_gentab();
        1:   93:  func_1();
        6:   94:  for (i = 0; i < 5; i++) {
       25:   95:    for (j = 0; j < 4; j++) {
       20:   96:      transparent_crc(g_3[i][j], "g_3[i][j]", print_hash_value);
       20:   97:      if (print_hash_value)
    #####:   98:        printf("index = [%d][%d]\n", i, j);
        -:   99:    }
        -:  100:  }
        1:  101:  transparent_crc(g_4, "g_4", print_hash_value);
        6:  102:  for (i = 0; i < 5; i++) {
        5:  103:    transparent_crc(g_5[i], "g_5[i]", print_hash_value);
        5:  104:    if (print_hash_value)
    #####:  105:      printf("index = [%d]\n", i);
        -:  106:  }
        1:  107:  transparent_crc(g_27, "g_27", print_hash_value);
        2:  108:  for (i = 0; i < 1; i++) {
        1:  109:    transparent_crc(g_29[i], "g_29[i]", print_hash_value);
        1:  110:    if (print_hash_value)
    #####:  111:      printf("index = [%d]\n", i);
        -:  112:  }
        1:  113:  transparent_crc(g_65, "g_65", print_hash_value);
        1:  114:  transparent_crc(g_69, "g_69", print_hash_value);
        3:  115:  for (i = 0; i < 2; i++) {
        2:  116:    transparent_crc(g_71[i], "g_71[i]", print_hash_value);
        2:  117:    if (print_hash_value)
    #####:  118:      printf("index = [%d]\n", i);
        -:  119:  }
        1:  120:  transparent_crc(g_97.f0, "g_97.f0", print_hash_value);
        1:  121:  transparent_crc(g_97.f1, "g_97.f1", print_hash_value);
        1:  122:  transparent_crc(g_97.f2, "g_97.f2", print_hash_value);
        1:  123:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  124:  return 0;
        -:  125:}

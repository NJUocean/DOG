        -:    0:Source:387.c
        -:    0:Graph:387.gcno
        -:    0:Data:387.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int64_t g_6 = 0L;
        -:    7:static uint64_t g_28 = 0UL;
        -:    8:static uint32_t g_35[1][2][5] = {{{0x2C39D5B6L, 0xA2324015L, 0UL, 0UL, 0xA2324015L}, {0x2C39D5B6L, 0xA2324015L, 0UL, 0UL, 0xA2324015L}}};
        -:    9:static int32_t g_36 = 0x8ABFF5ECL;
        -:   10:
        -:   11:static int32_t func_1(void);
        -:   12:static uint64_t func_18(uint32_t p_19, int32_t p_20);
        -:   13:
        1:   14:static int32_t func_1(void) {
        1:   15:  int32_t l_13 = (-4L);
        1:   16:  uint64_t *l_27 = &g_28;
        1:   17:  uint32_t *l_34 = &g_35[0][0][1];
        1:   18:  int32_t *l_52 = &l_13;
       1*:   19:  (*l_52) = (safe_lshift_func_uint64_t_u_u((safe_mul_func_int32_t_s_s(g_6, ((safe_div_func_uint8_t_u_u((safe_mod_func_uint64_t_u_u((safe_mod_func_int8_t_s_s(((0x9BACC5D9L & g_6) || g_6), l_13)), (safe_mod_func_uint64_t_u_u((safe_mod_func_int16_t_s_s(((l_13 || ((func_18((safe_add_func_uint64_t_u_u(((safe_mod_func_int32_t_s_s(2L, (safe_add_func_uint64_t_u_u(((*l_27)++), ((safe_rshift_func_uint8_t_u_s(((g_36 ^= (+(l_13 >= (((*l_34) = 0x9B8FA48AL) || g_35[0][0][1])))) >= 0x2A2EL), 7)), g_35[0][1][3]))))) || g_6), g_6)), g_6) < (-9L)) == g_6)) >= g_6), 0xDB22L)), g_6)))), 0x76L)) | l_13))), g_6));
        1:   20:  return g_6;
        -:   21:}
        -:   22:
    #####:   23:static uint64_t func_18(uint32_t p_19, int32_t p_20) {
    #####:   24:  int32_t *l_49 = &g_36;
    #####:   25:  for (p_20 = 0; (p_20 >= 0); p_20 -= 1) {
    #####:   26:    uint64_t l_42[5][1][3] = {{{18446744073709551612UL, 0xBB9CEC02DFCE9586LL, 1UL}}, {{0UL, 0xBB9CEC02DFCE9586LL, 0UL}}, {{0xB3883FAA058A13C4LL, 18446744073709551612UL, 1UL}}, {{0xB3883FAA058A13C4LL, 0xB3883FAA058A13C4LL, 18446744073709551612UL}}, {{0UL, 18446744073709551612UL, 18446744073709551612UL}}};
    #####:   27:    int32_t l_48 = (-1L);
    #####:   28:    int32_t *l_51 = (void *)0;
        -:   29:    int i, j, k;
    #####:   30:    if (g_28) {
    #####:   31:      int8_t l_41 = 0x50L;
    #####:   32:      for (g_28 = 0; (g_28 <= 0); g_28 += 1) {
        -:   33:        int32_t *l_38[1][3][3];
    #####:   34:        int32_t **l_37 = &l_38[0][2][0];
    #####:   35:        int32_t *l_40 = (void *)0;
    #####:   36:        int32_t **l_39 = &l_40;
        -:   37:        int i, j, k;
    #####:   38:        for (i = 0; i < 1; i++) {
    #####:   39:          for (j = 0; j < 3; j++) {
    #####:   40:            for (k = 0; k < 3; k++)
    #####:   41:              l_38[i][j][k] = &g_36;
        -:   42:          }
        -:   43:        }
    #####:   44:        (*l_39) = ((*l_37) = &g_36);
    #####:   45:        l_42[0][0][1]++;
        -:   46:      }
        -:   47:    } else {
    #####:   48:      int32_t **l_45 = (void *)0;
    #####:   49:      int32_t *l_47[1][1][4] = {{{&g_36, &g_36, &g_36, &g_36}}};
    #####:   50:      int32_t **l_46 = &l_47[0][0][3];
        -:   51:      int i, j, k;
    #####:   52:      (*l_46) = (void *)0;
        -:   53:    }
    #####:   54:    for (g_28 = 0; (g_28 <= 0); g_28 += 1) {
    #####:   55:      l_48 = (p_20 | p_19);
    #####:   56:      for (g_36 = 0; (g_36 <= 0); g_36 += 1) {
    #####:   57:        int32_t **l_50 = &l_49;
    #####:   58:        l_51 = ((*l_50) = l_49);
        -:   59:      }
        -:   60:    }
        -:   61:  }
    #####:   62:  (*l_49) = g_28;
    #####:   63:  return p_20;
        -:   64:}
        -:   65:
        1:   66:int main(int argc, char *argv[]) {
        -:   67:  int i, j, k;
        1:   68:  int print_hash_value = 0;
       1*:   69:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   70:    print_hash_value = 1;
        1:   71:  platform_main_begin();
        1:   72:  crc32_gentab();
        1:   73:  func_1();
        1:   74:  transparent_crc(g_6, "g_6", print_hash_value);
        1:   75:  transparent_crc(g_28, "g_28", print_hash_value);
        2:   76:  for (i = 0; i < 1; i++) {
        3:   77:    for (j = 0; j < 2; j++) {
       12:   78:      for (k = 0; k < 5; k++) {
       10:   79:        transparent_crc(g_35[i][j][k], "g_35[i][j][k]", print_hash_value);
       10:   80:        if (print_hash_value)
    #####:   81:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   82:      }
        -:   83:    }
        -:   84:  }
        1:   85:  transparent_crc(g_36, "g_36", print_hash_value);
        1:   86:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   87:  return 0;
        -:   88:}

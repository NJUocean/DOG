        -:    0:Source:798.c
        -:    0:Graph:798.gcno
        -:    0:Data:798.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  volatile unsigned f0 : 26;
        -:    8:  unsigned f1 : 7;
        -:    9:  const signed f2 : 13;
        -:   10:  uint32_t f3;
        -:   11:  unsigned f4 : 22;
        -:   12:};
        -:   13:
        -:   14:static int32_t g_5[1][4][4] = {{{0xBA095A97L, 0x666A756AL, 0x666A756AL, 0xBA095A97L}, {0xBA095A97L, 0x666A756AL, 0x666A756AL, 0xBA095A97L}, {0xBA095A97L, 0x666A756AL, 0x666A756AL, 0xBA095A97L}, {0xBA095A97L, 0x666A756AL, 0x666A756AL, 0xBA095A97L}}};
        -:   15:static int32_t *g_4[1] = {&g_5[0][2][1]};
        -:   16:static struct S0 g_26 = {1201, 5, -58, 0UL, 1978};
        -:   17:static int64_t g_33 = 0xB4D2C298C245E320LL;
        -:   18:static uint8_t g_35[5][2] = {{0xFBL, 0x9CL}, {0xFBL, 0xFBL}, {0x9CL, 0xFBL}, {0xFBL, 0x9CL}, {0xFBL, 0xFBL}};
        -:   19:static int32_t g_37 = 1L;
        -:   20:
        -:   21:static uint64_t func_1(void);
        -:   22:static int32_t *func_2(int32_t *p_3);
        -:   23:
        1:   24:static uint64_t func_1(void) {
        1:   25:  int32_t **l_53 = &g_4[0];
        1:   26:  (*l_53) = func_2(g_4[0]);
        1:   27:  return g_37;
        -:   28:}
        -:   29:
        1:   30:static int32_t *func_2(int32_t *p_3) {
        1:   31:  int16_t l_8 = (-1L);
        1:   32:  int32_t *l_11 = &g_5[0][2][1];
        1:   33:  int32_t l_31 = 0L;
        1:   34:  int64_t *l_32 = &g_33;
        1:   35:  uint8_t *l_34[4] = {&g_35[0][0], &g_35[0][0], &g_35[0][0], &g_35[0][0]};
        1:   36:  int32_t *l_36[5][4] = {{&g_37, &g_37, (void *)0, &g_37}, {&g_37, &g_37, &g_37, &g_37}, {&g_37, &g_37, &g_37, &g_37}, {&g_37, &g_37, (void *)0, &g_37}, {&g_37, (void *)0, (void *)0, &g_37}};
        1:   37:  int8_t l_38 = 0x92L;
        1:   38:  int8_t l_48 = 0x0DL;
        1:   39:  int64_t l_49 = 0xE5F43C7198F9F05BLL;
        -:   40:  int i, j;
       1*:   41:  l_38 = (l_8 > (((safe_unary_minus_func_uint8_t_u(((g_35[0][0] = (((((*l_32) = (+((*p_3) = ((l_11 != (void *)0) <= (safe_div_func_int64_t_s_s((safe_div_func_int32_t_s_s((safe_sub_func_uint16_t_u_u(((safe_lshift_func_int32_t_s_s((safe_mod_func_int64_t_s_s((safe_div_func_int16_t_s_s((-1L), (safe_sub_func_uint16_t_u_u((g_26, (safe_div_func_uint64_t_u_u(((((*l_11) >= (safe_add_func_uint32_t_u_u(4294967295UL, (-1L)))) <= (*l_11)) | (*p_3)), 0xFA9EF8169C1477A1LL))), (*l_11))))), (*l_11))), (*p_3))), (*l_11)), g_5[0][2][1])), (*l_11))), l_31)))))) | g_26.f4) ^ g_26.f2) == g_26.f4)) < g_26.f4))) && (*l_11)) < 3L));
       11:   42:  for (l_8 = 0; (l_8 <= 9); l_8++) {
       10:   43:    uint16_t l_43 = 0xACABL;
       10:   44:    int32_t l_46 = 0xDA6125F8L;
        -:   45:    int32_t l_47[5];
       10:   46:    uint32_t l_50 = 0UL;
        -:   47:    int i;
       60:   48:    for (i = 0; i < 5; i++)
       50:   49:      l_47[i] = 0x746A6ECCL;
      10*:   50:    for (g_26.f3 = (-20); (g_26.f3 == 39); ++g_26.f3) {
    #####:   51:      --l_43;
        -:   52:    }
       10:   53:    l_50++;
        -:   54:  }
        1:   55:  return &g_5[0][2][1];
        -:   56:}
        -:   57:
        1:   58:int main(int argc, char *argv[]) {
        -:   59:  int i, j, k;
        1:   60:  int print_hash_value = 0;
       1*:   61:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   62:    print_hash_value = 1;
        1:   63:  platform_main_begin();
        1:   64:  crc32_gentab();
        1:   65:  func_1();
        2:   66:  for (i = 0; i < 1; i++) {
        5:   67:    for (j = 0; j < 4; j++) {
       20:   68:      for (k = 0; k < 4; k++) {
       16:   69:        transparent_crc(g_5[i][j][k], "g_5[i][j][k]", print_hash_value);
       16:   70:        if (print_hash_value)
    #####:   71:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   72:      }
        -:   73:    }
        -:   74:  }
        1:   75:  transparent_crc(g_26.f0, "g_26.f0", print_hash_value);
        1:   76:  transparent_crc(g_26.f1, "g_26.f1", print_hash_value);
        1:   77:  transparent_crc(g_26.f2, "g_26.f2", print_hash_value);
        1:   78:  transparent_crc(g_26.f3, "g_26.f3", print_hash_value);
        1:   79:  transparent_crc(g_26.f4, "g_26.f4", print_hash_value);
        1:   80:  transparent_crc(g_33, "g_33", print_hash_value);
        6:   81:  for (i = 0; i < 5; i++) {
       15:   82:    for (j = 0; j < 2; j++) {
       10:   83:      transparent_crc(g_35[i][j], "g_35[i][j]", print_hash_value);
       10:   84:      if (print_hash_value)
    #####:   85:        printf("index = [%d][%d]\n", i, j);
        -:   86:    }
        -:   87:  }
        1:   88:  transparent_crc(g_37, "g_37", print_hash_value);
        1:   89:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   90:  return 0;
        -:   91:}

        -:    0:Source:227.c
        -:    0:Graph:227.gcno
        -:    0:Data:227.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S1 {
        -:    7:  volatile signed f0 : 29;
        -:    8:  uint32_t f1;
        -:    9:};
        -:   10:
        -:   11:static volatile int32_t g_2 = 6L;
        -:   12:static volatile int32_t g_3 = 0L;
        -:   13:static volatile int32_t g_4 = 1L;
        -:   14:static int32_t g_5 = 1L;
        -:   15:static struct S1 g_13 = {-15024, 4294967288UL};
        -:   16:static int32_t g_21[3][2][4] = {{{0xEB5EA28CL, 1L, 1L, 0xEB5EA28CL}, {0xEB5EA28CL, 1L, 1L, 0xEB5EA28CL}}, {{0xEB5EA28CL, 1L, 1L, 0xEB5EA28CL}, {0xEB5EA28CL, 1L, 1L, 0xEB5EA28CL}}, {{0xEB5EA28CL, 1L, 1L, 0xEB5EA28CL}, {0xEB5EA28CL, 1L, 1L, 0xEB5EA28CL}}};
        -:   17:static volatile int64_t g_24 = 7L;
        -:   18:static int16_t g_36 = 2L;
        -:   19:static int64_t g_47 = 0L;
        -:   20:static int64_t g_49 = (-1L);
        -:   21:static int16_t g_58 = 0x84F7L;
        -:   22:static uint32_t g_59 = 18446744073709551615UL;
        -:   23:static int8_t g_63 = 0xBBL;
        -:   24:static int32_t *volatile g_67[3] = {&g_5, &g_5, &g_5};
        -:   25:static int32_t *volatile *volatile g_66 = &g_67[1];
        -:   26:static int32_t *g_69 = &g_21[2][1][3];
        -:   27:static int32_t **g_68[3] = {&g_69, &g_69, &g_69};
        -:   28:static uint64_t g_73 = 0UL;
        -:   29:static uint64_t g_75 = 0x691A67D55137C5FDLL;
        -:   30:static int32_t g_77 = 0L;
        -:   31:
        -:   32:static uint32_t func_1(void);
        -:   33:static int32_t func_11(int8_t p_12);
        -:   34:
        1:   35:static uint32_t func_1(void) {
        1:   36:  int32_t l_10 = 0x3E8E1B88L;
        1:   37:  int32_t *l_37 = (void *)0;
       1*:   38:  for (g_5 = 0; (g_5 < (-27)); g_5--) {
    #####:   39:    const uint32_t l_15 = 0xB6FEB9E9L;
    #####:   40:    const int32_t l_18 = (-1L);
    #####:   41:    uint32_t l_79 = 0x7ADB2349L;
    #####:   42:    if ((safe_rshift_func_uint8_t_u_s(5UL, l_10))) {
    #####:   43:      int32_t *l_35 = &g_21[0][1][0];
    #####:   44:      int32_t **l_38 = &l_37;
    #####:   45:      g_36 ^= ((*l_35) = func_11(((g_13, (g_5 | (~l_15))) < (safe_rshift_func_uint16_t_u_s((g_13.f1 != l_18), 14)))));
    #####:   46:      (*l_38) = l_37;
        -:   47:    } else {
    #####:   48:      uint32_t l_39 = 0xD69B12DBL;
    #####:   49:      int32_t l_57 = 0xF1D91A4AL;
    #####:   50:      if ((g_21[2][1][3] = g_5)) {
    #####:   51:        int16_t *l_45 = &g_36;
    #####:   52:        int64_t *l_46 = &g_47;
    #####:   53:        int32_t l_48 = 0L;
    #####:   54:        uint32_t l_54 = 0xB3A3C3A8L;
    #####:   55:        int8_t *l_62 = &g_63;
    #####:   56:        uint64_t *l_72 = &g_73;
    #####:   57:        uint64_t *l_74 = &g_75;
    #####:   58:        int32_t *l_76 = &g_77;
    #####:   59:        g_59 |= (l_39 < (((safe_mul_func_uint8_t_u_u((((safe_add_func_uint64_t_u_u((~((*l_46) |= (((*l_45) = 7L) ^ 0x0386L))), (g_49 |= l_48))) || ((safe_lshift_func_int16_t_s_s(((safe_unary_minus_func_uint16_t_u(g_21[0][1][0])) || (!((g_58 = (l_54 | (safe_div_func_int8_t_s_s(((g_13.f1 = (((18446744073709551615UL || 0x85F1C2B46DFF6173LL) || (l_57 && 2L)), g_4)) > l_39), g_21[2][1][3])))) <= 0x1D3A0C94L))), 7)) ^ 0x2949029496125B66LL)), g_49), (-1L))), 251UL) <= g_5));
    #####:   60:        (*l_76) &= ((*g_69) ^= ((0xA37A54743E03EB41LL | (0xD2L ^ ((*l_62) = (safe_mod_func_int64_t_s_s(0xB4D6242281945549LL, 0xB022B26CBFC796D6LL))))) < ((safe_mod_func_uint8_t_u_u((((g_66 != g_68[1]) >= (4294967295UL && l_54)) < (safe_lshift_func_uint64_t_u_u(((*l_74) = ((*l_72) = g_58)), g_47))), l_48)) < l_39)));
        -:   61:      } else {
    #####:   62:        int32_t *l_78[5] = {(void *)0, (void *)0, (void *)0, (void *)0, (void *)0};
        -:   63:        int i;
    #####:   64:        l_79--;
        -:   65:      }
        -:   66:    }
        -:   67:  }
        1:   68:  return l_10;
        -:   69:}
        -:   70:
    #####:   71:static int32_t func_11(int8_t p_12) {
    #####:   72:  int8_t l_19[2][2][2] = {{{0x4AL, (-4L)}, {0x4AL, 0x4AL}}, {{(-4L), 0x4AL}, {0x4AL, (-4L)}}};
        -:   73:  int32_t l_22[3];
        -:   74:  int i, j, k;
    #####:   75:  for (i = 0; i < 3; i++)
    #####:   76:    l_22[i] = 0L;
    #####:   77:  for (p_12 = 0; (p_12 <= 1); p_12 += 1) {
    #####:   78:    int16_t l_23 = 0x92DBL;
        -:   79:    int32_t l_25[4];
    #####:   80:    uint64_t l_26 = 2UL;
        -:   81:    int i;
    #####:   82:    for (i = 0; i < 4; i++)
    #####:   83:      l_25[i] = (-4L);
    #####:   84:    if (g_3)
    #####:   85:      break;
    #####:   86:    for (g_13.f1 = 0; (g_13.f1 <= 1); g_13.f1 += 1) {
        -:   87:      int32_t *l_20[1][2];
        -:   88:      int i, j;
    #####:   89:      for (i = 0; i < 1; i++) {
    #####:   90:        for (j = 0; j < 2; j++)
    #####:   91:          l_20[i][j] = &g_21[2][1][3];
        -:   92:      }
    #####:   93:      l_26--;
    #####:   94:      for (l_26 = 0; (l_26 <= 1); l_26 += 1) {
    #####:   95:        int32_t l_34 = 0xBBBB531EL;
        -:   96:        int i, j, k;
    #####:   97:        if (l_19[g_13.f1][l_26][p_12])
    #####:   98:          break;
    #####:   99:        l_34 &= (safe_rshift_func_int32_t_s_u(((void *)0 == &g_3), ((p_12 == 0UL) < (safe_unary_minus_func_uint8_t_u(0UL)))));
        -:  100:      }
        -:  101:    }
        -:  102:  }
    #####:  103:  return g_2;
        -:  104:}
        -:  105:
        1:  106:int main(int argc, char *argv[]) {
        -:  107:  int i, j, k;
        1:  108:  int print_hash_value = 0;
       1*:  109:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  110:    print_hash_value = 1;
        1:  111:  platform_main_begin();
        1:  112:  crc32_gentab();
        1:  113:  func_1();
        1:  114:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  115:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  116:  transparent_crc(g_4, "g_4", print_hash_value);
        1:  117:  transparent_crc(g_5, "g_5", print_hash_value);
        1:  118:  transparent_crc(g_13.f0, "g_13.f0", print_hash_value);
        1:  119:  transparent_crc(g_13.f1, "g_13.f1", print_hash_value);
        4:  120:  for (i = 0; i < 3; i++) {
        9:  121:    for (j = 0; j < 2; j++) {
       30:  122:      for (k = 0; k < 4; k++) {
       24:  123:        transparent_crc(g_21[i][j][k], "g_21[i][j][k]", print_hash_value);
       24:  124:        if (print_hash_value)
    #####:  125:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  126:      }
        -:  127:    }
        -:  128:  }
        1:  129:  transparent_crc(g_24, "g_24", print_hash_value);
        1:  130:  transparent_crc(g_36, "g_36", print_hash_value);
        1:  131:  transparent_crc(g_47, "g_47", print_hash_value);
        1:  132:  transparent_crc(g_49, "g_49", print_hash_value);
        1:  133:  transparent_crc(g_58, "g_58", print_hash_value);
        1:  134:  transparent_crc(g_59, "g_59", print_hash_value);
        1:  135:  transparent_crc(g_63, "g_63", print_hash_value);
        1:  136:  transparent_crc(g_73, "g_73", print_hash_value);
        1:  137:  transparent_crc(g_75, "g_75", print_hash_value);
        1:  138:  transparent_crc(g_77, "g_77", print_hash_value);
        1:  139:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  140:  return 0;
        -:  141:}

        -:    0:Source:452.c
        -:    0:Graph:452.gcno
        -:    0:Data:452.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int32_t g_2 = (-1L);
        -:    7:static int32_t g_6 = 0x665683C8L;
        -:    8:static int8_t g_14[1][3][3] = {{{7L, 7L, 7L}, {7L, 7L, 7L}, {7L, 7L, 7L}}};
        -:    9:static int8_t g_15 = 0xC9L;
        -:   10:static volatile int8_t g_16 = 0x1EL;
        -:   11:static volatile int32_t g_17 = 0x9864BA8BL;
        -:   12:
        -:   13:static uint32_t func_1(void);
        -:   14:
        1:   15:static uint32_t func_1(void) {
        1:   16:  uint16_t l_18 = 0x59C4L;
       16:   17:  for (g_2 = (-2); (g_2 != (-17)); --g_2) {
       15:   18:    int32_t *l_5 = &g_6;
       15:   19:    int32_t *l_7 = (void *)0;
       15:   20:    int32_t *l_8 = &g_6;
       15:   21:    int32_t *l_9 = (void *)0;
       15:   22:    int32_t *l_10 = &g_6;
       15:   23:    int32_t *l_11 = &g_6;
       15:   24:    int32_t *l_12 = &g_6;
        -:   25:    int32_t *l_13[2];
        -:   26:    int i;
       45:   27:    for (i = 0; i < 2; i++)
       30:   28:      l_13[i] = (void *)0;
       15:   29:    --l_18;
        -:   30:  }
        1:   31:  return g_6;
        -:   32:}
        -:   33:
        1:   34:int main(int argc, char *argv[]) {
        -:   35:  int i, j, k;
        1:   36:  int print_hash_value = 0;
       1*:   37:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   38:    print_hash_value = 1;
        1:   39:  platform_main_begin();
        1:   40:  crc32_gentab();
        1:   41:  func_1();
        1:   42:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   43:  transparent_crc(g_6, "g_6", print_hash_value);
        2:   44:  for (i = 0; i < 1; i++) {
        4:   45:    for (j = 0; j < 3; j++) {
       12:   46:      for (k = 0; k < 3; k++) {
        9:   47:        transparent_crc(g_14[i][j][k], "g_14[i][j][k]", print_hash_value);
        9:   48:        if (print_hash_value)
    #####:   49:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   50:      }
        -:   51:    }
        -:   52:  }
        1:   53:  transparent_crc(g_15, "g_15", print_hash_value);
        1:   54:  transparent_crc(g_16, "g_16", print_hash_value);
        1:   55:  transparent_crc(g_17, "g_17", print_hash_value);
        1:   56:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   57:  return 0;
        -:   58:}

        -:    0:Source:5.c
        -:    0:Graph:5.gcno
        -:    0:Data:5.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S0 {
        -:    9:  volatile int16_t f0;
        -:   10:  const uint32_t f1;
        -:   11:};
        -:   12:#pragma pack(pop)
        -:   13:
        -:   14:struct S1 {
        -:   15:  const unsigned f0 : 26;
        -:   16:  unsigned f1 : 11;
        -:   17:  volatile signed f2 : 22;
        -:   18:  volatile signed f3 : 31;
        -:   19:  volatile unsigned f4 : 25;
        -:   20:};
        -:   21:
        -:   22:#pragma pack(push)
        -:   23:#pragma pack(1)
        -:   24:struct S4 {
        -:   25:  signed f0 : 3;
        -:   26:  unsigned f1 : 13;
        -:   27:  signed f2 : 26;
        -:   28:};
        -:   29:#pragma pack(pop)
        -:   30:
        -:   31:static volatile int32_t g_3 = 0x13A6C9CDL;
        -:   32:static int32_t g_4 = (-7L);
        -:   33:static uint16_t g_26[2] = {0x332AL, 0x332AL};
        -:   34:static int16_t g_31 = (-4L);
        -:   35:static int16_t g_39 = 0xF517L;
        -:   36:static int16_t *g_38 = &g_39;
        -:   37:static int32_t g_47 = 0L;
        -:   38:static struct S4 g_50[2] = {{1, 20, 6031}, {1, 20, 6031}};
        -:   39:static uint8_t g_54 = 251UL;
        -:   40:static volatile struct S0 g_78[1] = {{0L, 0xD6221F42L}};
        -:   41:static struct S1 g_86 = {4577, 21, -1879, 7178, 1102};
        -:   42:static int32_t g_88 = 0x906A58E0L;
        -:   43:static struct S1 g_89 = {6399, 8, -53, 12324, 3175};
        -:   44:
        -:   45:static struct S1 func_1(void);
        -:   46:static struct S4 func_5(const uint32_t p_6, uint64_t p_7, int64_t p_8, int64_t p_9, int32_t p_10);
        -:   47:
        1:   48:static struct S1 func_1(void) {
        1:   49:  uint32_t l_2[1][4][4] = {{{0UL, 0xFE012D2CL, 0x5D0D658EL, 0x5D0D658EL}, {0UL, 0UL, 18446744073709551614UL, 0xFE012D2CL}, {0xFE012D2CL, 0UL, 18446744073709551614UL, 0UL}, {0UL, 0UL, 0x5D0D658EL, 18446744073709551614UL}}};
        1:   50:  uint32_t l_25[4][5][1] = {{{0UL}, {0xA603D2CFL}, {0xE1580EB6L}, {0xA603D2CFL}, {0UL}}, {{0xA603D2CFL}, {0xE1580EB6L}, {0xA603D2CFL}, {0UL}, {0xA603D2CFL}}, {{0xE1580EB6L}, {0xA603D2CFL}, {0UL}, {0xA603D2CFL}, {0xE1580EB6L}}, {{0xA603D2CFL}, {0UL}, {0xA603D2CFL}, {0xE1580EB6L}, {0xA603D2CFL}}};
        1:   51:  int64_t l_61 = (-4L);
        1:   52:  uint8_t l_85 = 0xACL;
        -:   53:  int i, j, k;
       1*:   54:  for (g_4 = 0; (g_4 >= 0); g_4 -= 1) {
        1:   55:    const int32_t l_11 = 0x82E77E81L;
        1:   56:    int32_t l_12 = 0xE7071658L;
        1:   57:    struct S4 *l_49 = &g_50[1];
        1:   58:    uint8_t *l_53 = &g_54;
        1:   59:    uint16_t *l_83 = &g_26[1];
        1:   60:    int32_t *l_84 = &g_47;
        1:   61:    (*l_49) = func_5(l_11, l_2[0][1][1], l_12, ((safe_sub_func_int64_t_s_s(((~(((0x189D9E62L > (g_3 != (((0xE10A3BDF78B15B45LL || (safe_mul_func_int64_t_s_s((safe_sub_func_int32_t_s_s((+g_4), (safe_mod_func_int64_t_s_s((g_4 < 0x4071E9942C3B03C3LL), g_4)))), l_12))), g_4) > 1UL))) && 0x05AB1361L) >= l_25[0][3][0])) > l_11), l_2[0][1][1])) <= l_12), g_4);
       1*:   62:    if (((safe_sub_func_uint8_t_u_u(((*l_53) = 1UL), (safe_sub_func_int64_t_s_s((safe_div_func_uint16_t_u_u((safe_sub_func_uint8_t_u_u(l_61, l_12)), (safe_add_func_int8_t_s_s((safe_div_func_int8_t_s_s((safe_div_func_uint64_t_u_u((safe_add_func_uint32_t_u_u((safe_rshift_func_uint32_t_u_s((g_4 == (safe_add_func_uint8_t_u_u((safe_mod_func_int8_t_s_s((((*l_84) &= (safe_mul_func_int16_t_s_s(0L, ((*l_83) ^= ((g_4 & l_2[0][1][3]) || (g_78[0], (safe_add_func_uint32_t_u_u(((((safe_lshift_func_uint64_t_u_u(((void *)0 != &l_25[0][3][0]), 12)) & l_2[0][1][1]), l_12) < (-2L)), l_12)))))))) <= g_50[1].f0), g_50[1].f1)), g_50[1].f2))), 25)), g_50[1].f2)), g_31)), l_85)), g_4)))), 1L)))) < g_50[1].f1)) {
        1:   63:      for (l_12 = 1; (l_12 >= 0); l_12 -= 1) {
        1:   64:        return g_86;
        -:   65:      }
        -:   66:    } else {
    #####:   67:      int32_t *l_87 = &g_88;
    #####:   68:      (*l_87) = ((*l_84) = ((void *)0 != &g_26[0]));
        -:   69:    }
    #####:   70:    for (g_47 = 0; (g_47 <= 0); g_47 += 1) {
    #####:   71:      return g_89;
        -:   72:    }
        -:   73:  }
    #####:   74:  return g_86;
        -:   75:}
        -:   76:
        1:   77:static struct S4 func_5(const uint32_t p_6, uint64_t p_7, int64_t p_8, int64_t p_9, int32_t p_10) {
        1:   78:  uint32_t l_44 = 1UL;
        1:   79:  struct S4 l_48 = {1, 80, -1182};
        3:   80:  for (p_7 = 0; (p_7 <= 1); p_7 += 1) {
        2:   81:    int16_t *l_29 = (void *)0;
        2:   82:    int16_t *l_30 = &g_31;
        2:   83:    int16_t **l_40 = (void *)0;
        2:   84:    int16_t **l_41 = &l_29;
        2:   85:    uint32_t *l_45 = &l_44;
        2:   86:    int32_t *l_46[5] = {&g_4, &g_4, &g_4, &g_4, &g_4};
        -:   87:    int i;
        2:   88:    g_47 |= (p_10 = (g_26[p_7] == (safe_lshift_func_uint32_t_u_s(((*l_45) = ((((*l_30) = p_9) > ((safe_div_func_uint64_t_u_u((safe_add_func_uint16_t_u_u((safe_mul_func_int8_t_s_s(g_26[p_7], ((((g_38 != ((*l_41) = (void *)0)) >= 1L), 0x23L) > p_9))), (safe_lshift_func_uint16_t_u_s(g_26[p_7], 15)))), g_4)) ^ p_6)) | l_44)), 20))));
        -:   89:  }
        1:   90:  return l_48;
        -:   91:}
        -:   92:
        1:   93:int main(int argc, char *argv[]) {
        -:   94:  int i;
        1:   95:  int print_hash_value = 0;
       1*:   96:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   97:    print_hash_value = 1;
        1:   98:  platform_main_begin();
        1:   99:  crc32_gentab();
        1:  100:  func_1();
        1:  101:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  102:  transparent_crc(g_4, "g_4", print_hash_value);
        3:  103:  for (i = 0; i < 2; i++) {
        2:  104:    transparent_crc(g_26[i], "g_26[i]", print_hash_value);
        2:  105:    if (print_hash_value)
    #####:  106:      printf("index = [%d]\n", i);
        -:  107:  }
        1:  108:  transparent_crc(g_31, "g_31", print_hash_value);
        1:  109:  transparent_crc(g_39, "g_39", print_hash_value);
        1:  110:  transparent_crc(g_47, "g_47", print_hash_value);
        3:  111:  for (i = 0; i < 2; i++) {
        2:  112:    transparent_crc(g_50[i].f0, "g_50[i].f0", print_hash_value);
        2:  113:    transparent_crc(g_50[i].f1, "g_50[i].f1", print_hash_value);
        2:  114:    transparent_crc(g_50[i].f2, "g_50[i].f2", print_hash_value);
        2:  115:    if (print_hash_value)
    #####:  116:      printf("index = [%d]\n", i);
        -:  117:  }
        1:  118:  transparent_crc(g_54, "g_54", print_hash_value);
        2:  119:  for (i = 0; i < 1; i++) {
        1:  120:    transparent_crc(g_78[i].f0, "g_78[i].f0", print_hash_value);
        1:  121:    transparent_crc(g_78[i].f1, "g_78[i].f1", print_hash_value);
        1:  122:    if (print_hash_value)
    #####:  123:      printf("index = [%d]\n", i);
        -:  124:  }
        1:  125:  transparent_crc(g_86.f0, "g_86.f0", print_hash_value);
        1:  126:  transparent_crc(g_86.f1, "g_86.f1", print_hash_value);
        1:  127:  transparent_crc(g_86.f2, "g_86.f2", print_hash_value);
        1:  128:  transparent_crc(g_86.f3, "g_86.f3", print_hash_value);
        1:  129:  transparent_crc(g_86.f4, "g_86.f4", print_hash_value);
        1:  130:  transparent_crc(g_88, "g_88", print_hash_value);
        1:  131:  transparent_crc(g_89.f0, "g_89.f0", print_hash_value);
        1:  132:  transparent_crc(g_89.f1, "g_89.f1", print_hash_value);
        1:  133:  transparent_crc(g_89.f2, "g_89.f2", print_hash_value);
        1:  134:  transparent_crc(g_89.f3, "g_89.f3", print_hash_value);
        1:  135:  transparent_crc(g_89.f4, "g_89.f4", print_hash_value);
        1:  136:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  137:  return 0;
        -:  138:}

        -:    0:Source:467.c
        -:    0:Graph:467.gcno
        -:    0:Data:467.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_2 = 0xCFF0EA75L;
        -:    7:static int32_t g_3 = 0L;
        -:    8:static uint32_t g_15 = 0UL;
        -:    9:static uint32_t g_38 = 1UL;
        -:   10:static int32_t g_40 = 0L;
        -:   11:static uint32_t g_63[2][2] = {{0x8F98093AL, 0x8F98093AL}, {0x8F98093AL, 0x8F98093AL}};
        -:   12:static uint32_t *volatile g_62[4][2] = {{(void *)0, (void *)0}, {&g_63[1][0], (void *)0}, {(void *)0, &g_63[1][0]}, {(void *)0, (void *)0}};
        -:   13:static int32_t g_72 = (-3L);
        -:   14:
        -:   15:static int64_t func_1(void);
        -:   16:static uint32_t *func_33(uint32_t *p_34, uint32_t p_35, uint32_t *p_36);
        -:   17:
        1:   18:static int64_t func_1(void) {
        1:   19:  int16_t l_21 = 9L;
        1:   20:  uint16_t l_32 = 0x2E80L;
        1:   21:  uint32_t *l_37 = &g_38;
       13:   22:  for (g_3 = 0; (g_3 != (-12)); --g_3) {
       12:   23:    uint32_t *l_13 = (void *)0;
       12:   24:    uint32_t *l_14[5] = {&g_15, &g_15, &g_15, &g_15, &g_15};
       12:   25:    int32_t l_18[5] = {0xE56890C5L, 0xE56890C5L, 0xE56890C5L, 0xE56890C5L, 0xE56890C5L};
       12:   26:    uint32_t **l_67 = &l_13;
       12:   27:    int32_t *l_68 = &g_40;
       12:   28:    uint32_t *l_69 = &g_63[1][0];
       12:   29:    int32_t l_70[2][2][5] = {{{0xB05D0942L, 0xB05D0942L, 0xB05D0942L, 0xB05D0942L, 0xB05D0942L}, {0xC2888A0EL, 0xC1F20CF6L, 0xC2888A0EL, 0xC1F20CF6L, 0xC2888A0EL}}, {{0xB05D0942L, 0xB05D0942L, 0xB05D0942L, 0xB05D0942L, 0xB05D0942L}, {0xC2888A0EL, 0xC1F20CF6L, 0xC2888A0EL, 0xC1F20CF6L, 0xC2888A0EL}}};
       12:   30:    int32_t *l_71 = &g_72;
        -:   31:    int i, j, k;
      12*:   32:    (*l_71) |= (((((safe_mul_func_int64_t_s_s((safe_unary_minus_func_int16_t_s((!(safe_unary_minus_func_uint16_t_u(((safe_mul_func_int16_t_s_s((((++g_15) && l_18[0]), (safe_mod_func_int8_t_s_s(l_21, l_18[3]))), (safe_lshift_func_uint64_t_u_u((safe_add_func_uint16_t_u_u(((l_18[0] > (((4294967295UL & ((*l_68) = ((safe_sub_func_uint64_t_u_u(((l_21 && (safe_sub_func_uint16_t_u_u(((g_3 == l_32), (((*l_67) = func_33(l_37, g_2, l_14[4])) == &g_63[1][0])), l_18[0]))) | l_18[3]), g_3)), 0x99CF48B0L))), l_69) == &g_63[0][0])), l_70[1][1][4]), g_38)), 6)))) <= 0xF1A9F139888327BCLL)))))), g_63[1][0])) <= (-1L)) != 0x13C53D17L), (*l_68)) || l_32);
        -:   33:  }
        1:   34:  return g_38;
        -:   35:}
        -:   36:
       12:   37:static uint32_t *func_33(uint32_t *p_34, uint32_t p_35, uint32_t *p_36) {
       12:   38:  int32_t *l_39 = &g_40;
       12:   39:  int16_t l_65 = (-8L);
       12:   40:lbl_43:
       12:   41:  (*l_39) ^= p_35;
      12*:   42:  for (g_40 = 0; (g_40 < (-18)); g_40 = safe_sub_func_uint32_t_u_u(g_40, 5)) {
    #####:   43:    if (p_35)
    #####:   44:      goto lbl_43;
    #####:   45:    for (p_35 = 12; (p_35 > 58); p_35 = safe_add_func_uint16_t_u_u(p_35, 4)) {
    #####:   46:      int8_t l_58[5] = {0x20L, 0x20L, 0x20L, 0x20L, 0x20L};
    #####:   47:      int32_t l_64 = 0x9CE85662L;
    #####:   48:      int32_t **l_66 = &l_39;
        -:   49:      int i;
        -:   50:    }
        -:   51:  }
       12:   52:  return &g_63[0][1];
        -:   53:}
        -:   54:
        1:   55:int main(int argc, char *argv[]) {
        -:   56:  int i, j;
        1:   57:  int print_hash_value = 0;
       1*:   58:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   59:    print_hash_value = 1;
        1:   60:  platform_main_begin();
        1:   61:  crc32_gentab();
        1:   62:  func_1();
        1:   63:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   64:  transparent_crc(g_3, "g_3", print_hash_value);
        1:   65:  transparent_crc(g_15, "g_15", print_hash_value);
        1:   66:  transparent_crc(g_38, "g_38", print_hash_value);
        1:   67:  transparent_crc(g_40, "g_40", print_hash_value);
        3:   68:  for (i = 0; i < 2; i++) {
        6:   69:    for (j = 0; j < 2; j++) {
        4:   70:      transparent_crc(g_63[i][j], "g_63[i][j]", print_hash_value);
        4:   71:      if (print_hash_value)
    #####:   72:        printf("index = [%d][%d]\n", i, j);
        -:   73:    }
        -:   74:  }
        1:   75:  transparent_crc(g_72, "g_72", print_hash_value);
        1:   76:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   77:  return 0;
        -:   78:}

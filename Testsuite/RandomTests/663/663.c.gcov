        -:    0:Source:663.c
        -:    0:Graph:663.gcno
        -:    0:Data:663.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  const unsigned f0 : 29;
        -:    8:  const volatile unsigned f1 : 30;
        -:    9:  volatile signed f2 : 8;
        -:   10:};
        -:   11:
        -:   12:struct S1 {
        -:   13:  int64_t f0;
        -:   14:  const uint8_t f1;
        -:   15:};
        -:   16:
        -:   17:#pragma pack(push)
        -:   18:#pragma pack(1)
        -:   19:struct S2 {
        -:   20:  uint64_t f0;
        -:   21:  struct S0 f1;
        -:   22:  uint64_t f2;
        -:   23:};
        -:   24:#pragma pack(pop)
        -:   25:
        -:   26:union U5 {
        -:   27:  uint32_t f0;
        -:   28:  volatile uint32_t f1;
        -:   29:  const int32_t f2;
        -:   30:  int8_t f3;
        -:   31:};
        -:   32:
        -:   33:static volatile uint32_t g_2 = 18446744073709551606UL;
        -:   34:static int32_t g_3 = 0x7747BB7AL;
        -:   35:static struct S2 g_14 = {0x8B01213072C02A30LL, {4020, 1394, -10}, 0x15D3E9973063D62ALL};
        -:   36:static int16_t g_22 = 4L;
        -:   37:static int8_t g_47 = 0x57L;
        -:   38:static int32_t g_50[3] = {6L, 6L, 6L};
        -:   39:static int32_t *volatile g_49 = &g_50[0];
        -:   40:static int32_t *g_52 = &g_50[0];
        -:   41:static int32_t **volatile g_51 = &g_52;
        -:   42:static int64_t g_65[2][3] = {{0x8A3ABE652606BDE5LL, 0x091F4D940354EEA3LL, 0x8A3ABE652606BDE5LL}, {0x8A3ABE652606BDE5LL, 0x091F4D940354EEA3LL, 0x8A3ABE652606BDE5LL}};
        -:   43:static uint32_t g_73[3] = {0x20AF8266L, 0x20AF8266L, 0x20AF8266L};
        -:   44:static uint32_t *g_72 = &g_73[0];
        -:   45:static uint32_t **g_71 = &g_72;
        -:   46:static uint32_t ***volatile g_70 = &g_71;
        -:   47:static const int32_t *g_75 = &g_50[0];
        -:   48:static const int32_t **g_74 = &g_75;
        -:   49:static const int32_t **g_77 = (void *)0;
        -:   50:static volatile struct S0 g_91 = {20795, 32397, 3};
        -:   51:static volatile struct S2 g_100 = {0UL, {4826, 28703, -11}, 1UL};
        -:   52:static union U5 g_101 = {0xD2E6782AL};
        -:   53:static uint8_t g_106 = 0x3EL;
        -:   54:static uint8_t g_114[3][3][1] = {{{0UL}, {0UL}, {0UL}}, {{0UL}, {0UL}, {0UL}}, {{0UL}, {0UL}, {0UL}}};
        -:   55:static union U5 g_119 = {1UL};
        -:   56:
        -:   57:static const uint32_t func_1(void);
        -:   58:static int32_t *func_6(uint32_t p_7, uint16_t p_8, int32_t *p_9, int32_t *p_10);
        -:   59:
        1:   60:static const uint32_t func_1(void) {
        1:   61:  int8_t l_83 = 0x9CL;
        1:   62:  int32_t l_84 = 1L;
        1:   63:  if ((0xD66A07563FFAF072LL | g_2)) {
        1:   64:    int16_t l_11 = 0x67C2L;
        1:   65:    int32_t *l_81 = (void *)0;
        1:   66:    int32_t l_85 = (-1L);
        1:   67:    uint64_t l_127[5] = {3UL, 3UL, 3UL, 3UL, 3UL};
        -:   68:    int i;
       1*:   69:    for (g_3 = 28; (g_3 <= 3); g_3 = safe_sub_func_uint32_t_u_u(g_3, 8)) {
        -:   70:      int32_t *l_13[1];
    #####:   71:      int32_t **l_12 = &l_13[0];
    #####:   72:      int32_t ***l_82 = &l_12;
        -:   73:      int i;
    #####:   74:      for (i = 0; i < 1; i++)
    #####:   75:        l_13[i] = &g_3;
        -:   76:    }
        -:   77:  } else {
        -:   78:    return (*g_72);
        -:   79:  }
        1:   80:  (*g_52) = l_84;
        1:   81:  return l_84;
        -:   82:}
        -:   83:
    #####:   84:static int32_t *func_6(uint32_t p_7, uint16_t p_8, int32_t *p_9, int32_t *p_10) {
        -:   85:  uint32_t l_21[5][1];
    #####:   86:  int32_t l_28 = 0x5678D568L;
    #####:   87:  int32_t l_29 = 0x1B3B3333L;
    #####:   88:  int8_t *l_46 = &g_47;
    #####:   89:  uint64_t l_61[5][4] = {{0x1CDDC18638AA3AE4LL, 18446744073709551615UL, 18446744073709551614UL, 18446744073709551615UL}, {18446744073709551615UL, 0x98303F43C5EACAA0LL, 18446744073709551614UL, 18446744073709551614UL}, {0x1CDDC18638AA3AE4LL, 0x1CDDC18638AA3AE4LL, 18446744073709551615UL, 18446744073709551614UL}, {0x63C96AADB6CD35A0LL, 0x98303F43C5EACAA0LL, 0x63C96AADB6CD35A0LL, 18446744073709551615UL}, {0x63C96AADB6CD35A0LL, 18446744073709551615UL, 18446744073709551615UL, 0x63C96AADB6CD35A0LL}};
    #####:   90:  uint32_t *l_69 = &l_21[1][0];
    #####:   91:  uint32_t **l_68[4][5] = {{(void *)0, (void *)0, &l_69, (void *)0, (void *)0}, {&l_69, (void *)0, &l_69, &l_69, (void *)0}, {(void *)0, &l_69, &l_69, (void *)0, &l_69}, {(void *)0, (void *)0, &l_69, (void *)0, (void *)0}};
        -:   92:  int i, j;
    #####:   93:  for (i = 0; i < 5; i++) {
    #####:   94:    for (j = 0; j < 1; j++)
    #####:   95:      l_21[i][j] = 0xDDA5659CL;
        -:   96:  }
    #####:   97:  if (((0x79L || (g_14, (safe_sub_func_uint16_t_u_u((((g_2 < ((safe_rshift_func_int8_t_s_u((safe_div_func_uint16_t_u_u(l_21[1][0], 65529UL)), 6)) ^ g_22)) && (p_7 < ((safe_mul_func_uint16_t_u_u((((l_21[1][0] || (safe_div_func_int64_t_s_s(7L, g_2))) <= 65530UL) || g_2), g_14.f0)) && l_21[0][0]))) != g_22), p_7)))) ^ g_3)) {
    #####:   98:    int32_t l_27 = (-2L);
    #####:   99:    g_14.f1.f2 |= (l_29 = (l_28 = l_27));
        -:  100:  } else {
    #####:  101:    struct S1 l_35 = {1L, 0x24L};
    #####:  102:    int8_t *l_38 = (void *)0;
    #####:  103:    int64_t *l_39 = &l_35.f0;
    #####:  104:    int64_t *l_64 = &g_65[0][2];
    #####:  105:    int32_t *l_66 = &l_29;
    #####:  106:    if ((safe_lshift_func_int8_t_s_s(((p_8 <= 0x19C85691F3A4B440LL) < ((l_21[1][0] || ((g_14.f1, g_3) != (safe_rshift_func_int8_t_s_s((((*l_39) = (~(l_35, (g_22, ((safe_add_func_uint8_t_u_u(((l_29 = 0x31L) <= g_3), 0xFEL)) || 0x427E5571BE33BD0DLL))))), p_7), 0)))) ^ l_21[1][0])), 2))) {
    #####:  107:      uint16_t l_44 = 0UL;
    #####:  108:      for (l_35.f0 = 0; (l_35.f0 < 4); ++l_35.f0) {
    #####:  109:        uint32_t *l_45 = &l_21[1][0];
    #####:  110:        int32_t *l_48 = (void *)0;
    #####:  111:        if (l_29)
    #####:  112:          break;
    #####:  113:        (*g_49) = (safe_sub_func_uint64_t_u_u(l_44, (g_22 != ((((*l_45) = g_22), l_46) == (g_3, l_38)))));
        -:  114:      }
    #####:  115:      (*g_51) = &g_3;
        -:  116:    } else {
    #####:  117:      (*g_52) = (*g_52);
    #####:  118:      return p_9;
        -:  119:    }
    #####:  120:    (*l_66) ^= (0L != ((safe_mod_func_uint64_t_u_u(((l_35.f1 ^ (safe_mul_func_uint64_t_u_u((safe_mod_func_uint16_t_u_u(g_14.f1.f1, (((safe_rshift_func_int64_t_s_u(((*l_39) = g_14.f0), 47)) & g_50[0]) || (l_35, l_61[2][3])))), ((*l_64) = (0x39976036L | ((safe_add_func_int32_t_s_s((-1L), (*g_52))) & l_35.f1)))))) == l_21[1][0]), 18446744073709551615UL)) || p_8));
        -:  121:  }
    #####:  122:  for (p_8 = 0; (p_8 <= 1); p_8 += 1) {
    #####:  123:    for (l_28 = 0; (l_28 <= 3); l_28 += 1) {
    #####:  124:      int32_t *l_67 = &g_50[0];
        -:  125:      int i;
    #####:  126:      (*l_67) = ((-1L) || g_50[p_8]);
    #####:  127:      for (g_22 = 1; (g_22 >= 0); g_22 -= 1) {
    #####:  128:        const int32_t ***l_76 = &g_74;
        -:  129:        int i, j;
    #####:  130:        (*g_70) = l_68[2][1];
    #####:  131:        (*l_67) = ((&g_52 != (g_77 = ((*l_76) = g_74))), g_65[p_8][(p_8 + 1)]);
        -:  132:      }
        -:  133:    }
    #####:  134:    (*g_74) = (void *)0;
    #####:  135:    for (g_47 = 0; (g_47 <= 1); g_47 += 1) {
        -:  136:      int32_t *l_80[2];
        -:  137:      int i, j;
    #####:  138:      for (i = 0; i < 2; i++)
    #####:  139:        l_80[i] = &l_29;
    #####:  140:      (*g_49) = (safe_add_func_uint32_t_u_u(g_50[p_8], (g_65[g_47][p_8] == l_21[1][0])));
        -:  141:    }
        -:  142:  }
    #####:  143:  return p_10;
        -:  144:}
        -:  145:
        1:  146:int main(int argc, char *argv[]) {
        -:  147:  int i, j, k;
        1:  148:  int print_hash_value = 0;
       1*:  149:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  150:    print_hash_value = 1;
        1:  151:  platform_main_begin();
        1:  152:  crc32_gentab();
        1:  153:  func_1();
        1:  154:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  155:  transparent_crc(g_3, "g_3", print_hash_value);
        1:  156:  transparent_crc(g_14.f0, "g_14.f0", print_hash_value);
        1:  157:  transparent_crc(g_14.f1.f0, "g_14.f1.f0", print_hash_value);
        1:  158:  transparent_crc(g_14.f1.f1, "g_14.f1.f1", print_hash_value);
        1:  159:  transparent_crc(g_14.f1.f2, "g_14.f1.f2", print_hash_value);
        1:  160:  transparent_crc(g_14.f2, "g_14.f2", print_hash_value);
        1:  161:  transparent_crc(g_22, "g_22", print_hash_value);
        1:  162:  transparent_crc(g_47, "g_47", print_hash_value);
        4:  163:  for (i = 0; i < 3; i++) {
        3:  164:    transparent_crc(g_50[i], "g_50[i]", print_hash_value);
        3:  165:    if (print_hash_value)
    #####:  166:      printf("index = [%d]\n", i);
        -:  167:  }
        3:  168:  for (i = 0; i < 2; i++) {
        8:  169:    for (j = 0; j < 3; j++) {
        6:  170:      transparent_crc(g_65[i][j], "g_65[i][j]", print_hash_value);
        6:  171:      if (print_hash_value)
    #####:  172:        printf("index = [%d][%d]\n", i, j);
        -:  173:    }
        -:  174:  }
        4:  175:  for (i = 0; i < 3; i++) {
        3:  176:    transparent_crc(g_73[i], "g_73[i]", print_hash_value);
        3:  177:    if (print_hash_value)
    #####:  178:      printf("index = [%d]\n", i);
        -:  179:  }
        1:  180:  transparent_crc(g_91.f0, "g_91.f0", print_hash_value);
        1:  181:  transparent_crc(g_91.f1, "g_91.f1", print_hash_value);
        1:  182:  transparent_crc(g_91.f2, "g_91.f2", print_hash_value);
        1:  183:  transparent_crc(g_100.f0, "g_100.f0", print_hash_value);
        1:  184:  transparent_crc(g_100.f1.f0, "g_100.f1.f0", print_hash_value);
        1:  185:  transparent_crc(g_100.f1.f1, "g_100.f1.f1", print_hash_value);
        1:  186:  transparent_crc(g_100.f1.f2, "g_100.f1.f2", print_hash_value);
        1:  187:  transparent_crc(g_100.f2, "g_100.f2", print_hash_value);
        1:  188:  transparent_crc(g_101.f0, "g_101.f0", print_hash_value);
        1:  189:  transparent_crc(g_106, "g_106", print_hash_value);
        4:  190:  for (i = 0; i < 3; i++) {
       12:  191:    for (j = 0; j < 3; j++) {
       18:  192:      for (k = 0; k < 1; k++) {
        9:  193:        transparent_crc(g_114[i][j][k], "g_114[i][j][k]", print_hash_value);
        9:  194:        if (print_hash_value)
    #####:  195:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  196:      }
        -:  197:    }
        -:  198:  }
        1:  199:  transparent_crc(g_119.f0, "g_119.f0", print_hash_value);
        1:  200:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  201:  return 0;
        -:  202:}

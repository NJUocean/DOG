        -:    0:Source:237.c
        -:    0:Graph:237.gcno
        -:    0:Data:237.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int64_t g_4[1][3][3] = {{{0xE97EEDE0B4074DD0LL, 0xE97EEDE0B4074DD0LL, 0xE97EEDE0B4074DD0LL}, {0xE97EEDE0B4074DD0LL, 0xE97EEDE0B4074DD0LL, 0xE97EEDE0B4074DD0LL}, {0xE97EEDE0B4074DD0LL, 0xE97EEDE0B4074DD0LL, 0xE97EEDE0B4074DD0LL}}};
        -:    7:static int32_t g_6[4][5][4] = {{{8L, (-3L), (-3L), 8L}, {0x54320E32L, 0x5534BF8FL, 4L, 6L}, {(-9L), (-10L), 1L, (-3L)}, {4L, 0L, 0xD6B65720L, (-3L)}, {0xE23A266DL, (-10L), (-2L), 6L}}, {{0xEF307D7CL, 0x5534BF8FL, 0x963AB194L, 8L}, {0x1D14CD49L, (-3L), 0x1D14CD49L, 0x54320E32L}, {0L, 4L, 0x5D7249AAL, (-9L)}, {0x5534BF8FL, 1L, (-9L), 4L}, {(-2L), 0x963AB194L, 6L, 0x10EC3203L}}, {{(-3L), 0x5D7249AAL, 0xD6B65720L, (-10L)}, {0x1D14CD49L, 0L, (-10L), (-10L)}, {(-10L), (-10L), 0L, 0x1D14CD49L}, {(-10L), 0xD6B65720L, 0x5D7249AAL, (-3L)}, {0x10EC3203L, 6L, 0x963AB194L, 0x5D7249AAL}}, {{0x54320E32L, 6L, 0L, (-3L)}, {6L, 0xD6B65720L, 0x54320E32L, 0x1D14CD49L}, {(-2L), (-10L), 0xBF2121F9L, (-10L)}, {(-9L), 0L, (-3L), (-10L)}, {4L, 0x5D7249AAL, (-9L), 0x10EC3203L}}};
        -:    8:
        -:    9:static uint64_t func_1(void);
        -:   10:
        1:   11:static uint64_t func_1(void) {
        1:   12:  uint16_t l_2 = 0xF43BL;
        1:   13:  int32_t *l_3 = (void *)0;
        1:   14:  int32_t *l_5 = &g_6[0][3][1];
        1:   15:  int32_t *l_7 = &g_6[0][3][1];
        1:   16:  int32_t *l_8 = (void *)0;
        1:   17:  int32_t *l_9[4][4][4] = {{{&g_6[1][3][0], &g_6[0][3][1], &g_6[0][3][1], &g_6[1][3][0]}, {&g_6[0][3][1], &g_6[1][3][0], &g_6[0][3][1], &g_6[0][3][1]}, {&g_6[1][3][0], &g_6[1][3][0], &g_6[3][4][3], &g_6[1][3][0]}, {&g_6[1][3][0], &g_6[0][3][1], &g_6[0][3][1], &g_6[1][3][0]}},
        -:   18:                           {{&g_6[0][3][1], &g_6[1][3][0], &g_6[0][3][1], &g_6[0][3][1]}, {&g_6[1][3][0], &g_6[1][3][0], &g_6[3][4][3], &g_6[1][3][0]}, {&g_6[1][3][0], &g_6[0][3][1], &g_6[0][3][1], &g_6[1][3][0]}, {&g_6[0][3][1], &g_6[1][3][0], &g_6[0][3][1], &g_6[0][3][1]}},
        -:   19:                           {{&g_6[1][3][0], &g_6[1][3][0], &g_6[3][4][3], &g_6[1][3][0]}, {&g_6[1][3][0], &g_6[0][3][1], &g_6[0][3][1], &g_6[1][3][0]}, {&g_6[0][3][1], &g_6[1][3][0], &g_6[0][3][1], &g_6[0][3][1]}, {&g_6[1][3][0], &g_6[1][3][0], &g_6[3][4][3], &g_6[1][3][0]}},
        -:   20:                           {{&g_6[1][3][0], &g_6[0][3][1], &g_6[0][3][1], &g_6[1][3][0]}, {&g_6[0][3][1], &g_6[1][3][0], &g_6[0][3][1], &g_6[0][3][1]}, {&g_6[1][3][0], &g_6[1][3][0], &g_6[3][4][3], &g_6[1][3][0]}, {&g_6[1][3][0], &g_6[0][3][1], &g_6[0][3][1], &g_6[1][3][0]}}};
        1:   21:  int32_t l_10 = 0xAFFF74B7L;
        1:   22:  uint32_t l_11 = 0x5DFDCAF0L;
        -:   23:  int i, j, k;
        1:   24:  g_4[0][2][0] = l_2;
        1:   25:  --l_11;
        1:   26:  return (*l_5);
        -:   27:}
        -:   28:
        1:   29:int main(int argc, char *argv[]) {
        -:   30:  int i, j, k;
        1:   31:  int print_hash_value = 0;
       1*:   32:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   33:    print_hash_value = 1;
        1:   34:  platform_main_begin();
        1:   35:  crc32_gentab();
        1:   36:  func_1();
        2:   37:  for (i = 0; i < 1; i++) {
        4:   38:    for (j = 0; j < 3; j++) {
       12:   39:      for (k = 0; k < 3; k++) {
        9:   40:        transparent_crc(g_4[i][j][k], "g_4[i][j][k]", print_hash_value);
        9:   41:        if (print_hash_value)
    #####:   42:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   43:      }
        -:   44:    }
        -:   45:  }
        5:   46:  for (i = 0; i < 4; i++) {
       24:   47:    for (j = 0; j < 5; j++) {
      100:   48:      for (k = 0; k < 4; k++) {
       80:   49:        transparent_crc(g_6[i][j][k], "g_6[i][j][k]", print_hash_value);
       80:   50:        if (print_hash_value)
    #####:   51:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   52:      }
        -:   53:    }
        -:   54:  }
        1:   55:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   56:  return 0;
        -:   57:}

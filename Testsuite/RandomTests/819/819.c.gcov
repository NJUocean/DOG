        -:    0:Source:819.c
        -:    0:Graph:819.gcno
        -:    0:Data:819.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int64_t g_2 = 1L;
        -:    7:static int32_t g_7 = 0x2B165808L;
        -:    8:static uint32_t g_12[3][1][1] = {{{0x22D5FBA2L}}, {{0x22D5FBA2L}}, {{0x22D5FBA2L}}};
        -:    9:static int32_t *g_17 = &g_7;
        -:   10:
        -:   11:static int32_t func_1(void);
        -:   12:static int32_t *func_3(int32_t p_4);
        -:   13:
        1:   14:static int32_t func_1(void) {
        1:   15:  int32_t *l_16 = (void *)0;
        -:   16:  int32_t **l_15[2];
        1:   17:  int32_t *l_18 = (void *)0;
        1:   18:  int8_t l_19 = 0xB9L;
        -:   19:  int i;
        3:   20:  for (i = 0; i < 2; i++)
        2:   21:    l_15[i] = &l_16;
        1:   22:  l_18 = (g_2, (g_17 = func_3(g_2)));
        1:   23:  return l_19;
        -:   24:}
        -:   25:
        1:   26:static int32_t *func_3(int32_t p_4) {
        1:   27:  int32_t *l_5 = (void *)0;
        1:   28:  int32_t *l_6 = &g_7;
        1:   29:  int32_t *l_8 = &g_7;
        1:   30:  int32_t *l_9 = &g_7;
        1:   31:  int32_t *l_10 = &g_7;
        1:   32:  int32_t *l_11[4][3][3] = {{{&g_7, &g_7, &g_7}, {&g_7, &g_7, &g_7}, {&g_7, &g_7, &g_7}}, {{&g_7, &g_7, &g_7}, {&g_7, &g_7, &g_7}, {&g_7, &g_7, &g_7}}, {{&g_7, &g_7, &g_7}, {&g_7, &g_7, &g_7}, {&g_7, &g_7, &g_7}}, {{&g_7, &g_7, &g_7}, {&g_7, &g_7, &g_7}, {&g_7, &g_7, &g_7}}};
        -:   33:  int i, j, k;
        1:   34:  g_12[0][0][0]++;
        1:   35:  return &g_7;
        -:   36:}
        -:   37:
        1:   38:int main(int argc, char *argv[]) {
        -:   39:  int i, j, k;
        1:   40:  int print_hash_value = 0;
       1*:   41:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   42:    print_hash_value = 1;
        1:   43:  platform_main_begin();
        1:   44:  crc32_gentab();
        1:   45:  func_1();
        1:   46:  transparent_crc(g_2, "g_2", print_hash_value);
        1:   47:  transparent_crc(g_7, "g_7", print_hash_value);
        4:   48:  for (i = 0; i < 3; i++) {
        6:   49:    for (j = 0; j < 1; j++) {
        6:   50:      for (k = 0; k < 1; k++) {
        3:   51:        transparent_crc(g_12[i][j][k], "g_12[i][j][k]", print_hash_value);
        3:   52:        if (print_hash_value)
    #####:   53:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   54:      }
        -:   55:    }
        -:   56:  }
        1:   57:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   58:  return 0;
        -:   59:}

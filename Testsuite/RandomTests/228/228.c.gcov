        -:    0:Source:228.c
        -:    0:Graph:228.gcno
        -:    0:Data:228.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_3[3] = {0x6FE7D8A8L, 0x6FE7D8A8L, 0x6FE7D8A8L};
        -:    7:static volatile int32_t *g_2 = &g_3[2];
        -:    8:static int64_t g_25 = 0x52B4B5A9CEA445A8LL;
        -:    9:static int32_t g_28 = 0xD1D2A6F9L;
        -:   10:static int64_t g_42 = 9L;
        -:   11:static int16_t g_44 = 0L;
        -:   12:static uint16_t g_50 = 0x5465L;
        -:   13:static uint32_t g_52 = 0x21EB1ED3L;
        -:   14:
        -:   15:static uint64_t func_1(void);
        -:   16:static uint32_t func_6(int8_t p_7);
        -:   17:
        1:   18:static uint64_t func_1(void) {
        1:   19:  volatile int32_t *l_4 = (void *)0;
        1:   20:  int32_t l_40 = 1L;
        1:   21:  int64_t *l_41 = &g_42;
        1:   22:  int16_t *l_43 = &g_44;
        1:   23:  uint16_t *l_49 = &g_50;
        1:   24:  uint32_t *l_51 = &g_52;
        1:   25:  l_4 = g_2;
       1*:   26:  (*g_2) = ((+(((func_6(g_3[2]) ^ ((*l_51) = (0xDDA259C4L & (((safe_mod_func_uint64_t_u_u((l_40 < ((*l_43) = (l_41 != &g_42))), (safe_div_func_uint16_t_u_u(((*l_49) = (g_42 & (safe_lshift_func_int64_t_s_u(((((void *)0 == &g_42) & g_42), l_40), 62)))), g_42)))), g_50) || l_40)))) ^ 0x1E9426CEL) >= g_42)), (*g_2));
        1:   27:  return g_28;
        -:   28:}
        -:   29:
        1:   30:static uint32_t func_6(int8_t p_7) {
        -:   31:  const int32_t l_13[3][5] = {{0x0CBEB969L, 0x9141A9C2L, 0x0CBEB969L, 0x0CBEB969L, 0x9141A9C2L}, {0x9141A9C2L, 0x0CBEB969L, 0x0CBEB969L, 0x9141A9C2L, 0x0CBEB969L}, {0x9141A9C2L, 0x9141A9C2L, 0L, 0x9141A9C2L, 0x9141A9C2L}};
        1:   32:  int64_t *l_24 = &g_25;
        1:   33:  int32_t l_26 = 0x7758B39DL;
        1:   34:  int32_t *l_27 = &g_28;
        -:   35:  int i, j;
        1:   36:  if ((safe_unary_minus_func_int32_t_s(((((safe_mod_func_int64_t_s_s((safe_rshift_func_uint16_t_u_u((((l_13[0][1], (1L == ((safe_lshift_func_uint64_t_u_s((safe_add_func_uint64_t_u_u((safe_add_func_int16_t_s_s(((safe_rshift_func_int16_t_s_u(((g_3[2] | (safe_rshift_func_uint8_t_u_s(p_7, 3))), g_3[0]), (0x5EBEC5EC62BB2C59LL >= (l_26 ^= ((*l_24) = (-1L)))))) >= (((l_27 != (void *)0), (void *)0) != &g_28)), g_28)), 1UL)), g_28)) & 0xCBL))), 0L), 0xE072L), (*l_27))), 0xC24489BE67E784B5LL)), 0xD8607F47L) ^ 8L), (-4L))))) {
        1:   37:    uint64_t l_29 = 0xC8A0C0902002449ELL;
        1:   38:    ++l_29;
        -:   39:  } else {
    #####:   40:  lbl_37:
    #####:   41:    for (g_28 = 0; (g_28 >= (-19)); g_28 = safe_sub_func_uint16_t_u_u(g_28, 9)) {
    #####:   42:      uint8_t l_34 = 1UL;
    #####:   43:      return l_34;
        -:   44:    }
    #####:   45:    for (l_26 = 4; (l_26 < (-24)); l_26 = safe_sub_func_int16_t_s_s(l_26, 2)) {
    #####:   46:      if (l_26)
    #####:   47:        goto lbl_37;
        -:   48:    }
        -:   49:  }
        1:   50:  return p_7;
        -:   51:}
        -:   52:
        1:   53:int main(int argc, char *argv[]) {
        -:   54:  int i;
        1:   55:  int print_hash_value = 0;
       1*:   56:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   57:    print_hash_value = 1;
        1:   58:  platform_main_begin();
        1:   59:  crc32_gentab();
        1:   60:  func_1();
        4:   61:  for (i = 0; i < 3; i++) {
        3:   62:    transparent_crc(g_3[i], "g_3[i]", print_hash_value);
        3:   63:    if (print_hash_value)
    #####:   64:      printf("index = [%d]\n", i);
        -:   65:  }
        1:   66:  transparent_crc(g_25, "g_25", print_hash_value);
        1:   67:  transparent_crc(g_28, "g_28", print_hash_value);
        1:   68:  transparent_crc(g_42, "g_42", print_hash_value);
        1:   69:  transparent_crc(g_44, "g_44", print_hash_value);
        1:   70:  transparent_crc(g_50, "g_50", print_hash_value);
        1:   71:  transparent_crc(g_52, "g_52", print_hash_value);
        1:   72:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   73:  return 0;
        -:   74:}

        -:    0:Source:479.c
        -:    0:Graph:479.gcno
        -:    0:Data:479.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  int32_t f0;
        -:    8:  uint64_t f1;
        -:    9:  uint32_t f2;
        -:   10:  uint64_t f3;
        -:   11:  uint8_t f4;
        -:   12:};
        -:   13:
        -:   14:#pragma pack(push)
        -:   15:#pragma pack(1)
        -:   16:struct S1 {
        -:   17:  signed f0 : 15;
        -:   18:  const uint64_t f1;
        -:   19:  int16_t f2;
        -:   20:};
        -:   21:#pragma pack(pop)
        -:   22:
        -:   23:#pragma pack(push)
        -:   24:#pragma pack(1)
        -:   25:struct S2 {
        -:   26:  int16_t f0;
        -:   27:};
        -:   28:#pragma pack(pop)
        -:   29:
        -:   30:static uint32_t g_11[2][1][5] = {{{0x25B054DBL, 0x25B054DBL, 0x25B054DBL, 0x25B054DBL, 0x25B054DBL}}, {{0xF07C70ABL, 0x0C544087L, 0xF07C70ABL, 0x0C544087L, 0xF07C70ABL}}};
        -:   31:static int8_t g_29 = 0x3EL;
        -:   32:static struct S2 g_30 = {0L};
        -:   33:static struct S1 g_31 = {108, 18446744073709551609UL, 0xFC7DL};
        -:   34:static volatile struct S0 g_43 = {0x42039CE8L, 0x662B132DC1B2D863LL, 18446744073709551615UL, 1UL, 0x03L};
        -:   35:static uint16_t g_45 = 1UL;
        -:   36:static int32_t g_50 = (-9L);
        -:   37:static int32_t g_52 = 0x8B058B50L;
        -:   38:static int32_t *volatile g_51 = &g_52;
        -:   39:
        -:   40:static const struct S1 func_1(void);
        -:   41:static int32_t func_2(int32_t p_3, int32_t p_4, struct S2 p_5, int32_t p_6, struct S1 p_7);
        -:   42:
        1:   43:static const struct S1 func_1(void) {
        1:   44:  uint64_t l_14 = 0UL;
        1:   45:  int16_t l_27 = 5L;
        1:   46:  int8_t *l_28 = &g_29;
        1:   47:  uint16_t l_48 = 0x0421L;
        1:   48:  int32_t l_55 = (-3L);
        1:   49:  const int32_t l_58 = 0x1D86E6AFL;
        -:   50:  const struct S1 l_67 = {121, 0x8D27FD735AE52E9ALL, 0x701FL};
        1:   51:  if (func_2((safe_div_func_uint8_t_u_u((+g_11[0][0][1]), ((*l_28) &= (((safe_lshift_func_uint16_t_u_s(l_14, (safe_mul_func_int16_t_s_s(g_11[0][0][1], ((((safe_sub_func_int64_t_s_s((l_14 <= ((l_14 ^ (safe_lshift_func_int8_t_s_s((safe_div_func_uint32_t_u_u((safe_lshift_func_uint8_t_u_s((safe_add_func_uint64_t_u_u((0L != l_14), (l_27 != l_14))), 5)), l_14)), 6))) ^ 7UL)), l_14)) != g_11[1][0][1]) & 1UL) ^ l_14))))) | g_11[1][0][1]), 0xE5L)))), g_11[0][0][1], g_30, l_27, g_31)) {
        3:   52:    for (l_14 = 0; l_14 < 2; l_14 += 1) {
        4:   53:      for (g_30.f0 = 0; g_30.f0 < 1; g_30.f0 += 1) {
       12:   54:        for (g_31.f2 = 0; g_31.f2 < 5; g_31.f2 += 1) {
       10:   55:          g_11[l_14][g_30.f0][g_31.f2] = 18446744073709551606UL;
        -:   56:        }
        -:   57:      }
        -:   58:    }
        -:   59:  } else {
    #####:   60:    uint32_t l_42 = 4UL;
    #####:   61:    uint16_t *l_44 = &g_45;
    #####:   62:    int32_t *l_49 = &g_50;
    #####:   63:    int16_t *l_61 = &g_30.f0;
    #####:   64:    int16_t *l_62 = &g_31.f2;
    #####:   65:    (*g_51) = ((*l_49) |= ((l_42, ((l_27 < (((l_28 == (g_43, (void *)0)) && (l_14, (((*l_44) = g_31.f0) >= (g_31.f0 ^ (safe_sub_func_uint8_t_u_u((1UL <= l_14), l_48)))))) && g_31.f2)) <= g_11[1][0][0])) | 0xBD97C292L));
    #####:   66:    (*l_49) = (safe_sub_func_int32_t_s_s(l_55, (safe_rshift_func_int64_t_s_s(((void *)0 != &l_55), (l_58 || ((*l_49) < ((((safe_div_func_uint16_t_u_u((((*l_62) = ((*l_61) ^= (&g_52 != &g_52))) && ((safe_add_func_uint64_t_u_u((safe_mod_func_int64_t_s_s(((void *)0 == l_44), g_30.f0)), 0L)) > 0xC8559CE7L)), 0x3388L)), g_31.f0) < 0x310705E7L), g_43.f0)))))));
        -:   67:  }
        1:   68:  return l_67;
        -:   69:}
        -:   70:
        1:   71:static int32_t func_2(int32_t p_3, int32_t p_4, struct S2 p_5, int32_t p_6, struct S1 p_7) {
       1*:   72:  for (g_31.f2 = 25; (g_31.f2 < 16); g_31.f2 = safe_sub_func_int16_t_s_s(g_31.f2, 4)) {
    #####:   73:    for (g_29 = 4; (g_29 == (-24)); g_29--) {
    #####:   74:      for (p_6 = 0; (p_6 < (-27)); p_6--) {
    #####:   75:        return g_31.f1;
        -:   76:      }
        -:   77:    }
    #####:   78:    for (p_7.f2 = 0; (p_7.f2 <= 17); p_7.f2 = safe_add_func_int16_t_s_s(p_7.f2, 4)) {
    #####:   79:      for (p_3 = (-18); (p_3 >= (-13)); p_3 = safe_add_func_uint32_t_u_u(p_3, 7)) {
    #####:   80:        return p_7.f2;
        -:   81:      }
        -:   82:    }
        -:   83:  }
        1:   84:  return p_6;
        -:   85:}
        -:   86:
        1:   87:int main(int argc, char *argv[]) {
        -:   88:  int i, j, k;
        1:   89:  int print_hash_value = 0;
       1*:   90:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   91:    print_hash_value = 1;
        1:   92:  platform_main_begin();
        1:   93:  crc32_gentab();
        1:   94:  func_1();
        3:   95:  for (i = 0; i < 2; i++) {
        4:   96:    for (j = 0; j < 1; j++) {
       12:   97:      for (k = 0; k < 5; k++) {
       10:   98:        transparent_crc(g_11[i][j][k], "g_11[i][j][k]", print_hash_value);
       10:   99:        if (print_hash_value)
    #####:  100:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  101:      }
        -:  102:    }
        -:  103:  }
        1:  104:  transparent_crc(g_29, "g_29", print_hash_value);
        1:  105:  transparent_crc(g_30.f0, "g_30.f0", print_hash_value);
        1:  106:  transparent_crc(g_31.f0, "g_31.f0", print_hash_value);
        1:  107:  transparent_crc(g_31.f1, "g_31.f1", print_hash_value);
        1:  108:  transparent_crc(g_31.f2, "g_31.f2", print_hash_value);
        1:  109:  transparent_crc(g_43.f0, "g_43.f0", print_hash_value);
        1:  110:  transparent_crc(g_43.f1, "g_43.f1", print_hash_value);
        1:  111:  transparent_crc(g_43.f2, "g_43.f2", print_hash_value);
        1:  112:  transparent_crc(g_43.f3, "g_43.f3", print_hash_value);
        1:  113:  transparent_crc(g_43.f4, "g_43.f4", print_hash_value);
        1:  114:  transparent_crc(g_45, "g_45", print_hash_value);
        1:  115:  transparent_crc(g_50, "g_50", print_hash_value);
        1:  116:  transparent_crc(g_52, "g_52", print_hash_value);
        1:  117:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  118:  return 0;
        -:  119:}

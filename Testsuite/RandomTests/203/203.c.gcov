        -:    0:Source:203.c
        -:    0:Graph:203.gcno
        -:    0:Data:203.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static uint64_t g_9 = 18446744073709551615UL;
        -:    7:static uint64_t *const g_15 = (void *)0;
        -:    8:static uint8_t g_16 = 255UL;
        -:    9:static volatile int32_t g_18 = 0xD1C58BDFL;
        -:   10:static volatile int32_t *const volatile g_17 = &g_18;
        -:   11:static volatile int32_t *g_20[5] = {&g_18, &g_18, &g_18, &g_18, &g_18};
        -:   12:static volatile int32_t *volatile *volatile g_19[1] = {&g_20[4]};
        -:   13:static volatile int32_t *volatile *volatile g_21 = (void *)0;
        -:   14:static int8_t g_23 = 0xA5L;
        -:   15:static uint64_t g_27[2][2] = {{0x40E11A796D402DA3LL, 0x40E11A796D402DA3LL}, {0x40E11A796D402DA3LL, 0x40E11A796D402DA3LL}};
        -:   16:static uint8_t g_29[3][4] = {{246UL, 246UL, 0x99L, 246UL}, {246UL, 249UL, 249UL, 246UL}, {249UL, 246UL, 249UL, 249UL}};
        -:   17:static int32_t g_31 = 1L;
        -:   18:
        -:   19:static int64_t func_1(void);
        -:   20:static int64_t func_12(const int16_t p_13, int32_t p_14);
        -:   21:
        1:   22:static int64_t func_1(void) {
        1:   23:  uint32_t l_2 = 0xE76F5020L;
        1:   24:  int32_t l_3 = 0x46158D32L;
        -:   25:  int32_t l_24[3][1];
        1:   26:  uint64_t *l_26[2][5][2] = {{{&g_27[1][0], &g_27[1][0]}, {&g_27[1][0], &g_27[1][0]}, {&g_27[1][0], &g_27[1][0]}, {&g_27[1][0], (void *)0}, {&g_27[1][0], (void *)0}}, {{&g_27[1][0], &g_27[1][0]}, {&g_27[1][0], &g_27[1][0]}, {&g_27[1][0], &g_27[1][0]}, {&g_27[1][0], (void *)0}, {&g_27[1][0], (void *)0}}};
        -:   27:  int i, j, k;
        4:   28:  for (i = 0; i < 3; i++) {
        6:   29:    for (j = 0; j < 1; j++)
        3:   30:      l_24[i][j] = (-10L);
        -:   31:  }
        1:   32:  l_3 = l_2;
       1*:   33:  for (l_3 = 0; (l_3 > 25); l_3 = safe_add_func_uint16_t_u_u(l_3, 1)) {
    #####:   34:    uint64_t *l_8 = &g_9;
    #####:   35:    int32_t *const l_28 = &l_3;
    #####:   36:    int32_t *l_30[1][5][4] = {{{&g_31, &g_31, &g_31, &g_31}, {&g_31, &g_31, &g_31, &g_31}, {&g_31, &g_31, &g_31, &g_31}, {&g_31, &g_31, &g_31, &g_31}, {&g_31, &g_31, &g_31, &g_31}}};
        -:   37:    int i, j, k;
    #####:   38:    g_31 |= (g_29[1][3] = ((safe_div_func_uint64_t_u_u((++(*l_8)), (l_24[1][0] ^= (func_12((g_15 == g_15), g_16) >= g_16)))) == ((+(l_8 != l_26[1][0][0])) <= ((g_20[4] != l_28) || g_23))));
        -:   39:  }
        1:   40:  return l_24[1][0];
        -:   41:}
        -:   42:
    #####:   43:static int64_t func_12(const int16_t p_13, int32_t p_14) {
    #####:   44:  volatile int32_t *volatile l_22 = &g_18;
    #####:   45:  l_22 = g_17;
    #####:   46:  return g_23;
        -:   47:}
        -:   48:
        1:   49:int main(int argc, char *argv[]) {
        -:   50:  int i, j;
        1:   51:  int print_hash_value = 0;
       1*:   52:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   53:    print_hash_value = 1;
        1:   54:  platform_main_begin();
        1:   55:  crc32_gentab();
        1:   56:  func_1();
        1:   57:  transparent_crc(g_9, "g_9", print_hash_value);
        1:   58:  transparent_crc(g_16, "g_16", print_hash_value);
        1:   59:  transparent_crc(g_18, "g_18", print_hash_value);
        1:   60:  transparent_crc(g_23, "g_23", print_hash_value);
        3:   61:  for (i = 0; i < 2; i++) {
        6:   62:    for (j = 0; j < 2; j++) {
        4:   63:      transparent_crc(g_27[i][j], "g_27[i][j]", print_hash_value);
        4:   64:      if (print_hash_value)
    #####:   65:        printf("index = [%d][%d]\n", i, j);
        -:   66:    }
        -:   67:  }
        4:   68:  for (i = 0; i < 3; i++) {
       15:   69:    for (j = 0; j < 4; j++) {
       12:   70:      transparent_crc(g_29[i][j], "g_29[i][j]", print_hash_value);
       12:   71:      if (print_hash_value)
    #####:   72:        printf("index = [%d][%d]\n", i, j);
        -:   73:    }
        -:   74:  }
        1:   75:  transparent_crc(g_31, "g_31", print_hash_value);
        1:   76:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   77:  return 0;
        -:   78:}

        -:    0:Source:87.c
        -:    0:Graph:87.gcno
        -:    0:Data:87.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_3[4][1] = {{0x6F5020F8L}, {0x6F5020F8L}, {0x6F5020F8L}, {0x6F5020F8L}};
        -:    7:static volatile int32_t g_4[1] = {0x32FFAB8CL};
        -:    8:static int32_t g_5 = 0x152C58FBL;
        -:    9:static int16_t g_49 = 6L;
        -:   10:static const int16_t g_54 = 0x06DEL;
        -:   11:static const int16_t *volatile g_53 = &g_54;
        -:   12:static int32_t g_56 = 0xFF82244FL;
        -:   13:static uint8_t g_58 = 0x5AL;
        -:   14:static uint8_t g_60[5][2][2] = {{{0xF8L, 0x3CL}, {0xF8L, 0xF8L}}, {{0x3CL, 0xF8L}, {0xF8L, 0x3CL}}, {{0xF8L, 0xF8L}, {0x3CL, 0xF8L}}, {{0xF8L, 0x3CL}, {0xF8L, 0xF8L}}, {{0x3CL, 0xF8L}, {0xF8L, 0x3CL}}};
        -:   15:static uint8_t g_62 = 0xE2L;
        -:   16:static uint8_t g_64[5][2][1] = {{{253UL}, {253UL}}, {{253UL}, {253UL}}, {{253UL}, {253UL}}, {{253UL}, {253UL}}, {{253UL}, {253UL}}};
        -:   17:static uint8_t g_68 = 253UL;
        -:   18:static uint16_t g_69 = 0xB03CL;
        -:   19:static int32_t g_71 = 0xCDCE3FF5L;
        -:   20:static int32_t g_72 = (-5L);
        -:   21:static int32_t g_74 = (-1L);
        -:   22:static int32_t *volatile g_110 = (void *)0;
        -:   23:static int32_t *volatile g_111 = &g_74;
        -:   24:
        -:   25:static int16_t func_1(void);
        -:   26:static uint32_t func_16(uint64_t p_17);
        -:   27:
        1:   28:static int16_t func_1(void) {
        -:   29:  uint16_t l_2[3];
        1:   30:  uint64_t l_18 = 0UL;
        1:   31:  uint8_t l_95 = 0UL;
        1:   32:  int32_t l_98 = 0x4EC4FEF2L;
        -:   33:  int32_t l_105[1];
        1:   34:  uint32_t l_106 = 1UL;
        -:   35:  int i;
        4:   36:  for (i = 0; i < 3; i++)
        3:   37:    l_2[i] = 65535UL;
        2:   38:  for (i = 0; i < 1; i++)
        1:   39:    l_105[i] = 1L;
       1*:   40:  for (g_5 = 2; (g_5 >= 0); g_5 -= 1) {
        1:   41:    int32_t *l_90 = &g_71;
        1:   42:    int64_t l_92 = 0x8C84420CA5725C8ELL;
        -:   43:    int16_t *l_96[1];
        -:   44:    int i;
        2:   45:    for (i = 0; i < 1; i++)
        1:   46:      l_96[i] = &g_49;
        1:   47:    if ((safe_div_func_int16_t_s_s(0xEE6DL, (safe_add_func_uint32_t_u_u((safe_mul_func_int8_t_s_s(2L, l_2[g_5])), (safe_rshift_func_uint32_t_u_s((safe_lshift_func_int64_t_s_u((func_16((l_18--)), (safe_mul_func_int32_t_s_s(((~l_18), (safe_rshift_func_int32_t_s_u((-1L), 3))), (((safe_add_func_uint32_t_u_u(4294967291UL, (safe_rshift_func_int8_t_s_s(((((((safe_add_func_uint16_t_u_u((safe_sub_func_int32_t_s_s((safe_div_func_int64_t_s_s(0x81FF7B51EF177DAELL, (g_68 | g_64[4][1][0]))), g_64[1][1][0])), 1L)), l_18), (*g_53)) | 0x44EEL) != (-2L)) | l_2[g_5]), 4)))) != 0xAC9AL), l_2[1])))), 59)), 17))))))) {
    #####:   48:      for (g_72 = 0; (g_72 <= 2); g_72 += 1) {
        -:   49:        int32_t **l_91[2];
        -:   50:        int i;
    #####:   51:        for (i = 0; i < 2; i++)
    #####:   52:          l_91[i] = &l_90;
    #####:   53:        l_90 = l_90;
        -:   54:      }
    #####:   55:      (*l_90) = g_60[2][1][0];
        -:   56:    } else {
        1:   57:      uint64_t l_97 = 0x66EC8B7CF170C459LL;
        1:   58:      if (l_92)
        1:   59:        break;
    #####:   60:      (*l_90) &= (((safe_rshift_func_int32_t_s_s(l_95, 10)) || 9UL), (l_97 = ((void *)0 != l_96[0])));
        -:   61:    }
    #####:   62:    for (g_62 = 0; (g_62 <= 2); g_62 += 1) {
    #####:   63:      if (l_98)
    #####:   64:        break;
        -:   65:    }
        -:   66:  }
        1:   67:  if ((safe_lshift_func_int16_t_s_u((g_69, (safe_mod_func_int8_t_s_s((g_71, (-3L)), 0xFFL))), 11))) {
    #####:   68:    int32_t *l_103 = &g_74;
    #####:   69:    int32_t *l_104[5][2] = {{&l_98, &l_98}, {&l_98, &l_98}, {&l_98, &l_98}, {&l_98, &l_98}, {&l_98, &l_98}};
        -:   70:    int i, j;
    #####:   71:    --l_106;
        -:   72:  } else {
        1:   73:    int32_t *l_109 = (void *)0;
        2:   74:    for (l_106 = 0; (l_106 <= 0); l_106 += 1) {
        2:   75:      for (g_71 = 0; (g_71 >= 0); g_71 -= 1) {
        -:   76:        int i, j;
        1:   77:        l_105[l_106] |= g_3[(g_71 + 1)][l_106];
        -:   78:      }
        -:   79:    }
        1:   80:    (*g_111) |= l_95;
        -:   81:  }
        1:   82:  return l_106;
        -:   83:}
        -:   84:
        1:   85:static uint32_t func_16(uint64_t p_17) {
        1:   86:  const int8_t l_33[3] = {(-1L), (-1L), (-1L)};
        1:   87:  int16_t *l_48 = &g_49;
        1:   88:  int32_t *l_55 = &g_56;
        1:   89:  uint8_t *l_57 = &g_58;
        1:   90:  uint8_t *l_59 = &g_60[2][1][0];
        1:   91:  uint8_t *l_61 = &g_62;
        1:   92:  uint8_t *l_63 = &g_64[0][1][0];
        1:   93:  uint32_t l_65 = 0x97E410F7L;
        1:   94:  int32_t l_66 = 0x08456A9EL;
        1:   95:  uint8_t *l_67 = &g_68;
        1:   96:  int32_t *l_70 = &g_71;
        1:   97:  int32_t *l_73[3][3][2] = {{{&g_74, &g_74}, {&g_74, &g_74}, {&g_74, &g_74}}, {{&g_74, &g_74}, {&g_74, &g_74}, {&g_74, &g_74}}, {{&g_74, &g_74}, {&g_74, &g_74}, {&g_74, &g_74}}};
        -:   98:  int i, j, k;
       1*:   99:    g_3[3][0] = (g_74 = (g_72 = ((safe_mod_func_uint16_t_u_u((safe_lshift_func_int64_t_s_s((((*l_70) = ((g_69 |= ((((((((((*l_67) ^= (safe_mul_func_uint64_t_u_u(((safe_sub_func_int32_t_s_s(((((1L < (safe_mul_func_uint32_t_u_u((((safe_sub_func_uint8_t_u_u(l_33[2], ((g_5 <= ((((safe_div_func_uint8_t_u_u((safe_rshift_func_uint16_t_u_u(p_17, 7)), ((*l_63) = (((*l_61) = (safe_sub_func_uint32_t_u_u((((safe_div_func_uint8_t_u_u((p_17 | (0x8F7CL == (((*l_59) = ((safe_mod_func_uint16_t_u_u((((safe_rshift_func_uint64_t_u_u((safe_sub_func_uint16_t_u_u(65535UL, ((*l_48) = p_17))), (((*l_57) = (((((*l_55) &= ((safe_rshift_func_uint32_t_u_u((safe_unary_minus_func_int32_t_s(((void*)0 != g_53))), g_5)) == l_33[1])) < p_17) | 4294967291UL) >= 4294967286UL)) > g_54))) && (-9L)) | 1UL), p_17)) , (*l_55))) == g_54))), p_17)) | g_54) != 0x3BL), g_5))) , 0xADL)))) & l_65) <= 3L) <= 0xFAF2L)) == 0xEC743572L))) | g_54) && (*l_55)), g_5))) != g_54) , 4294967295UL) , (-2L)), l_33[0])) & l_66), 0xF1BECDE87198B9DBLL))) , g_4[0]) || 0xF042L) ^ l_65) < p_17) , g_3[2][0]) , p_17) , 0x6BECL) == 0x0668L)) != g_5)) , p_17), 7)), 0xE024L)) <= 0x358D0DD081FB7192LL)));
        1:  100:    return g_60[2][1][0];
        -:  101:}
        -:  102:
        1:  103:int main(int argc, char *argv[]) {
        -:  104:  int i, j, k;
        1:  105:  int print_hash_value = 0;
       1*:  106:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  107:    print_hash_value = 1;
        1:  108:  platform_main_begin();
        1:  109:  crc32_gentab();
        1:  110:  func_1();
        5:  111:  for (i = 0; i < 4; i++) {
        8:  112:    for (j = 0; j < 1; j++) {
        4:  113:      transparent_crc(g_3[i][j], "g_3[i][j]", print_hash_value);
        4:  114:      if (print_hash_value)
    #####:  115:        printf("index = [%d][%d]\n", i, j);
        -:  116:    }
        -:  117:  }
        2:  118:  for (i = 0; i < 1; i++) {
        1:  119:    transparent_crc(g_4[i], "g_4[i]", print_hash_value);
        1:  120:    if (print_hash_value)
    #####:  121:      printf("index = [%d]\n", i);
        -:  122:  }
        1:  123:  transparent_crc(g_5, "g_5", print_hash_value);
        1:  124:  transparent_crc(g_49, "g_49", print_hash_value);
        1:  125:  transparent_crc(g_54, "g_54", print_hash_value);
        1:  126:  transparent_crc(g_56, "g_56", print_hash_value);
        1:  127:  transparent_crc(g_58, "g_58", print_hash_value);
        6:  128:  for (i = 0; i < 5; i++) {
       15:  129:    for (j = 0; j < 2; j++) {
       30:  130:      for (k = 0; k < 2; k++) {
       20:  131:        transparent_crc(g_60[i][j][k], "g_60[i][j][k]", print_hash_value);
       20:  132:        if (print_hash_value)
    #####:  133:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  134:      }
        -:  135:    }
        -:  136:  }
        1:  137:  transparent_crc(g_62, "g_62", print_hash_value);
        6:  138:  for (i = 0; i < 5; i++) {
       15:  139:    for (j = 0; j < 2; j++) {
       20:  140:      for (k = 0; k < 1; k++) {
       10:  141:        transparent_crc(g_64[i][j][k], "g_64[i][j][k]", print_hash_value);
       10:  142:        if (print_hash_value)
    #####:  143:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  144:      }
        -:  145:    }
        -:  146:  }
        1:  147:  transparent_crc(g_68, "g_68", print_hash_value);
        1:  148:  transparent_crc(g_69, "g_69", print_hash_value);
        1:  149:  transparent_crc(g_71, "g_71", print_hash_value);
        1:  150:  transparent_crc(g_72, "g_72", print_hash_value);
        1:  151:  transparent_crc(g_74, "g_74", print_hash_value);
        1:  152:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  153:  return 0;
        -:  154:}

        -:    0:Source:825.c
        -:    0:Graph:825.gcno
        -:    0:Data:825.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S3 {
        -:    7:  const unsigned f0 : 28;
        -:    8:  volatile unsigned f1 : 26;
        -:    9:};
        -:   10:
        -:   11:static int32_t g_3 = 0x5E3EDFA8L;
        -:   12:static int64_t g_4[1][2] = {{0L, 0L}};
        -:   13:static volatile int64_t g_5[5] = {0xE3CA3691F6F49C23LL, 0xE3CA3691F6F49C23LL, 0xE3CA3691F6F49C23LL, 0xE3CA3691F6F49C23LL, 0xE3CA3691F6F49C23LL};
        -:   14:static struct S3 g_9 = {7112, 4958};
        -:   15:
        -:   16:static struct S3 func_1(void);
        -:   17:
        1:   18:static struct S3 func_1(void) {
        1:   19:  int32_t *l_2[5][5][2] = {{{&g_3, &g_3}, {(void *)0, &g_3}, {&g_3, &g_3}, {(void *)0, &g_3}, {&g_3, &g_3}}, {{(void *)0, &g_3}, {&g_3, &g_3}, {(void *)0, &g_3}, {&g_3, &g_3}, {(void *)0, &g_3}}, {{&g_3, &g_3}, {(void *)0, &g_3}, {&g_3, &g_3}, {(void *)0, &g_3}, {&g_3, &g_3}}, {{(void *)0, &g_3}, {&g_3, &g_3}, {(void *)0, &g_3}, {&g_3, &g_3}, {(void *)0, &g_3}}, {{&g_3, &g_3}, {(void *)0, &g_3}, {&g_3, &g_3}, {(void *)0, &g_3}, {&g_3, &g_3}}};
        1:   20:  uint64_t l_6 = 18446744073709551615UL;
        -:   21:  int i, j, k;
        1:   22:  --l_6;
        1:   23:  return g_9;
        -:   24:}
        -:   25:
        1:   26:int main(int argc, char *argv[]) {
        -:   27:  int i, j;
        1:   28:  int print_hash_value = 0;
       1*:   29:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   30:    print_hash_value = 1;
        1:   31:  platform_main_begin();
        1:   32:  crc32_gentab();
        1:   33:  func_1();
        1:   34:  transparent_crc(g_3, "g_3", print_hash_value);
        2:   35:  for (i = 0; i < 1; i++) {
        3:   36:    for (j = 0; j < 2; j++) {
        2:   37:      transparent_crc(g_4[i][j], "g_4[i][j]", print_hash_value);
        2:   38:      if (print_hash_value)
    #####:   39:        printf("index = [%d][%d]\n", i, j);
        -:   40:    }
        -:   41:  }
        6:   42:  for (i = 0; i < 5; i++) {
        5:   43:    transparent_crc(g_5[i], "g_5[i]", print_hash_value);
        5:   44:    if (print_hash_value)
    #####:   45:      printf("index = [%d]\n", i);
        -:   46:  }
        1:   47:  transparent_crc(g_9.f0, "g_9.f0", print_hash_value);
        1:   48:  transparent_crc(g_9.f1, "g_9.f1", print_hash_value);
        1:   49:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   50:  return 0;
        -:   51:}

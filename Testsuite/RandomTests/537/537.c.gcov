        -:    0:Source:537.c
        -:    0:Graph:537.gcno
        -:    0:Data:537.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  unsigned f0 : 5;
        -:    8:};
        -:    9:
        -:   10:struct S1 {
        -:   11:  const volatile signed f0 : 14;
        -:   12:  signed f1 : 24;
        -:   13:  const unsigned f2 : 29;
        -:   14:  signed f3 : 21;
        -:   15:};
        -:   16:
        -:   17:static int32_t g_2[2][2][3] = {{{(-1L), (-1L), (-1L)}, {(-1L), (-1L), (-1L)}}, {{(-1L), (-1L), (-1L)}, {(-1L), (-1L), (-1L)}}};
        -:   18:static uint8_t g_22[2] = {254UL, 254UL};
        -:   19:static volatile uint8_t g_24[1] = {248UL};
        -:   20:static volatile uint8_t *g_23 = &g_24[0];
        -:   21:static uint8_t g_27 = 0xC3L;
        -:   22:static uint8_t *g_30[1] = {(void *)0};
        -:   23:static uint8_t **g_29 = &g_30[0];
        -:   24:static int8_t g_35 = 0x4DL;
        -:   25:static uint32_t g_37 = 1UL;
        -:   26:static int32_t g_39 = 7L;
        -:   27:static volatile int32_t g_52 = 0x04BAE914L;
        -:   28:static uint8_t g_53 = 0x8FL;
        -:   29:static struct S0 g_58 = {2};
        -:   30:static struct S0 *volatile g_57 = &g_58;
        -:   31:static struct S1 g_59 = {59, -3789, 6792, -105};
        -:   32:static struct S1 g_75 = {25, -2425, 13475, 778};
        -:   33:
        -:   34:static struct S1 func_1(void);
        -:   35:static const struct S0 func_5(int32_t p_6, int64_t p_7, int16_t p_8);
        -:   36:
        1:   37:static struct S1 func_1(void) {
        -:   38:  uint8_t *l_28[1];
        1:   39:  uint8_t **l_31 = &g_30[0];
        1:   40:  int32_t l_33 = 0xF992DB75L;
        1:   41:  int32_t l_36 = 0xF944DCD6L;
        1:   42:  uint32_t l_72 = 8UL;
        -:   43:  int i;
        2:   44:  for (i = 0; i < 1; i++)
        1:   45:    l_28[i] = &g_27;
       15:   46:  for (g_2[0][0][2] = 0; (g_2[0][0][2] != (-14)); g_2[0][0][2] = safe_sub_func_int8_t_s_s(g_2[0][0][2], 1)) {
       14:   47:    int8_t l_9 = 0L;
       14:   48:    uint8_t *l_21 = &g_22[1];
       14:   49:    uint8_t *l_26 = &g_27;
        -:   50:    uint8_t **l_25[1];
       14:   51:    uint8_t ***l_32 = &l_25[0];
       14:   52:    int8_t *l_34 = &g_35;
        -:   53:    int i;
       28:   54:    for (i = 0; i < 1; i++)
       14:   55:      l_25[i] = &l_26;
      14*:   56:    (*g_57) = func_5(l_9, (g_2[1][1][1], 1L), ((safe_add_func_uint8_t_u_u(((((((safe_unary_minus_func_uint16_t_u(((safe_rshift_func_int16_t_s_s((safe_div_func_int8_t_s_s(((*l_34) &= ((l_9 ^ (safe_add_func_uint32_t_u_u((((*l_21) = l_9) && (g_23 != (l_28[0] = (void *)0))), ((((*l_32) = (l_31 = g_29)) == ((l_33 = l_33), (void *)0)), l_9)))) & 1L)), l_36)), g_24[0])) || g_24[0]))), l_33) || 9UL), 65535UL) != l_36) > g_2[0][1][0]), 0x50L)) >= g_37));
        -:   57:  }
       1*:   58:  for (g_39 = 1; (g_39 >= 0); g_39 -= 1) {
        1:   59:    int32_t *l_60 = &l_33;
        1:   60:    int32_t *l_61 = &l_36;
        1:   61:    int32_t *l_62 = &g_2[0][0][2];
        1:   62:    int32_t *l_63 = (void *)0;
        1:   63:    int32_t *l_64 = &l_36;
        1:   64:    int32_t *l_65 = &l_33;
        1:   65:    int32_t *l_66 = &l_36;
        1:   66:    int32_t *l_67 = (void *)0;
        1:   67:    int32_t *l_68 = &l_36;
        1:   68:    int32_t *l_69 = &l_36;
        -:   69:    int32_t l_70[2];
        -:   70:    int32_t *l_71[2];
        -:   71:    int i;
        3:   72:    for (i = 0; i < 2; i++)
        2:   73:      l_70[i] = 0x576189EFL;
        3:   74:    for (i = 0; i < 2; i++)
        2:   75:      l_71[i] = &l_70[0];
        1:   76:    for (g_27 = 0; (g_27 <= 1); g_27 += 1) {
        1:   77:      return g_59;
        -:   78:    }
    #####:   79:    l_72--;
        -:   80:  }
    #####:   81:  return g_75;
        -:   82:}
        -:   83:
       14:   84:static const struct S0 func_5(int32_t p_6, int64_t p_7, int16_t p_8) {
       14:   85:  int32_t *l_38 = &g_39;
       14:   86:  int32_t *l_40 = (void *)0;
       14:   87:  int32_t *l_41 = &g_39;
       14:   88:  int32_t l_42 = 0xBB9CEC02L;
       14:   89:  int32_t *l_43 = &g_39;
       14:   90:  int32_t *l_44 = &l_42;
       14:   91:  int32_t *l_45 = (void *)0;
       14:   92:  int32_t *l_46 = &g_39;
       14:   93:  int32_t *l_47 = &g_39;
       14:   94:  int32_t *l_48 = &g_39;
       14:   95:  int32_t *l_49 = &g_39;
       14:   96:  int32_t l_50 = (-9L);
        -:   97:  int32_t *l_51[2];
       14:   98:  const struct S0 l_56 = {2};
        -:   99:  int i;
       42:  100:  for (i = 0; i < 2; i++)
       28:  101:    l_51[i] = &g_39;
       14:  102:  g_53--;
       14:  103:  return l_56;
        -:  104:}
        -:  105:
        1:  106:int main(int argc, char *argv[]) {
        -:  107:  int i, j, k;
        1:  108:  int print_hash_value = 0;
       1*:  109:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  110:    print_hash_value = 1;
        1:  111:  platform_main_begin();
        1:  112:  crc32_gentab();
        1:  113:  func_1();
        3:  114:  for (i = 0; i < 2; i++) {
        6:  115:    for (j = 0; j < 2; j++) {
       16:  116:      for (k = 0; k < 3; k++) {
       12:  117:        transparent_crc(g_2[i][j][k], "g_2[i][j][k]", print_hash_value);
       12:  118:        if (print_hash_value)
    #####:  119:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  120:      }
        -:  121:    }
        -:  122:  }
        3:  123:  for (i = 0; i < 2; i++) {
        2:  124:    transparent_crc(g_22[i], "g_22[i]", print_hash_value);
        2:  125:    if (print_hash_value)
    #####:  126:      printf("index = [%d]\n", i);
        -:  127:  }
        2:  128:  for (i = 0; i < 1; i++) {
        1:  129:    transparent_crc(g_24[i], "g_24[i]", print_hash_value);
        1:  130:    if (print_hash_value)
    #####:  131:      printf("index = [%d]\n", i);
        -:  132:  }
        1:  133:  transparent_crc(g_27, "g_27", print_hash_value);
        1:  134:  transparent_crc(g_35, "g_35", print_hash_value);
        1:  135:  transparent_crc(g_37, "g_37", print_hash_value);
        1:  136:  transparent_crc(g_39, "g_39", print_hash_value);
        1:  137:  transparent_crc(g_52, "g_52", print_hash_value);
        1:  138:  transparent_crc(g_53, "g_53", print_hash_value);
        1:  139:  transparent_crc(g_58.f0, "g_58.f0", print_hash_value);
        1:  140:  transparent_crc(g_59.f0, "g_59.f0", print_hash_value);
        1:  141:  transparent_crc(g_59.f1, "g_59.f1", print_hash_value);
        1:  142:  transparent_crc(g_59.f2, "g_59.f2", print_hash_value);
        1:  143:  transparent_crc(g_59.f3, "g_59.f3", print_hash_value);
        1:  144:  transparent_crc(g_75.f0, "g_75.f0", print_hash_value);
        1:  145:  transparent_crc(g_75.f1, "g_75.f1", print_hash_value);
        1:  146:  transparent_crc(g_75.f2, "g_75.f2", print_hash_value);
        1:  147:  transparent_crc(g_75.f3, "g_75.f3", print_hash_value);
        1:  148:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  149:  return 0;
        -:  150:}

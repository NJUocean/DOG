        -:    0:Source:671.c
        -:    0:Graph:671.gcno
        -:    0:Data:671.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_3 = 0x8070ADE2L;
        -:    7:static uint8_t g_23[4] = {0UL, 0UL, 0UL, 0UL};
        -:    8:static int32_t g_30 = 0L;
        -:    9:static int16_t g_53 = 0x2E2EL;
        -:   10:static int32_t g_56 = 5L;
        -:   11:static int32_t *g_64 = &g_30;
        -:   12:static int32_t **g_63[4][4] = {{&g_64, &g_64, &g_64, &g_64}, {&g_64, &g_64, &g_64, &g_64}, {&g_64, &g_64, &g_64, &g_64}, {&g_64, &g_64, &g_64, &g_64}};
        -:   13:static int64_t g_67 = 0x1120EAC2F6E5819CLL;
        -:   14:static uint8_t g_94 = 248UL;
        -:   15:static int32_t *volatile g_103 = &g_56;
        -:   16:
        -:   17:static uint32_t func_1(void);
        -:   18:static uint32_t func_6(uint64_t p_7, int32_t p_8, const uint32_t p_9);
        -:   19:
        1:   20:static uint32_t func_1(void) {
        1:   21:  int32_t l_2 = 0xE5596960L;
        1:   22:  uint8_t l_10 = 0x4CL;
        1:   23:  int32_t l_24[5][5][5] = {{{(-1L), 4L, 0x416DA84BL, (-1L), 0x79EBEF9FL}, {(-1L), 0xB4D2C298L, (-1L), 0L, 0x60813C27L}, {0xC04840C2L, 0x8BBD1883L, (-7L), 0x5BB5FB49L, 0x6F739807L}, {(-6L), 0x4126315BL, 0x4126315BL, (-6L), 0L}, {0xC53A21B7L, (-1L), 0x7BF748BBL, 0L, 0L}},
        -:   24:                           {{0x79EBEF9FL, 0L, 0xA1E2510AL, 0xC8FBFC75L, (-7L)}, {0xC638299FL, 0x7BF748BBL, (-5L), 0x00CE3D97L, 0x7BF748BBL}, {0L, 0xE320525CL, 0x9EF8169CL, (-8L), 0x4126315BL}, {0x477A14A9L, 4L, 0xDA6C2E3AL, 0x2DA3BB1DL, (-7L)}, {0xE320525CL, 0x2DA3BB1DL, 0xB6454879L, 0x79EBEF9FL, (-1L)}},
        -:   25:                           {{0L, 0x5BB5FB49L, 0x5C1B09C8L, 0x7E2192FEL, 0x416DA84BL}, {1L, 0x5BB5FB49L, 0xC8FBFC75L, (-2L), 4L}, {0xC638299FL, 0x2DA3BB1DL, (-1L), 0xC04840C2L, 1L}, {0x00CE3D97L, 4L, 0xEB6652F0L, 4L, 0x00CE3D97L}, {0x7BF748BBL, 0xE320525CL, 0x477A14A9L, 0L, 0xC04840C2L}},
        -:   26:                           {{(-8L), 0x7BF748BBL, 0xB6454879L, 0xC04840C2L, 0xA1E2510AL}, {0xDBEC151DL, 0L, 1L, 0xE320525CL, 0xC04840C2L}, {0xDA6C2E3AL, 0xC04840C2L, (-6L), 0xB6454879L, 0x00CE3D97L}, {0xC04840C2L, 0xD5B4499CL, (-5L), 0x79EBEF9FL, 1L}, {0xDBEC151DL, 0xC638299FL, 0L, (-8L), 4L}},
        -:   27:                           {{0xCD908FBDL, (-7L), 0xD5B4499CL, 0xCD908FBDL, 0x416DA84BL}, {0x4126315BL, 0xDA6C2E3AL, 0xD5B4499CL, 0x00CE3D97L, (-1L)}, {0x00CE3D97L, 0L, 0L, 0xDBEC151DL, (-7L)}, {0xDBB7A2E2L, 0x4126315BL, (-5L), (-5L), 0x4126315BL}, {0L, (-2L), (-6L), (-8L), 0x7BF748BBL}}};
        1:   28:  int16_t *l_91 = &g_53;
        1:   29:  const int32_t *l_96 = &g_30;
        1:   30:  const int32_t **l_95 = &l_96;
        -:   31:  int i, j, k;
        1:   32:  if ((l_2, (g_3, (safe_mod_func_uint32_t_u_u(func_6(l_2, l_10, (((safe_div_func_int8_t_s_s((g_3, ((safe_rshift_func_uint8_t_u_s(l_2, 0)) > ((safe_mul_func_uint8_t_u_u(g_3, ((((l_2 | (safe_mul_func_int8_t_s_s(((((safe_lshift_func_uint64_t_u_s((safe_lshift_func_uint64_t_u_u(((g_23[3] && 0xBB4FL) < 0x93L), 43)), 8)) < g_23[3]) & g_23[3]), g_23[3]), 0x4DL))), l_10), g_23[3]) >= l_24[0][4][4]))) > 0UL))), 0x14L)), g_23[3]) ^ (-1L))), l_2))))) {
    #####:   33:    int32_t l_57 = 0L;
    #####:   34:    return l_57;
        -:   35:  } else {
        1:   36:    const uint16_t l_68 = 65533UL;
        1:   37:    int32_t *l_101 = (void *)0;
        1:   38:    uint16_t l_102[2][3] = {{0UL, 0UL, 0UL}, {1UL, 1UL, 1UL}};
        -:   39:    int i, j;
        2:   40:    for (g_53 = 0; (g_53 != 1); g_53++) {
        1:   41:      uint8_t l_90 = 7UL;
        1:   42:      int16_t *l_92 = &g_53;
        -:   43:      int32_t l_97[4][1];
        -:   44:      int i, j;
        5:   45:      for (i = 0; i < 4; i++) {
        8:   46:        for (j = 0; j < 1; j++)
        4:   47:          l_97[i][j] = (-3L);
        -:   48:      }
        1:   49:      g_56 = 0xA6ECCD28L;
        5:   50:      for (g_56 = 0; (g_56 <= 3); g_56 += 1) {
        4:   51:        int32_t ***l_65 = &g_63[1][3];
        4:   52:        int64_t *l_66 = &g_67;
        4:   53:        uint8_t *l_93 = &g_94;
        -:   54:        int i;
        4:   55:        l_97[3][0] |= (safe_add_func_uint8_t_u_u((!2L), (((*l_65) = g_63[0][3]) == ((((((*l_66) = (-4L)) >= (l_68 > (safe_add_func_int16_t_s_s((safe_sub_func_uint8_t_u_u((+g_23[3]), (l_68, ((*l_93) ^= (((safe_lshift_func_uint64_t_u_s(g_56, 51)) > (((((safe_lshift_func_int16_t_s_u(((safe_mul_func_int16_t_s_s((safe_div_func_int64_t_s_s(g_53, (safe_add_func_uint16_t_u_u((safe_div_func_int64_t_s_s((((((safe_sub_func_uint16_t_u_u(((safe_mul_func_int16_t_s_s(l_90, g_56)) | g_3), l_90)) || 1L), l_10), l_91) == l_92), g_53)), l_90)))), g_56)) == l_68), g_53)), l_68) < (-1L)) <= g_56) ^ 1UL)), l_68))))), l_24[0][4][4])))) != (-1L)), g_67), l_95))));
        -:   56:      }
        -:   57:    }
       1*:   58:    for (g_30 = 0; (g_30 < (-13)); --g_30) {
    #####:   59:      for (g_53 = 0; (g_53 <= 4); g_53 += 1) {
    #####:   60:        int32_t *l_100 = &g_56;
    #####:   61:        l_101 = l_100;
    #####:   62:        if (l_102[1][0])
    #####:   63:          continue;
        -:   64:      }
        -:   65:    }
        -:   66:  }
        1:   67:  (*g_103) &= ((*g_64) = ((-1L) == 1UL));
        1:   68:  return g_23[2];
        -:   69:}
        -:   70:
        1:   71:static uint32_t func_6(uint64_t p_7, int32_t p_8, const uint32_t p_9) {
        1:   72:  uint64_t l_26 = 0x14EFC71010F1939ELL;
        1:   73:  uint8_t *l_27 = &g_23[2];
        1:   74:  int32_t l_28 = 0xC4EA3C91L;
        1:   75:  int32_t *l_29 = &g_30;
        1:   76:  (*l_29) = (!(l_26 <= (l_28 = ((*l_27) = 0x88L))));
       1*:   77:  if (((0x24FFL ^ ((p_8, ((*l_29) & (*l_29))) != (safe_rshift_func_int64_t_s_s((((p_8 && (safe_mod_func_int16_t_s_s((&l_28 != &l_28), ((&g_23[3] == (void *)0) & (*l_29))))) ^ p_8) ^ (*l_29)), (*l_29))))) < 0x00286F3AL)) {
        1:   78:    uint8_t *l_43 = &g_23[3];
        1:   79:    int32_t l_50 = 0x2D4DC450L;
        1:   80:    int32_t l_51 = 1L;
       1*:   81:    for (l_28 = (-20); (l_28 == 4); l_28 = safe_add_func_uint64_t_u_u(l_28, 1)) {
    #####:   82:      const int32_t *l_49 = (void *)0;
    #####:   83:      const int32_t **l_48 = &l_49;
    #####:   84:      int16_t *l_52 = &g_53;
    #####:   85:      int32_t *l_54 = (void *)0;
    #####:   86:      int32_t *l_55 = &g_56;
    #####:   87:      (*l_55) ^= ((safe_mod_func_int64_t_s_s((safe_add_func_int32_t_s_s((safe_sub_func_uint16_t_u_u((((*l_52) = ((g_30, ((((((void *)0 != l_43), p_8) != ((safe_sub_func_uint8_t_u_u((safe_div_func_uint32_t_u_u((l_50 = (((((*l_48) = &l_28) != &g_30), p_8) ^ (&p_8 == (void *)0))), l_51)), 0x12L)), 0x9738BBD8L)) | p_8) && g_3)) < 0x83987EDF5A291505LL)), 2UL), p_9)), p_9)), g_30)), (*l_49));
    #####:   88:      (*l_48) = &p_8;
        -:   89:    }
        -:   90:  } else {
        -:   91:    for (p_7 = 0; p_7 < 4; p_7 += 1) {
        -:   92:      g_23[p_7] = 0UL;
        -:   93:    }
        -:   94:  }
        1:   95:  return g_23[3];
        -:   96:}
        -:   97:
        1:   98:int main(int argc, char *argv[]) {
        -:   99:  int i, j;
        1:  100:  int print_hash_value = 0;
       1*:  101:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  102:    print_hash_value = 1;
        1:  103:  platform_main_begin();
        1:  104:  crc32_gentab();
        1:  105:  func_1();
        1:  106:  transparent_crc(g_3, "g_3", print_hash_value);
        5:  107:  for (i = 0; i < 4; i++) {
        4:  108:    transparent_crc(g_23[i], "g_23[i]", print_hash_value);
        4:  109:    if (print_hash_value)
    #####:  110:      printf("index = [%d]\n", i);
        -:  111:  }
        1:  112:  transparent_crc(g_30, "g_30", print_hash_value);
        1:  113:  transparent_crc(g_53, "g_53", print_hash_value);
        1:  114:  transparent_crc(g_56, "g_56", print_hash_value);
        1:  115:  transparent_crc(g_67, "g_67", print_hash_value);
        1:  116:  transparent_crc(g_94, "g_94", print_hash_value);
        1:  117:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  118:  return 0;
        -:  119:}

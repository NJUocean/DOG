        -:    0:Source:980.c
        -:    0:Graph:980.gcno
        -:    0:Data:980.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int8_t g_10[5] = {0x62L, 0x62L, 0x62L, 0x62L, 0x62L};
        -:    7:static int16_t g_28 = 0x4C57L;
        -:    8:static int64_t g_30[4][2][5] = {{{(-9L), 6L, 0x97440271DBCABEBFLL, 0x97440271DBCABEBFLL, 6L}, {9L, 0xB8CFF26AF9031EA0LL, 1L, 1L, 0xB8CFF26AF9031EA0LL}}, {{(-9L), 6L, 0x97440271DBCABEBFLL, 0x97440271DBCABEBFLL, 6L}, {9L, 0xB8CFF26AF9031EA0LL, 1L, 1L, 0xB8CFF26AF9031EA0LL}}, {{(-9L), 6L, 0x97440271DBCABEBFLL, 0x97440271DBCABEBFLL, 6L}, {9L, 0xB8CFF26AF9031EA0LL, 1L, 1L, 0xB8CFF26AF9031EA0LL}}, {{(-9L), 6L, 0x97440271DBCABEBFLL, 0x97440271DBCABEBFLL, 6L}, {9L, 0xB8CFF26AF9031EA0LL, 1L, 1L, 0xB8CFF26AF9031EA0LL}}};
        -:    9:static const uint16_t g_36 = 0x3B83L;
        -:   10:static const uint16_t *volatile g_35 = &g_36;
        -:   11:static uint8_t g_39 = 0UL;
        -:   12:static int8_t *const g_40 = (void *)0;
        -:   13:static uint32_t g_41 = 0x50187E52L;
        -:   14:static int16_t g_55 = 0x8C68L;
        -:   15:static uint64_t g_58[1] = {6UL};
        -:   16:static uint32_t g_64 = 4294967295UL;
        -:   17:static int8_t g_66 = (-1L);
        -:   18:static int8_t *g_65 = &g_66;
        -:   19:static int16_t g_68 = (-9L);
        -:   20:static uint16_t g_81 = 1UL;
        -:   21:static uint64_t g_83 = 0xE77DF0EBE340CFCELL;
        -:   22:static uint32_t g_85 = 18446744073709551615UL;
        -:   23:static int32_t g_89[1] = {0x9CB9CEB5L};
        -:   24:static int16_t *g_93 = (void *)0;
        -:   25:static int16_t *g_94 = &g_55;
        -:   26:
        -:   27:static uint64_t func_1(void);
        -:   28:static int8_t *func_13(uint16_t p_14, int8_t *const p_15, const uint8_t p_16, int8_t *const p_17, uint8_t p_18);
        -:   29:
        1:   30:static uint64_t func_1(void) {
        1:   31:  uint16_t l_8 = 0x65ABL;
        -:   32:  int8_t *l_9[1];
        1:   33:  uint16_t *l_11 = &l_8;
        1:   34:  int32_t l_12 = (-9L);
        1:   35:  int32_t l_19 = 0x0F4F2301L;
        1:   36:  int64_t *l_29[4][3][5] = {{{(void *)0, &g_30[2][0][2], &g_30[2][0][2], (void *)0, &g_30[2][0][2]}, {&g_30[3][1][3], (void *)0, &g_30[2][1][3], &g_30[1][1][3], (void *)0}, {&g_30[3][1][3], &g_30[2][1][3], &g_30[2][0][2], &g_30[2][1][3], &g_30[3][1][3]}},
        -:   37:                            {{(void *)0, &g_30[2][0][2], (void *)0, &g_30[1][1][3], &g_30[2][0][2]}, {(void *)0, &g_30[2][0][2], (void *)0, (void *)0, &g_30[2][0][2]}, {&g_30[2][0][2], &g_30[2][1][3], &g_30[3][1][3], &g_30[2][0][2], &g_30[2][0][2]}},
        -:   38:                            {{&g_30[2][1][3], (void *)0, &g_30[3][1][3], &g_30[2][0][2], &g_30[3][1][3]}, {&g_30[2][0][2], &g_30[2][0][2], (void *)0, &g_30[2][0][2], (void *)0}, {&g_30[2][1][3], (void *)0, (void *)0, &g_30[2][0][2], &g_30[2][0][2]}},
        -:   39:                            {{&g_30[2][0][2], &g_30[1][0][0], &g_30[2][0][2], &g_30[2][0][2], &g_30[1][1][3]}, {(void *)0, (void *)0, &g_30[2][1][3], &g_30[2][0][2], &g_30[1][1][3]}, {(void *)0, &g_30[2][0][2], &g_30[2][0][2], (void *)0, &g_30[2][0][2]}}};
        1:   40:  uint16_t l_37 = 0x7649L;
        1:   41:  uint8_t *l_38 = &g_39;
        1:   42:  int32_t l_67 = 0x6B13122EL;
        1:   43:  int16_t l_87 = 0xAF44L;
        -:   44:  int i, j, k;
        2:   45:  for (i = 0; i < 1; i++)
        1:   46:    l_9[i] = &g_10[1];
       1*:   47:  if ((safe_div_func_uint32_t_u_u((safe_lshift_func_uint16_t_u_u(((*l_11) = (safe_lshift_func_int8_t_s_s((g_10[1] = l_8), 6))), (l_12 >= (g_68 = (l_67 = (((l_12, func_13((((l_19 |= l_12) || (((safe_lshift_func_uint64_t_u_u(((safe_rshift_func_uint8_t_u_s(0xDDL, ((0UL <= (safe_sub_func_uint8_t_u_u((((*l_38) = (safe_lshift_func_int64_t_s_s((l_19 &= g_28), ((safe_mul_func_uint8_t_u_u(0xB6L, ((safe_mod_func_uint64_t_u_u((g_35 == l_11), l_37)), g_28))) && 3L)))) || g_30[3][1][1]), l_37))), g_39))), l_12), 48)) < g_28) >= l_37)), 0x5951L), g_40, l_12, l_9[0], g_41)) == l_38) <= 0xCA37L)))))), 2UL))) {
        1:   48:    uint64_t *l_71 = &g_58[0];
        1:   49:    int8_t *const l_74 = &g_10[1];
        -:   50:    int8_t *l_75[1];
        1:   51:    int32_t l_80 = 0x93330862L;
        1:   52:    uint64_t *l_82[2][4][3] = {{{&g_83, &g_83, &g_83}, {(void *)0, (void *)0, (void *)0}, {&g_83, &g_83, &g_83}, {(void *)0, (void *)0, (void *)0}}, {{&g_83, &g_83, &g_83}, {(void *)0, (void *)0, (void *)0}, {&g_83, &g_83, &g_83}, {(void *)0, (void *)0, (void *)0}}};
        1:   53:    uint32_t *l_84[2][4][5] = {{{&g_85, &g_85, &g_85, &g_85, &g_85}, {&g_85, &g_85, &g_85, &g_85, &g_85}, {&g_85, &g_85, &g_85, &g_85, &g_85}, {&g_85, &g_85, &g_85, &g_85, &g_85}}, {{&g_85, &g_85, &g_85, &g_85, &g_85}, {&g_85, &g_85, &g_85, &g_85, &g_85}, {&g_85, &g_85, &g_85, &g_85, &g_85}, {&g_85, &g_85, &g_85, &g_85, &g_85}}};
        1:   54:    int32_t l_86 = (-6L);
        1:   55:    int32_t *l_88 = &g_89[0];
        -:   56:    int i, j, k;
        2:   57:    for (i = 0; i < 1; i++)
        1:   58:      l_75[i] = &g_10[1];
       1*:   59:    (*l_88) &= (((((((((l_71 == &g_58[0]) == (l_12 == ((((((l_86 |= (((g_83 ^= (safe_add_func_uint16_t_u_u((*g_35), ((g_65 = func_13(g_68, (l_75[0] = l_74), g_39, &g_10[1], ((safe_sub_func_int8_t_s_s((safe_mul_func_uint8_t_u_u((l_80 ^= g_68), 0x24L)), l_19)), g_81))) != l_9[0])))) < l_8) <= g_36)), l_67) < g_41) >= (-1L)), l_9[0]) != (void *)0))) < 0x293870B5DC3D349FLL) <= l_87) ^ g_10[2]) >= g_68) | l_12) && 0x54L) >= g_81);
        -:   60:  } else {
    #####:   61:    int16_t **l_90 = (void *)0;
    #####:   62:    int16_t *l_92 = &g_68;
        -:   63:    int16_t **l_91[1];
    #####:   64:    int32_t l_99 = 0xF6C633F4L;
        -:   65:    int i;
    #####:   66:    for (i = 0; i < 1; i++)
    #####:   67:      l_91[i] = &l_92;
    #####:   68:    if (((g_94 = (g_93 = &g_28)) == &g_55)) {
        -:   69:      int32_t l_106[1];
    #####:   70:      int64_t *l_107 = &g_30[2][1][2];
        -:   71:      int i;
    #####:   72:      for (i = 0; i < 1; i++)
    #####:   73:        l_106[i] = 0L;
    #####:   74:      for (l_12 = 18; (l_12 == 18); ++l_12) {
    #####:   75:        uint32_t l_108 = 0x2A12E219L;
    #####:   76:        int32_t *l_114 = &l_99;
    #####:   77:        (*l_114) = (safe_lshift_func_uint8_t_u_u(l_99, (safe_add_func_uint8_t_u_u((safe_mod_func_int64_t_s_s((l_108 = (l_19 |= (safe_sub_func_int64_t_s_s(l_106[0], (l_107 == &g_30[2][0][2]))))), (safe_unary_minus_func_int32_t_s(g_30[3][1][4])))), (safe_sub_func_int16_t_s_s((safe_lshift_func_uint64_t_u_u(g_28, 63)), l_106[0]))))));
        -:   78:      }
        -:   79:    } else {
    #####:   80:      return g_68;
        -:   81:    }
        -:   82:  }
        1:   83:  return g_10[1];
        -:   84:}
        -:   85:
        2:   86:static int8_t *func_13(uint16_t p_14, int8_t *const p_15, const uint8_t p_16, int8_t *const p_17, uint8_t p_18) {
        2:   87:  uint8_t l_44 = 0x88L;
        2:   88:  int16_t l_45[4] = {(-1L), (-1L), (-1L), (-1L)};
        2:   89:  uint8_t **l_46 = (void *)0;
        2:   90:  uint8_t **l_47 = (void *)0;
        2:   91:  uint8_t *l_48 = &g_39;
        2:   92:  int16_t *l_53 = (void *)0;
        2:   93:  int16_t *l_54 = &g_55;
        2:   94:  int32_t l_56 = (-10L);
        -:   95:  uint64_t *l_57[5];
        2:   96:  int32_t l_59 = (-1L);
        2:   97:  int64_t *l_62 = &g_30[2][0][2];
        2:   98:  int32_t l_63 = 0x58B047C1L;
        -:   99:  int i;
       12:  100:  for (i = 0; i < 5; i++)
       10:  101:    l_57[i] = &g_58[0];
       2*:  102:  g_64 = ((((safe_rshift_func_uint64_t_u_u(((l_44, g_28) < l_45[2]), 46)) != ((((2UL == (l_44, (l_59 = (((l_48 = (void *)0) != &p_18) || (safe_rshift_func_int64_t_s_u(((*l_62) = (safe_sub_func_int16_t_s_s(((*l_54) = 1L), ((g_58[0]--), l_56)))), l_45[0])))))) && l_63), l_59) < 0xEC7EL)) & l_45[2]) || g_30[2][0][2]);
        2:  103:  return g_65;
        -:  104:}
        -:  105:
        1:  106:int main(int argc, char *argv[]) {
        -:  107:  int i, j, k;
        1:  108:  int print_hash_value = 0;
       1*:  109:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  110:    print_hash_value = 1;
        1:  111:  platform_main_begin();
        1:  112:  crc32_gentab();
        1:  113:  func_1();
        6:  114:  for (i = 0; i < 5; i++) {
        5:  115:    transparent_crc(g_10[i], "g_10[i]", print_hash_value);
        5:  116:    if (print_hash_value)
    #####:  117:      printf("index = [%d]\n", i);
        -:  118:  }
        1:  119:  transparent_crc(g_28, "g_28", print_hash_value);
        5:  120:  for (i = 0; i < 4; i++) {
       12:  121:    for (j = 0; j < 2; j++) {
       48:  122:      for (k = 0; k < 5; k++) {
       40:  123:        transparent_crc(g_30[i][j][k], "g_30[i][j][k]", print_hash_value);
       40:  124:        if (print_hash_value)
    #####:  125:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  126:      }
        -:  127:    }
        -:  128:  }
        1:  129:  transparent_crc(g_36, "g_36", print_hash_value);
        1:  130:  transparent_crc(g_39, "g_39", print_hash_value);
        1:  131:  transparent_crc(g_41, "g_41", print_hash_value);
        1:  132:  transparent_crc(g_55, "g_55", print_hash_value);
        2:  133:  for (i = 0; i < 1; i++) {
        1:  134:    transparent_crc(g_58[i], "g_58[i]", print_hash_value);
        1:  135:    if (print_hash_value)
    #####:  136:      printf("index = [%d]\n", i);
        -:  137:  }
        1:  138:  transparent_crc(g_64, "g_64", print_hash_value);
        1:  139:  transparent_crc(g_66, "g_66", print_hash_value);
        1:  140:  transparent_crc(g_68, "g_68", print_hash_value);
        1:  141:  transparent_crc(g_81, "g_81", print_hash_value);
        1:  142:  transparent_crc(g_83, "g_83", print_hash_value);
        1:  143:  transparent_crc(g_85, "g_85", print_hash_value);
        2:  144:  for (i = 0; i < 1; i++) {
        1:  145:    transparent_crc(g_89[i], "g_89[i]", print_hash_value);
        1:  146:    if (print_hash_value)
    #####:  147:      printf("index = [%d]\n", i);
        -:  148:  }
        1:  149:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  150:  return 0;
        -:  151:}

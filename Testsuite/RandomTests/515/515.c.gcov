        -:    0:Source:515.c
        -:    0:Graph:515.gcno
        -:    0:Data:515.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U0 {
        -:    7:  const int32_t f0;
        -:    8:  volatile uint64_t f1;
        -:    9:  volatile int32_t f2;
        -:   10:  int8_t f3;
        -:   11:  int64_t f4;
        -:   12:};
        -:   13:
        -:   14:union U1 {
        -:   15:  int64_t f0;
        -:   16:};
        -:   17:
        -:   18:static uint64_t g_5[2] = {0xBD697E780CA9F8D1LL, 0xBD697E780CA9F8D1LL};
        -:   19:static volatile uint64_t g_12[4][1][4] = {{{0x8ACC4B7C7008B15ELL, 18446744073709551612UL, 18446744073709551612UL, 0x8ACC4B7C7008B15ELL}}, {{18446744073709551612UL, 0x8ACC4B7C7008B15ELL, 18446744073709551612UL, 18446744073709551612UL}}, {{0x8ACC4B7C7008B15ELL, 0x8ACC4B7C7008B15ELL, 1UL, 0x8ACC4B7C7008B15ELL}}, {{0x8ACC4B7C7008B15ELL, 18446744073709551612UL, 18446744073709551612UL, 0x8ACC4B7C7008B15ELL}}};
        -:   20:static volatile union U1 g_17 = {0x2044653FFD03B15ALL};
        -:   21:static union U0 g_18 = {0xE11914CCL};
        -:   22:static uint16_t g_38 = 1UL;
        -:   23:static int32_t g_42 = (-1L);
        -:   24:static int32_t *g_41 = &g_42;
        -:   25:static int32_t **volatile g_40 = &g_41;
        -:   26:static int32_t g_44 = 7L;
        -:   27:static int32_t **volatile g_46 = &g_41;
        -:   28:static uint32_t g_58 = 5UL;
        -:   29:static volatile uint64_t g_68[2][3][4] = {{{18446744073709551611UL, 18446744073709551611UL, 18446744073709551615UL, 18446744073709551615UL}, {18446744073709551611UL, 18446744073709551611UL, 18446744073709551615UL, 18446744073709551615UL}, {18446744073709551611UL, 18446744073709551611UL, 18446744073709551615UL, 18446744073709551615UL}}, {{18446744073709551611UL, 18446744073709551611UL, 18446744073709551615UL, 18446744073709551615UL}, {18446744073709551611UL, 18446744073709551611UL, 18446744073709551615UL, 18446744073709551615UL}, {18446744073709551611UL, 18446744073709551611UL, 18446744073709551615UL, 18446744073709551615UL}}};
        -:   30:
        -:   31:static union U1 func_1(void);
        -:   32:static int16_t func_6(uint32_t p_7, int64_t p_8, const uint32_t p_9, int32_t p_10, int32_t p_11);
        -:   33:
        1:   34:static union U1 func_1(void) {
        1:   35:  int64_t l_4 = 0x3E86F8C7B5C6EFF3LL;
        1:   36:  int32_t l_19 = 0xC51978E6L;
        1:   37:  uint8_t l_36 = 0UL;
        1:   38:  uint16_t *l_37 = &g_38;
        1:   39:  int32_t *l_43 = &g_44;
        1:   40:  uint32_t l_59 = 0x192EEDB0L;
        1:   41:  int32_t *l_65 = &l_19;
        1:   42:  int32_t *l_66 = &l_19;
        -:   43:  int32_t *l_67[1];
        -:   44:  int i;
        2:   45:  for (i = 0; i < 1; i++)
        1:   46:    l_67[i] = &g_44;
       1*:   47:  if (((*l_43) ^= ((safe_rshift_func_int16_t_s_s((g_5[0] = l_4), func_6((g_12[0][0][1] || ((*l_37) = (safe_mod_func_int32_t_s_s((safe_mod_func_uint64_t_u_u(((g_17, g_18), 0UL), (g_18.f0 | (l_19 = l_4)))), (safe_mul_func_int8_t_s_s((safe_sub_func_int64_t_s_s(((safe_add_func_uint16_t_u_u(((safe_add_func_int64_t_s_s(((safe_mul_func_int32_t_s_s((safe_div_func_int64_t_s_s((safe_mul_func_int8_t_s_s((l_4 || (safe_sub_func_uint8_t_u_u(255UL, 0xF8L))), g_18.f0)), g_18.f0)), 2L)) >= l_4), g_18.f0)) > 0xDFDAF0B56FE18BD2LL), l_4)), 1L), g_18.f0)), l_36)))))), g_18.f0, g_18.f0, g_18.f0, g_18.f0))), 3L))) {
        1:   48:    int32_t **l_45 = &l_43;
        1:   49:    int32_t *l_47 = &g_42;
        1:   50:    (*g_46) = ((*l_45) = (*g_40));
        1:   51:    if (((*l_47) = (g_38 < (0UL | g_5[1])))) {
        1:   52:      (*l_47) &= (-1L);
        -:   53:    } else {
    #####:   54:      for (l_36 = 11; (l_36 != 23); l_36 = safe_add_func_int8_t_s_s(l_36, 6)) {
    #####:   55:        (*l_45) = &l_19;
        -:   56:      }
        -:   57:    }
        -:   58:  } else {
    #####:   59:    const int32_t *l_50 = (void *)0;
    #####:   60:    int32_t *l_54 = &g_44;
    #####:   61:    for (l_19 = 0; (l_19 >= 0); l_19 -= 1) {
    #####:   62:      int64_t l_51 = 0xCDDCDEDC29BFBD42LL;
    #####:   63:      (*l_43) ^= (l_50 != (*g_46));
    #####:   64:      for (g_38 = 0; (g_38 <= 0); g_38 += 1) {
    #####:   65:        uint32_t *l_57 = &g_58;
    #####:   66:        (*l_43) = g_5[0];
    #####:   67:        (*l_43) = ((l_51 >= (((safe_sub_func_uint8_t_u_u(((g_18.f0 != (((l_54 = (g_18, (*g_40))) == (void *)0) && (safe_add_func_int64_t_s_s(((((((*l_57) &= 1UL) != g_42) && ((void *)0 != &l_43)) | 0x58019D44E4153CDCLL) == l_51), g_12[3][0][3])))), g_17.f0), l_59)), g_5[0]) | 7L)) != g_38);
        -:   68:      }
        -:   69:    }
    #####:   70:    for (g_44 = (-18); (g_44 == (-30)); g_44--) {
    #####:   71:      for (l_59 = 0; (l_59 > 8); ++l_59) {
    #####:   72:        int32_t **l_64 = &l_54;
    #####:   73:        (*l_64) = (*g_46);
        -:   74:      }
        -:   75:    }
        -:   76:  }
        1:   77:  ++g_68[0][1][1];
        1:   78:  return g_17;
        -:   79:}
        -:   80:
        1:   81:static int16_t func_6(uint32_t p_7, int64_t p_8, const uint32_t p_9, int32_t p_10, int32_t p_11) {
        1:   82:  int32_t *l_39 = (void *)0;
        1:   83:  (*g_40) = l_39;
        1:   84:  return g_42;
        -:   85:}
        -:   86:
        1:   87:int main(int argc, char *argv[]) {
        -:   88:  int i, j, k;
        1:   89:  int print_hash_value = 0;
       1*:   90:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   91:    print_hash_value = 1;
        1:   92:  platform_main_begin();
        1:   93:  crc32_gentab();
        1:   94:  func_1();
        3:   95:  for (i = 0; i < 2; i++) {
        2:   96:    transparent_crc(g_5[i], "g_5[i]", print_hash_value);
        2:   97:    if (print_hash_value)
    #####:   98:      printf("index = [%d]\n", i);
        -:   99:  }
        5:  100:  for (i = 0; i < 4; i++) {
        8:  101:    for (j = 0; j < 1; j++) {
       20:  102:      for (k = 0; k < 4; k++) {
       16:  103:        transparent_crc(g_12[i][j][k], "g_12[i][j][k]", print_hash_value);
       16:  104:        if (print_hash_value)
    #####:  105:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  106:      }
        -:  107:    }
        -:  108:  }
        1:  109:  transparent_crc(g_17.f0, "g_17.f0", print_hash_value);
        1:  110:  transparent_crc(g_18.f0, "g_18.f0", print_hash_value);
        1:  111:  transparent_crc(g_38, "g_38", print_hash_value);
        1:  112:  transparent_crc(g_42, "g_42", print_hash_value);
        1:  113:  transparent_crc(g_44, "g_44", print_hash_value);
        1:  114:  transparent_crc(g_58, "g_58", print_hash_value);
        3:  115:  for (i = 0; i < 2; i++) {
        8:  116:    for (j = 0; j < 3; j++) {
       30:  117:      for (k = 0; k < 4; k++) {
       24:  118:        transparent_crc(g_68[i][j][k], "g_68[i][j][k]", print_hash_value);
       24:  119:        if (print_hash_value)
    #####:  120:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  121:      }
        -:  122:    }
        -:  123:  }
        1:  124:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  125:  return 0;
        -:  126:}

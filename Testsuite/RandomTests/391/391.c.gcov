        -:    0:Source:391.c
        -:    0:Graph:391.gcno
        -:    0:Data:391.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  unsigned f0 : 26;
        -:    8:  const unsigned f1 : 7;
        -:    9:};
        -:   10:
        -:   11:static int32_t g_3[5][5] = {{0x7F5ED9A9L, 0x5C62E089L, 0x7F5ED9A9L, 0x7F5ED9A9L, 0x5C62E089L}, {0x5C62E089L, 0x7F5ED9A9L, 0x7F5ED9A9L, 0x5C62E089L, 0x7F5ED9A9L}, {0x5C62E089L, 0x5C62E089L, 0x6A756A33L, 0x5C62E089L, 0x5C62E089L}, {0x7F5ED9A9L, 0x5C62E089L, 0x7F5ED9A9L, 0x7F5ED9A9L, 0x5C62E089L}, {0x5C62E089L, 0x7F5ED9A9L, 0x7F5ED9A9L, 0x5C62E089L, 0x7F5ED9A9L}};
        -:   12:static int32_t g_4 = 0x095A9796L;
        -:   13:static uint64_t g_8 = 18446744073709551613UL;
        -:   14:static uint64_t g_14 = 0xB2C41AC3DC99CDF9LL;
        -:   15:static struct S0 g_18 = {1102, 5};
        -:   16:static int64_t g_22 = 1L;
        -:   17:static uint64_t *g_28 = &g_14;
        -:   18:static uint64_t **g_27 = &g_28;
        -:   19:static uint8_t g_31[1] = {0UL};
        -:   20:static int32_t g_35[3][2] = {{1L, 0x6DA84B50L}, {1L, 1L}, {0x6DA84B50L, 1L}};
        -:   21:static int32_t *volatile g_34 = &g_35[0][1];
        -:   22:static uint32_t g_37 = 1UL;
        -:   23:static int32_t g_65 = (-1L);
        -:   24:
        -:   25:static uint16_t func_1(void);
        -:   26:static const uint64_t func_9(uint64_t *p_10, int8_t p_11, const uint64_t *const p_12);
        -:   27:
        1:   28:static uint16_t func_1(void) {
        -:   29:  int64_t l_2[1][1];
        1:   30:  int32_t l_38 = 0x39807108L;
        1:   31:  uint8_t *l_46 = &g_31[0];
        -:   32:  int16_t l_63[1][3][5];
        1:   33:  int64_t l_64 = (-5L);
        1:   34:  uint32_t l_66 = 1UL;
        -:   35:  int32_t *l_67[2];
        -:   36:  int64_t *l_68[2];
        1:   37:  int32_t **l_69 = &l_67[1];
        -:   38:  int i, j, k;
        2:   39:  for (i = 0; i < 1; i++) {
        2:   40:    for (j = 0; j < 1; j++)
        1:   41:      l_2[i][j] = 0xF57A7C20398070ADLL;
        -:   42:  }
        2:   43:  for (i = 0; i < 1; i++) {
        4:   44:    for (j = 0; j < 3; j++) {
       18:   45:      for (k = 0; k < 5; k++)
       15:   46:        l_63[i][j][k] = 0xB8F5L;
        -:   47:    }
        -:   48:  }
        3:   49:  for (i = 0; i < 2; i++)
        2:   50:    l_67[i] = &g_3[0][1];
        3:   51:  for (i = 0; i < 2; i++)
        2:   52:    l_68[i] = &g_22;
        2:   53:  for (g_3[0][1] = 0; (g_3[0][1] <= 0); g_3[0][1] += 1) {
        1:   54:    uint64_t *l_13 = &g_14;
        1:   55:    int32_t l_19[4][4][4] = {{{(-1L), (-2L), (-2L), (-1L)}, {0L, 0xDE450BB1L, (-1L), (-1L)}, {0x3A60813CL, 0L, 3L, (-2L)}, {(-1L), 0L, 1L, 0L}}, {{1L, 0x3A60813CL, 0x08BBD188L, (-1L)}, {0L, (-2L), 0L, (-1L)}, {0x38299FA9L, 0L, 0x38299FA9L, 0xFBFC75DAL}, {0x6C2E3A4CL, 0L, 0x80095520L, (-1L)}}, {{(-2L), 0L, (-1L), 0L}, {0x08BBD188L, 1L, (-1L), 1L}, {(-2L), 0x08BBD188L, 0x80095520L, 0L}, {0x6C2E3A4CL, 0L, 0x38299FA9L, 0x38299FA9L}}, {{0x38299FA9L, 0x38299FA9L, 0L, 0x6C2E3A4CL}, {0L, 0x80095520L, 0x08BBD188L, (-2L)}, {1L, (-1L), 1L, 0x08BBD188L}, {0L, (-1L), 0L, (-2L)}}};
        -:   56:    const uint64_t *const l_29[1][2][1] = {{{&g_14}, {&g_14}}};
        -:   57:    int i, j, k;
        2:   58:    for (g_4 = 0; (g_4 <= 0); g_4 += 1) {
        1:   59:      uint64_t *l_7 = &g_8;
        1:   60:      uint64_t **l_15 = &l_13;
        1:   61:      int64_t *l_20 = &l_2[0][0];
        -:   62:      int64_t *l_21[1];
        1:   63:      uint32_t *l_36 = &g_37;
        1:   64:      int32_t *l_39 = &g_35[0][1];
        1:   65:      int32_t *l_40 = (void *)0;
        1:   66:      int32_t *l_41 = &l_19[3][3][2];
        -:   67:      int i, j;
        2:   68:      for (i = 0; i < 1; i++)
        1:   69:        l_21[i] = &g_22;
       1*:   70:      (*l_41) = ((*l_39) = ((((*l_36) |= ((safe_sub_func_uint64_t_u_u(((*l_7) = 18446744073709551606UL), func_9(((*l_15) = l_13), ((g_22 = (l_2[g_4][g_4], (safe_lshift_func_int64_t_s_u(((*l_20) = (g_18, l_19[3][3][2])), 62)))) || (safe_lshift_func_uint64_t_u_u(((((safe_mod_func_int8_t_s_s(((g_27 == &g_28) <= 0UL), 0x7EL)), g_4) != g_18.f1) <= 18446744073709551615UL), 43))), l_29[0][1][0]))) < g_3[0][2])), l_2[0][0]) != l_38));
        -:   71:    }
        -:   72:  }
       1*:   73:  (*l_69) = ((safe_div_func_int16_t_s_s((safe_add_func_uint8_t_u_u(((*l_46)--), g_14)), (safe_sub_func_uint64_t_u_u((*g_28), (safe_mul_func_int64_t_s_s((g_22 = ((((((*g_34) = (((safe_lshift_func_int16_t_s_s((safe_mod_func_int16_t_s_s((safe_rshift_func_uint32_t_u_s(((g_65 = (safe_rshift_func_int64_t_s_u(((((&g_37 != (((((safe_mod_func_uint8_t_u_u((((*g_34) | l_63[0][1][4]) > (-7L)), l_64)) >= 7UL) && l_63[0][0][3]) > l_63[0][1][3]), &g_37)) != l_2[0][0]) | l_64) ^ l_63[0][0][1]), 59))) < l_63[0][2][2]), 5)), g_4)), 12)) <= l_66) <= l_64)) >= 4294967295UL), (void *)0) != &g_28) & g_3[0][1])), (**g_27))))))), (void *)0);
        1:   74:  return g_3[0][1];
        -:   75:}
        -:   76:
        1:   77:static const uint64_t func_9(uint64_t *p_10, int8_t p_11, const uint64_t *const p_12) {
        1:   78:  uint8_t *l_30 = &g_31[0];
        1:   79:  (*g_34) = ((++(*l_30)), g_18.f1);
        1:   80:  return (*p_12);
        -:   81:}
        -:   82:
        1:   83:int main(int argc, char *argv[]) {
        -:   84:  int i, j;
        1:   85:  int print_hash_value = 0;
       1*:   86:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   87:    print_hash_value = 1;
        1:   88:  platform_main_begin();
        1:   89:  crc32_gentab();
        1:   90:  func_1();
        6:   91:  for (i = 0; i < 5; i++) {
       30:   92:    for (j = 0; j < 5; j++) {
       25:   93:      transparent_crc(g_3[i][j], "g_3[i][j]", print_hash_value);
       25:   94:      if (print_hash_value)
    #####:   95:        printf("index = [%d][%d]\n", i, j);
        -:   96:    }
        -:   97:  }
        1:   98:  transparent_crc(g_4, "g_4", print_hash_value);
        1:   99:  transparent_crc(g_8, "g_8", print_hash_value);
        1:  100:  transparent_crc(g_14, "g_14", print_hash_value);
        1:  101:  transparent_crc(g_18.f0, "g_18.f0", print_hash_value);
        1:  102:  transparent_crc(g_18.f1, "g_18.f1", print_hash_value);
        1:  103:  transparent_crc(g_22, "g_22", print_hash_value);
        2:  104:  for (i = 0; i < 1; i++) {
        1:  105:    transparent_crc(g_31[i], "g_31[i]", print_hash_value);
        1:  106:    if (print_hash_value)
    #####:  107:      printf("index = [%d]\n", i);
        -:  108:  }
        4:  109:  for (i = 0; i < 3; i++) {
        9:  110:    for (j = 0; j < 2; j++) {
        6:  111:      transparent_crc(g_35[i][j], "g_35[i][j]", print_hash_value);
        6:  112:      if (print_hash_value)
    #####:  113:        printf("index = [%d][%d]\n", i, j);
        -:  114:    }
        -:  115:  }
        1:  116:  transparent_crc(g_37, "g_37", print_hash_value);
        1:  117:  transparent_crc(g_65, "g_65", print_hash_value);
        1:  118:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  119:  return 0;
        -:  120:}

        -:    0:Source:0.c
        -:    0:Graph:0.gcno
        -:    0:Data:0.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static volatile int32_t g_2 = 0x5E7A66FEL;
        -:    7:static volatile int32_t g_3[1][5][5] = {{{1L, 1L, 1L, 1L, 1L}, {0L, 0L, 0L, 0L, 0L}, {1L, 1L, 1L, 1L, 1L}, {0L, 0L, 0L, 0L, 0L}, {1L, 1L, 1L, 1L, 1L}}};
        -:    8:static int32_t g_4 = 0x72304B25L;
        -:    9:static int32_t g_7 = (-2L);
        -:   10:static int32_t g_14 = 6L;
        -:   11:static int32_t g_30[2] = {0x0578CCA6L, 0x0578CCA6L};
        -:   12:static int8_t g_37 = 3L;
        -:   13:static int32_t *g_39 = &g_7;
        -:   14:static int32_t **volatile g_38 = &g_39;
        -:   15:static uint8_t g_46 = 1UL;
        -:   16:static uint64_t g_51 = 18446744073709551613UL;
        -:   17:static int32_t g_62[2][4] = {{0x9CE07B88L, 0x9CE07B88L, 0x9CE07B88L, 0x9CE07B88L}, {0x9CE07B88L, 0x9CE07B88L, 0x9CE07B88L, 0x9CE07B88L}};
        -:   18:static int16_t g_64 = 0x51D4L;
        -:   19:static int16_t g_66 = (-8L);
        -:   20:static uint64_t **g_73 = (void *)0;
        -:   21:static uint64_t ***volatile g_72 = &g_73;
        -:   22:
        -:   23:static int32_t func_1(void);
        -:   24:static int32_t func_18(const int32_t *p_19, int64_t p_20, int32_t *p_21, int32_t *p_22, uint32_t p_23);
        -:   25:
        1:   26:static int32_t func_1(void) {
        1:   27:  int32_t l_35 = 2L;
        1:   28:  int32_t l_47 = 0x6A96DAD8L;
        1:   29:  uint64_t *l_71 = &g_51;
        1:   30:  uint64_t **l_70 = &l_71;
        1:   31:  for (g_4 = 0; (g_4 != 9); g_4 = safe_add_func_int64_t_s_s(g_4, 3)) {
        1:   32:    uint32_t l_12[5] = {1UL, 1UL, 1UL, 1UL, 1UL};
        1:   33:    int32_t *l_26 = &g_4;
        1:   34:    int32_t *l_29 = &g_30[1];
        -:   35:    int i;
       1*:   36:    for (g_7 = (-22); (g_7 == 14); g_7 = safe_add_func_uint16_t_u_u(g_7, 1)) {
    #####:   37:      int32_t *l_13 = &g_14;
    #####:   38:      int32_t **l_27 = (void *)0;
    #####:   39:      int32_t **l_28 = &l_26;
        -:   40:      int32_t *l_32[4];
    #####:   41:      int32_t **l_31 = &l_32[2];
    #####:   42:      int8_t *l_36 = &g_37;
    #####:   43:      uint32_t l_48 = 0x770AACC7L;
    #####:   44:      uint32_t l_67[4] = {7UL, 7UL, 7UL, 7UL};
        -:   45:      int i;
    #####:   46:      for (i = 0; i < 4; i++)
    #####:   47:        l_32[i] = &g_7;
    #####:   48:      if (((safe_mod_func_int32_t_s_s(((*l_13) ^= (0L != l_12[2])), (safe_rshift_func_uint32_t_u_s((safe_unary_minus_func_uint8_t_u((((func_18(&g_4, (((0xC8L != ((*l_36) = ((((((safe_mod_func_int16_t_s_s(((((*l_31) = (l_29 = ((*l_28) = l_26))) == &g_2) & 0xF9A4D91FL), g_2)) && (safe_add_func_int8_t_s_s((-5L), (*l_26)))) != l_35) <= 8L), 0xA984L), 0L))), g_2) <= g_30[0]), &g_4, &g_30[1], l_12[4]) > g_30[1]) == 251UL) > l_12[1]))), 19)))), (*g_39))) {
    #####:   49:        uint32_t *l_43 = &l_12[0];
    #####:   50:        uint8_t *l_44 = (void *)0;
    #####:   51:        uint8_t *l_45[4] = {&g_46, &g_46, &g_46, &g_46};
        -:   52:        int i;
    #####:   53:        (*l_13) = (g_37 != (safe_mul_func_uint32_t_u_u(((*l_43) |= l_35), ((l_47 &= g_30[1]) <= l_48))));
        -:   54:      } else {
    #####:   55:        uint8_t *l_49 = &g_46;
    #####:   56:        uint64_t *l_50 = &g_51;
    #####:   57:        int32_t l_60 = (-1L);
        -:   58:        uint16_t *l_61[2];
    #####:   59:        int16_t *l_63 = &g_64;
    #####:   60:        int16_t *l_65 = &g_66;
        -:   61:        int i;
    #####:   62:        for (i = 0; i < 2; i++)
    #####:   63:          l_61[i] = (void *)0;
    #####:   64:        l_60 = (((*l_65) ^= ((((((((l_49 != (void *)0) <= (g_37 < ((((*l_50)--), (void *)0) != l_29))) == (safe_mul_func_int16_t_s_s(((*g_38) != &g_30[1]), ((*l_63) |= (((((safe_lshift_func_uint64_t_u_u((safe_rshift_func_uint16_t_u_s(l_60, 2)), 9)) ^ (((((g_62[0][3] ^= g_7) != g_4) >= l_60) & 0x10L) ^ 0x53D5L)) && l_60), (void *)0) == g_39))))), g_46) && g_62[0][3]) < (-1L)) != l_60) == 8UL)) | 1UL);
    #####:   65:        return l_47;
        -:   66:      }
    #####:   67:      ++l_67[3];
        -:   68:    }
        1:   69:    return (**g_38);
        -:   70:  }
    #####:   71:  (*g_72) = l_70;
    #####:   72:  return (**g_38);
        -:   73:}
        -:   74:
    #####:   75:static int32_t func_18(const int32_t *p_19, int64_t p_20, int32_t *p_21, int32_t *p_22, uint32_t p_23) {
    #####:   76:  int32_t l_40 = 0x449EF57AL;
    #####:   77:  (*g_38) = &g_30[1];
    #####:   78:  return l_40;
        -:   79:}
        -:   80:
        1:   81:int main(int argc, char *argv[]) {
        -:   82:  int i, j, k;
        1:   83:  int print_hash_value = 0;
       1*:   84:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   85:    print_hash_value = 1;
        1:   86:  platform_main_begin();
        1:   87:  crc32_gentab();
        1:   88:  func_1();
        1:   89:  transparent_crc(g_2, "g_2", print_hash_value);
        2:   90:  for (i = 0; i < 1; i++) {
        6:   91:    for (j = 0; j < 5; j++) {
       30:   92:      for (k = 0; k < 5; k++) {
       25:   93:        transparent_crc(g_3[i][j][k], "g_3[i][j][k]", print_hash_value);
       25:   94:        if (print_hash_value)
    #####:   95:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   96:      }
        -:   97:    }
        -:   98:  }
        1:   99:  transparent_crc(g_4, "g_4", print_hash_value);
        1:  100:  transparent_crc(g_7, "g_7", print_hash_value);
        1:  101:  transparent_crc(g_14, "g_14", print_hash_value);
        3:  102:  for (i = 0; i < 2; i++) {
        2:  103:    transparent_crc(g_30[i], "g_30[i]", print_hash_value);
        2:  104:    if (print_hash_value)
    #####:  105:      printf("index = [%d]\n", i);
        -:  106:  }
        1:  107:  transparent_crc(g_37, "g_37", print_hash_value);
        1:  108:  transparent_crc(g_46, "g_46", print_hash_value);
        1:  109:  transparent_crc(g_51, "g_51", print_hash_value);
        3:  110:  for (i = 0; i < 2; i++) {
       10:  111:    for (j = 0; j < 4; j++) {
        8:  112:      transparent_crc(g_62[i][j], "g_62[i][j]", print_hash_value);
        8:  113:      if (print_hash_value)
    #####:  114:        printf("index = [%d][%d]\n", i, j);
        -:  115:    }
        -:  116:  }
        1:  117:  transparent_crc(g_64, "g_64", print_hash_value);
        1:  118:  transparent_crc(g_66, "g_66", print_hash_value);
        1:  119:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  120:  return 0;
        -:  121:}

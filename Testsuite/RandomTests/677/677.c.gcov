        -:    0:Source:677.c
        -:    0:Graph:677.gcno
        -:    0:Data:677.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static int8_t g_3 = 0L;
        -:    7:static int8_t g_5 = 5L;
        -:    8:static volatile int8_t g_8 = (-9L);
        -:    9:static int8_t g_16[4][1] = {{(-7L)}, {0x14L}, {(-7L)}, {0x14L}};
        -:   10:static int8_t *g_15 = &g_16[3][0];
        -:   11:static int32_t g_19[2][1][3] = {{{(-8L), (-8L), (-8L)}}, {{4L, 4L, 4L}}};
        -:   12:
        -:   13:static int64_t func_1(void);
        -:   14:static const uint64_t func_9(int8_t *p_10, int8_t *p_11, int16_t p_12, const int8_t *p_13, int64_t p_14);
        -:   15:
        1:   16:static int64_t func_1(void) {
        1:   17:  int8_t *l_2 = (void *)0;
        1:   18:  int8_t *l_4 = &g_5;
        1:   19:  int32_t l_17 = 3L;
        1:   20:  int32_t *l_24 = (void *)0;
        1:   21:  g_19[0][0][1] = (((*l_4) = (g_3 = (0x15912491L >= 0x9EA41449L))) < (safe_rshift_func_int32_t_s_u(g_8, (func_9(g_15, &g_16[3][0], l_17, l_2, l_17) == l_17))));
        1:   22:  return g_3;
        -:   23:}
        -:   24:
        1:   25:static const uint64_t func_9(int8_t *p_10, int8_t *p_11, int16_t p_12, const int8_t *p_13, int64_t p_14) {
        1:   26:  uint64_t l_21 = 0xFC2F92E6C0B333EELL;
       1*:   27:  for (p_14 = 0; (p_14 <= 0); p_14 += 1) {
        1:   28:    int32_t *l_18 = &g_19[0][0][1];
        -:   29:    int32_t *l_20[2][2];
        -:   30:    int i, j;
        3:   31:    for (i = 0; i < 2; i++) {
        6:   32:      for (j = 0; j < 2; j++)
        4:   33:        l_20[i][j] = &g_19[1][0][1];
        -:   34:    }
        1:   35:    l_21--;
        1:   36:    for (p_12 = 0; (p_12 <= 0); p_12 += 1) {
        -:   37:      int i, j;
        1:   38:      return g_16[(p_14 + 3)][p_14];
        -:   39:    }
        -:   40:  }
    #####:   41:  return g_16[1][0];
        -:   42:}
        -:   43:
        1:   44:int main(int argc, char *argv[]) {
        -:   45:  int i, j, k;
        1:   46:  int print_hash_value = 0;
       1*:   47:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   48:    print_hash_value = 1;
        1:   49:  platform_main_begin();
        1:   50:  crc32_gentab();
        1:   51:  func_1();
        1:   52:  transparent_crc(g_3, "g_3", print_hash_value);
        1:   53:  transparent_crc(g_5, "g_5", print_hash_value);
        1:   54:  transparent_crc(g_8, "g_8", print_hash_value);
        5:   55:  for (i = 0; i < 4; i++) {
        8:   56:    for (j = 0; j < 1; j++) {
        4:   57:      transparent_crc(g_16[i][j], "g_16[i][j]", print_hash_value);
        4:   58:      if (print_hash_value)
    #####:   59:        printf("index = [%d][%d]\n", i, j);
        -:   60:    }
        -:   61:  }
        3:   62:  for (i = 0; i < 2; i++) {
        4:   63:    for (j = 0; j < 1; j++) {
        8:   64:      for (k = 0; k < 3; k++) {
        6:   65:        transparent_crc(g_19[i][j][k], "g_19[i][j][k]", print_hash_value);
        6:   66:        if (print_hash_value)
    #####:   67:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   68:      }
        -:   69:    }
        -:   70:  }
        1:   71:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   72:  return 0;
        -:   73:}

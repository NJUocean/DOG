        -:    0:Source:251.c
        -:    0:Graph:251.gcno
        -:    0:Data:251.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:struct S0 {
        -:    7:  volatile int64_t f0;
        -:    8:};
        -:    9:
        -:   10:#pragma pack(push)
        -:   11:#pragma pack(1)
        -:   12:struct S1 {
        -:   13:  int32_t f0;
        -:   14:  struct S0 f1;
        -:   15:  const volatile uint64_t f2;
        -:   16:};
        -:   17:#pragma pack(pop)
        -:   18:
        -:   19:#pragma pack(push)
        -:   20:#pragma pack(1)
        -:   21:struct S2 {
        -:   22:  unsigned f0 : 18;
        -:   23:};
        -:   24:#pragma pack(pop)
        -:   25:
        -:   26:static volatile int32_t g_3 = 8L;
        -:   27:static int32_t g_4[4] = {0xA831D26EL, 0xA831D26EL, 0xA831D26EL, 0xA831D26EL};
        -:   28:static volatile int32_t g_5[4] = {(-6L), (-6L), (-6L), (-6L)};
        -:   29:static struct S1 g_6 = {7L, {7L}, 0xDBBE56890C544087LL};
        -:   30:
        -:   31:static struct S1 func_1(void);
        -:   32:
        1:   33:static struct S1 func_1(void) {
        1:   34:  struct S2 l_2[4][1][3] = {{{{9}, {109}, {109}}}, {{{9}, {109}, {109}}}, {{{9}, {109}, {109}}}, {{{9}, {109}, {109}}}};
        -:   35:  int i, j, k;
        5:   36:  for (g_3 = 0; g_3 < 4; g_3 += 1) {
        8:   37:    for (g_4[2] = 0; g_4[2] < 1; g_4[2] += 1) {
       16:   38:      for (g_5[0] = 0; g_5[0] < 3; g_5[0] += 1) {
       12:   39:        struct S2 tmp = {167};
       12:   40:        l_2[g_3][g_4[2]][g_5[0]] = tmp;
        -:   41:      }
        -:   42:    }
        -:   43:  }
        1:   44:  return g_6;
        -:   45:}
        -:   46:
        1:   47:int main(int argc, char *argv[]) {
        -:   48:  int i;
        1:   49:  int print_hash_value = 0;
       1*:   50:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   51:    print_hash_value = 1;
        1:   52:  platform_main_begin();
        1:   53:  crc32_gentab();
        1:   54:  func_1();
        1:   55:  transparent_crc(g_3, "g_3", print_hash_value);
        5:   56:  for (i = 0; i < 4; i++) {
        4:   57:    transparent_crc(g_4[i], "g_4[i]", print_hash_value);
        4:   58:    if (print_hash_value)
    #####:   59:      printf("index = [%d]\n", i);
        -:   60:  }
        5:   61:  for (i = 0; i < 4; i++) {
        4:   62:    transparent_crc(g_5[i], "g_5[i]", print_hash_value);
        4:   63:    if (print_hash_value)
    #####:   64:      printf("index = [%d]\n", i);
        -:   65:  }
        1:   66:  transparent_crc(g_6.f0, "g_6.f0", print_hash_value);
        1:   67:  transparent_crc(g_6.f1.f0, "g_6.f1.f0", print_hash_value);
        1:   68:  transparent_crc(g_6.f2, "g_6.f2", print_hash_value);
        1:   69:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   70:  return 0;
        -:   71:}

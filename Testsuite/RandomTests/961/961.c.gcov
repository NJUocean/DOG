        -:    0:Source:961.c
        -:    0:Graph:961.gcno
        -:    0:Data:961.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:static uint64_t g_2[4][3] = {{18446744073709551611UL, 1UL, 0UL}, {0xA3622BA394643CDFLL, 1UL, 0xA3622BA394643CDFLL}, {0UL, 18446744073709551611UL, 0UL}, {0UL, 0UL, 18446744073709551611UL}};
        -:    7:static int32_t g_3[2] = {8L, 8L};
        -:    8:static uint64_t g_12 = 0x7A7525D2D91509CFLL;
        -:    9:static int32_t *g_17[1] = {(void *)0};
        -:   10:static int32_t g_19 = (-1L);
        -:   11:static int32_t *g_18 = &g_19;
        -:   12:static volatile int32_t g_22 = 9L;
        -:   13:static volatile int32_t *g_21 = &g_22;
        -:   14:static volatile int32_t *volatile *g_20 = &g_21;
        -:   15:static uint32_t g_23 = 0xF213ED42L;
        -:   16:static uint64_t g_40 = 0UL;
        -:   17:static const uint64_t g_47 = 18446744073709551610UL;
        -:   18:static const uint64_t *g_46 = &g_47;
        -:   19:
        -:   20:static const int16_t func_1(void);
        -:   21:static int32_t func_4(uint64_t p_5, int32_t p_6);
        -:   22:
        1:   23:static const int16_t func_1(void) {
        1:   24:  int32_t l_25 = 0x071E9942L;
        -:   25:  int32_t l_35[5];
        -:   26:  int i;
        6:   27:  for (i = 0; i < 5; i++)
        5:   28:    l_35[i] = (-7L);
       1*:   29:  for (g_3[1] = 2; (g_3[1] >= 0); g_3[1] -= 1) {
        1:   30:    uint64_t *l_8 = &g_2[1][2];
        -:   31:    uint64_t *l_11[5];
        1:   32:    int32_t l_24 = 2L;
        -:   33:    int i;
        6:   34:    for (i = 0; i < 5; i++)
        5:   35:      l_11[i] = &g_12;
        1:   36:    l_24 = ((func_4((g_12 = ((0x1ADB2BC4L || (safe_unary_minus_func_uint8_t_u(g_3[1]))) <= ((*l_8)++))), g_3[1]) == ((void *)0 == g_20)) < (g_23 = (((void *)0 != (*g_20)), 6UL)));
        1:   37:    if (l_25)
        1:   38:      break;
    #####:   39:    for (l_24 = 0; (l_24 <= 2); l_24 += 1) {
    #####:   40:      uint32_t *l_34 = &g_23;
        -:   41:      int i, j;
    #####:   42:      (*g_21) &= (safe_mod_func_int16_t_s_s((safe_lshift_func_int32_t_s_s((((g_2[(l_24 + 1)][l_24], g_2[(g_3[1] + 1)][l_24]) < ((safe_add_func_int64_t_s_s(g_2[(l_24 + 1)][l_24], (((safe_mul_func_uint8_t_u_u((((*l_34) ^= g_12) & 0L), l_35[0])), ((safe_sub_func_int16_t_s_s((safe_add_func_int16_t_s_s((g_40 = (((void *)0 == &g_2[(g_3[1] + 1)][l_24]) & g_2[1][1])), 0xE478L)), g_2[(g_3[1] + 1)][l_24])) == 0x1847726B4FF51021LL)) <= (-3L)))) != 5UL)) | g_2[(g_3[1] + 1)][l_24]), 9)), 0x9802L));
    #####:   43:      for (g_40 = 0; (g_40 <= 2); g_40 += 1) {
        -:   44:        int32_t **l_43[4];
    #####:   45:        int32_t ***l_42 = &l_43[0];
        -:   46:        uint64_t *const l_48[5][4] = {{&g_12, &g_12, &g_12, &g_12}, {&g_12, &g_12, &g_12, &g_12}, {&g_12, &g_12, &g_12, &g_12}, {&g_12, &g_12, &g_12, &g_12}, {&g_12, &g_12, &g_12, &g_12}};
        -:   47:        int i, j;
    #####:   48:        for (i = 0; i < 4; i++)
    #####:   49:          l_43[i] = &g_17[0];
    #####:   50:        (**g_20) = ((safe_unary_minus_func_uint64_t_u((((*l_42) = &g_18) == &g_18))) < (safe_rshift_func_int16_t_s_s(((&g_40 != (void *)0) < ((g_46 = &g_2[0][1]) != l_48[0][1])), 9)));
        -:   51:      }
        -:   52:    }
        -:   53:  }
        1:   54:  (**g_20) = ((*g_46), ((*g_18) &= (**g_20)));
        1:   55:  return l_35[0];
        -:   56:}
        -:   57:
        1:   58:static int32_t func_4(uint64_t p_5, int32_t p_6) {
        1:   59:  int32_t *l_14 = &g_3[1];
        1:   60:  int32_t **l_13 = &l_14;
        1:   61:  int32_t *l_16 = &g_3[1];
        1:   62:  int32_t **l_15[3][5][5] = {{{&l_16, &l_16, &l_16, &l_16, &l_16}, {(void *)0, &l_16, &l_16, &l_16, &l_16}, {(void *)0, &l_16, (void *)0, &l_16, &l_16}, {(void *)0, &l_16, &l_16, &l_16, &l_16}, {&l_16, &l_16, &l_16, (void *)0, &l_16}}, {{&l_16, &l_16, &l_16, &l_16, (void *)0}, {&l_16, (void *)0, (void *)0, (void *)0, (void *)0}, {&l_16, &l_16, &l_16, &l_16, (void *)0}, {&l_16, (void *)0, &l_16, (void *)0, &l_16}, {(void *)0, &l_16, &l_16, &l_16, &l_16}}, {{(void *)0, (void *)0, (void *)0, (void *)0, &l_16}, {(void *)0, &l_16, &l_16, &l_16, &l_16}, {&l_16, (void *)0, &l_16, &l_16, &l_16}, {&l_16, &l_16, &l_16, &l_16, (void *)0}, {&l_16, &l_16, (void *)0, &l_16, (void *)0}}};
        -:   63:  int i, j, k;
        1:   64:  g_18 = (g_17[0] = ((*l_13) = &g_3[1]));
        1:   65:  return p_6;
        -:   66:}
        -:   67:
        1:   68:int main(int argc, char *argv[]) {
        -:   69:  int i, j;
        1:   70:  int print_hash_value = 0;
       1*:   71:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   72:    print_hash_value = 1;
        1:   73:  platform_main_begin();
        1:   74:  crc32_gentab();
        1:   75:  func_1();
        5:   76:  for (i = 0; i < 4; i++) {
       16:   77:    for (j = 0; j < 3; j++) {
       12:   78:      transparent_crc(g_2[i][j], "g_2[i][j]", print_hash_value);
       12:   79:      if (print_hash_value)
    #####:   80:        printf("index = [%d][%d]\n", i, j);
        -:   81:    }
        -:   82:  }
        3:   83:  for (i = 0; i < 2; i++) {
        2:   84:    transparent_crc(g_3[i], "g_3[i]", print_hash_value);
        2:   85:    if (print_hash_value)
    #####:   86:      printf("index = [%d]\n", i);
        -:   87:  }
        1:   88:  transparent_crc(g_12, "g_12", print_hash_value);
        1:   89:  transparent_crc(g_19, "g_19", print_hash_value);
        1:   90:  transparent_crc(g_22, "g_22", print_hash_value);
        1:   91:  transparent_crc(g_23, "g_23", print_hash_value);
        1:   92:  transparent_crc(g_40, "g_40", print_hash_value);
        1:   93:  transparent_crc(g_47, "g_47", print_hash_value);
        1:   94:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   95:  return 0;
        -:   96:}

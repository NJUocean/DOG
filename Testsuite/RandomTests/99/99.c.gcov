        -:    0:Source:99.c
        -:    0:Graph:99.gcno
        -:    0:Data:99.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U0 {
        -:    7:  const volatile uint32_t f0;
        -:    8:  uint64_t f1;
        -:    9:  int32_t f2;
        -:   10:  const int32_t f3;
        -:   11:};
        -:   12:
        -:   13:union U1 {
        -:   14:  volatile uint16_t f0;
        -:   15:};
        -:   16:
        -:   17:static int32_t g_2[4][2] = {{0xC5A654FDL, 0xC5A654FDL}, {0xC5A654FDL, 0xC5A654FDL}, {0xC5A654FDL, 0xC5A654FDL}, {0xC5A654FDL, 0xC5A654FDL}};
        -:   18:static int32_t g_3[2] = {1L, 1L};
        -:   19:static int8_t g_10[2] = {0xC3L, 0xC3L};
        -:   20:static volatile union U1 g_23 = {1UL};
        -:   21:static uint16_t g_25 = 1UL;
        -:   22:static volatile union U1 g_29 = {1UL};
        -:   23:static int32_t *g_32[3] = {&g_3[0], &g_3[0], &g_3[0]};
        -:   24:static int32_t **volatile g_31 = &g_32[1];
        -:   25:static int64_t g_38 = 0xEB5A40A7B48FE2D5LL;
        -:   26:static int64_t g_43[3][3][5] = {{{(-1L), (-1L), (-1L), (-1L), (-1L)}, {0x6047311EBC84814CLL, 0x6047311EBC84814CLL, 0x6047311EBC84814CLL, 0x6047311EBC84814CLL, 0x6047311EBC84814CLL}, {(-1L), (-1L), (-1L), (-1L), (-1L)}}, {{0x6047311EBC84814CLL, 0x6047311EBC84814CLL, 0x6047311EBC84814CLL, 0x6047311EBC84814CLL, 0x6047311EBC84814CLL}, {(-1L), (-1L), (-1L), (-1L), (-1L)}, {0x6047311EBC84814CLL, 0x6047311EBC84814CLL, 0x6047311EBC84814CLL, 0x6047311EBC84814CLL, 0x6047311EBC84814CLL}}, {{(-1L), (-1L), (-1L), (-1L), (-1L)}, {0x6047311EBC84814CLL, 0x6047311EBC84814CLL, 0x6047311EBC84814CLL, 0x6047311EBC84814CLL, 0x6047311EBC84814CLL}, {(-1L), (-1L), (-1L), (-1L), (-1L)}}};
        -:   27:static uint8_t g_45 = 8UL;
        -:   28:static uint8_t g_47[3][1] = {{0xFFL}, {0xFFL}, {0xFFL}};
        -:   29:static int32_t **volatile g_61 = (void *)0;
        -:   30:static int32_t **volatile g_62[1][2] = {{&g_32[1], &g_32[1]}};
        -:   31:static int32_t **volatile g_63 = &g_32[0];
        -:   32:static int32_t g_85 = 1L;
        -:   33:static int32_t *volatile g_102 = &g_2[1][0];
        -:   34:static volatile union U0 g_106 = {8UL};
        -:   35:static int8_t g_112[5] = {0x9BL, 0x9BL, 0x9BL, 0x9BL, 0x9BL};
        -:   36:static int8_t *g_111 = &g_112[3];
        -:   37:
        -:   38:static uint32_t func_1(void);
        -:   39:static int32_t *func_4(int8_t p_5, uint32_t p_6, int32_t *p_7, uint32_t p_8);
        -:   40:
        1:   41:static uint32_t func_1(void) {
        1:   42:  uint16_t l_74 = 65530UL;
        1:   43:  int32_t **l_105 = &g_32[0];
        1:   44:  int8_t *l_109[5] = {&g_10[0], &g_10[0], &g_10[0], &g_10[0], &g_10[0]};
        1:   45:  int8_t **l_110[5][4][3] = {{{(void *)0, &l_109[3], (void *)0}, {(void *)0, (void *)0, &l_109[3]}, {&l_109[3], &l_109[3], &l_109[3]}, {(void *)0, &l_109[3], &l_109[3]}}, {{(void *)0, &l_109[3], (void *)0}, {(void *)0, (void *)0, &l_109[3]}, {&l_109[3], &l_109[3], &l_109[3]}, {(void *)0, &l_109[3], &l_109[3]}}, {{(void *)0, &l_109[3], (void *)0}, {(void *)0, (void *)0, &l_109[3]}, {&l_109[3], &l_109[3], &l_109[3]}, {(void *)0, &l_109[3], &l_109[3]}}, {{(void *)0, &l_109[3], (void *)0}, {(void *)0, (void *)0, &l_109[3]}, {&l_109[3], &l_109[3], &l_109[3]}, {(void *)0, &l_109[3], &l_109[3]}}, {{(void *)0, &l_109[3], (void *)0}, {(void *)0, (void *)0, &l_109[3]}, {&l_109[3], &l_109[3], &l_109[3]}, {(void *)0, &l_109[3], &l_109[3]}}};
        1:   46:  uint16_t l_120 = 0x7043L;
        -:   47:  int i, j, k;
        3:   48:  for (g_3[1] = 1; (g_3[1] >= 0); g_3[1] -= 1) {
        2:   49:    int8_t *l_9 = &g_10[1];
        2:   50:    int32_t l_11[3][4][4] = {{{0x98CAFA32L, 1L, 0x1A4E6659L, 0x1A4E6659L}, {0x30377367L, 0x30377367L, 0x98CAFA32L, 0x1A4E6659L}, {(-4L), 1L, (-4L), 0x98CAFA32L}, {(-4L), 0x98CAFA32L, 0x98CAFA32L, (-4L)}}, {{0x30377367L, 0x98CAFA32L, 0x1A4E6659L, 0x98CAFA32L}, {0x98CAFA32L, 1L, 0x1A4E6659L, 0x1A4E6659L}, {0x30377367L, 0x30377367L, 0x98CAFA32L, 0x1A4E6659L}, {(-4L), 1L, (-4L), 0x98CAFA32L}}, {{(-4L), 0x98CAFA32L, 0x98CAFA32L, (-4L)}, {0x30377367L, 0x98CAFA32L, 0x1A4E6659L, 0x98CAFA32L}, {0x98CAFA32L, 1L, 0x1A4E6659L, 0x1A4E6659L}, {0x30377367L, 0x30377367L, 0x98CAFA32L, 0x1A4E6659L}}};
        2:   51:    int32_t **l_64 = &g_32[2];
        -:   52:    int i, j, k;
        2:   53:    (*l_64) = func_4(((*l_9) &= 0x12L), g_3[1], &g_2[2][1], l_11[0][2][1]);
        6:   54:    for (g_38 = 1; (g_38 >= 0); g_38 -= 1) {
        4:   55:      uint32_t l_67 = 0x1E2C279AL;
        4:   56:      int32_t l_70 = 1L;
        4:   57:      int32_t l_71 = 0L;
        4:   58:      int64_t l_72 = 0xBED38BC6A5050E7ALL;
        4:   59:      int32_t l_73[5] = {0xBE16947FL, 0xBE16947FL, 0xBE16947FL, 0xBE16947FL, 0xBE16947FL};
        -:   60:      int i;
        4:   61:      if ((safe_rshift_func_uint64_t_u_s(g_2[1][1], l_67))) {
        4:   62:        int32_t *l_68 = &g_2[3][1];
        -:   63:        int32_t *l_69[5];
        -:   64:        int i, j;
       24:   65:        for (i = 0; i < 5; i++)
       20:   66:          l_69[i] = &l_11[0][2][1];
        4:   67:        l_74++;
        4:   68:        (*l_64) = (void *)0;
        -:   69:      } else {
    #####:   70:        uint8_t *l_90 = &g_45;
    #####:   71:        int32_t l_95 = (-10L);
    #####:   72:        int32_t *l_98 = &l_70;
    #####:   73:        int32_t *l_99 = &l_73[4];
    #####:   74:        int8_t *l_101 = &g_10[1];
    #####:   75:        int8_t **l_100 = &l_101;
    #####:   76:        (*g_102) = (((safe_mul_func_uint64_t_u_u((((g_43[1][0][0], 0x8EL) <= (l_9 != ((*l_100) = (((*l_99) |= ((*l_98) ^= ((1UL <= l_74), (safe_mul_func_uint8_t_u_u((safe_div_func_int32_t_s_s((safe_div_func_int64_t_s_s(0L, (g_85 = g_3[1]))), (safe_div_func_uint32_t_u_u(((safe_sub_func_uint8_t_u_u(((*l_90)--), (safe_mod_func_uint64_t_u_u((((l_95 >= (safe_mod_func_int32_t_s_s((0x474DL <= g_43[0][0][1]), g_38))) <= g_43[0][2][2]) | 0xF4L), 0x55D16F9888A1598DLL)))) > l_95), l_72)))), g_47[0][0]))))), l_90)))) >= 1L), l_11[0][3][2])) == l_71) && g_23.f0);
    #####:   77:        (*l_98) ^= (safe_rshift_func_int32_t_s_u(0xDE568157L, (l_105 != &g_32[1])));
        -:   78:      }
        -:   79:    }
        -:   80:  }
       1*:   81:  (*g_102) = (g_106, (((g_10[1] != ((safe_mul_func_int64_t_s_s((6L != ((g_111 = l_109[3]) == (void *)0)), ((safe_sub_func_uint32_t_u_u((safe_mod_func_uint32_t_u_u(((l_105 == (((g_25 = ((safe_mul_func_int16_t_s_s(((!0x3CA981A8B47936CBLL) ^ ((void *)0 != &g_10[0])), g_10[1])), g_3[1])) ^ g_43[1][0][1]), &g_32[1])) && g_112[3]), (*g_102))), l_74)) & 0UL))) > g_43[0][2][4])) < g_43[2][2][1]), l_120));
        1:   82:  return g_47[0][0];
        -:   83:}
        -:   84:
        2:   85:static int32_t *func_4(int8_t p_5, uint32_t p_6, int32_t *p_7, uint32_t p_8) {
        2:   86:  int32_t l_20 = 0xFC2E607DL;
        2:   87:  int32_t *l_27 = &g_2[1][1];
        2:   88:  (*p_7) = (p_5, (*p_7));
        8:   89:  for (p_5 = 20; (p_5 <= 22); p_5 = safe_add_func_int8_t_s_s(p_5, 1)) {
        6:   90:    int8_t *l_36 = &g_10[0];
        -:   91:    int32_t l_39[1];
        6:   92:    const int32_t l_59 = 0xE98B8724L;
        -:   93:    int i;
       12:   94:    for (i = 0; i < 1; i++)
        6:   95:      l_39[i] = 0xDDA4ADCFL;
        6:   96:    if ((*p_7)) {
        6:   97:      int8_t *l_21 = (void *)0;
        6:   98:      int8_t *l_22 = &g_10[1];
        6:   99:      uint16_t *l_24 = &g_25;
       6*:  100:      if ((((*l_24) = (safe_mul_func_uint16_t_u_u(((((*l_22) = (safe_div_func_int32_t_s_s(2L, (safe_sub_func_int8_t_s_s(0xDEL, l_20))))) && ((g_23, &g_3[1]) == (g_10[1], p_7))), ((((void *)0 != &p_5) || p_6) != 0L)), 1L))) > 0UL)) {
        -:  101:        int32_t **l_26[1][4];
        6:  102:        int32_t *l_28 = &g_2[1][1];
        -:  103:        int i, j;
       12:  104:        for (i = 0; i < 1; i++) {
       30:  105:          for (j = 0; j < 4; j++)
       24:  106:            l_26[i][j] = (void *)0;
        -:  107:        }
        6:  108:        l_28 = (l_27 = &g_3[1]);
        -:  109:      } else {
    #####:  110:        int32_t **l_30 = &l_27;
    #####:  111:        (*g_31) = ((*l_30) = (g_29, p_7));
        -:  112:      }
        -:  113:    } else {
    #####:  114:      int8_t *l_35 = (void *)0;
        -:  115:      int8_t **l_34[3];
    #####:  116:      int64_t *l_37 = &g_38;
    #####:  117:      int64_t *l_42 = &g_43[2][2][1];
    #####:  118:      uint8_t *l_44 = &g_45;
    #####:  119:      uint8_t *l_46 = &g_47[2][0];
    #####:  120:      int32_t l_57 = 0L;
        -:  121:      int i;
    #####:  122:      for (i = 0; i < 3; i++)
    #####:  123:        l_34[i] = &l_35;
    #####:  124:      if ((((*l_27) & (l_20 = ((((*l_46) = ((g_23, g_29), ((*l_44) ^= ((~(((*l_37) = (&g_10[1] != (l_36 = &g_10[1]))) >= (((*l_42) = (g_2[1][1] != (l_39[0], ((*l_27) & (safe_add_func_int8_t_s_s((0xA8B0L && (*l_27)), (*l_27))))))), 0x3CCF75BAE5BD571ELL))) != g_3[1])))) < p_5) >= p_6))) || g_45)) {
    #####:  125:        uint16_t *l_55 = &g_25;
    #####:  126:        int32_t l_58 = (-8L);
    #####:  127:        int32_t *l_60 = &l_20;
    #####:  128:        (*l_60) &= (safe_mod_func_uint64_t_u_u(((safe_unary_minus_func_uint64_t_u((((*l_36) = (((safe_div_func_int32_t_s_s((((safe_div_func_uint16_t_u_u(((*l_55) &= 0x8A13L), 0xDFF9L)), (((((safe_unary_minus_func_uint32_t_u(((g_23.f0, &l_20) != (void *)0))), ((((g_38 || ((p_6, (void *)0) != (void *)0)) & p_8) || l_57) >= 0L)) <= g_2[2][1]) & 0xFA72L) > g_47[2][0])), l_58), l_59)) < (*p_7)), g_45)) == g_3[0]))) <= 0x86L), g_47[0][0]));
        -:  129:      } else {
    #####:  130:        (*g_63) = &l_57;
    #####:  131:        return p_7;
        -:  132:      }
        -:  133:    }
        -:  134:  }
        2:  135:  return p_7;
        -:  136:}
        -:  137:
        1:  138:int main(int argc, char *argv[]) {
        -:  139:  int i, j, k;
        1:  140:  int print_hash_value = 0;
       1*:  141:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  142:    print_hash_value = 1;
        1:  143:  platform_main_begin();
        1:  144:  crc32_gentab();
        1:  145:  func_1();
        5:  146:  for (i = 0; i < 4; i++) {
       12:  147:    for (j = 0; j < 2; j++) {
        8:  148:      transparent_crc(g_2[i][j], "g_2[i][j]", print_hash_value);
        8:  149:      if (print_hash_value)
    #####:  150:        printf("index = [%d][%d]\n", i, j);
        -:  151:    }
        -:  152:  }
        3:  153:  for (i = 0; i < 2; i++) {
        2:  154:    transparent_crc(g_3[i], "g_3[i]", print_hash_value);
        2:  155:    if (print_hash_value)
    #####:  156:      printf("index = [%d]\n", i);
        -:  157:  }
        3:  158:  for (i = 0; i < 2; i++) {
        2:  159:    transparent_crc(g_10[i], "g_10[i]", print_hash_value);
        2:  160:    if (print_hash_value)
    #####:  161:      printf("index = [%d]\n", i);
        -:  162:  }
        1:  163:  transparent_crc(g_23.f0, "g_23.f0", print_hash_value);
        1:  164:  transparent_crc(g_25, "g_25", print_hash_value);
        1:  165:  transparent_crc(g_29.f0, "g_29.f0", print_hash_value);
        1:  166:  transparent_crc(g_38, "g_38", print_hash_value);
        4:  167:  for (i = 0; i < 3; i++) {
       12:  168:    for (j = 0; j < 3; j++) {
       54:  169:      for (k = 0; k < 5; k++) {
       45:  170:        transparent_crc(g_43[i][j][k], "g_43[i][j][k]", print_hash_value);
       45:  171:        if (print_hash_value)
    #####:  172:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  173:      }
        -:  174:    }
        -:  175:  }
        1:  176:  transparent_crc(g_45, "g_45", print_hash_value);
        4:  177:  for (i = 0; i < 3; i++) {
        6:  178:    for (j = 0; j < 1; j++) {
        3:  179:      transparent_crc(g_47[i][j], "g_47[i][j]", print_hash_value);
        3:  180:      if (print_hash_value)
    #####:  181:        printf("index = [%d][%d]\n", i, j);
        -:  182:    }
        -:  183:  }
        1:  184:  transparent_crc(g_85, "g_85", print_hash_value);
        1:  185:  transparent_crc(g_106.f0, "g_106.f0", print_hash_value);
        6:  186:  for (i = 0; i < 5; i++) {
        5:  187:    transparent_crc(g_112[i], "g_112[i]", print_hash_value);
        5:  188:    if (print_hash_value)
    #####:  189:      printf("index = [%d]\n", i);
        -:  190:  }
        1:  191:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  192:  return 0;
        -:  193:}

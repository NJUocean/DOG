        -:    0:Source:480.c
        -:    0:Graph:480.gcno
        -:    0:Data:480.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:union U3 {
        -:    7:  int64_t f0;
        -:    8:};
        -:    9:
        -:   10:static volatile uint8_t g_8[5][2][3] = {{{0x1AL, 0x1AL, 0x1AL}, {1UL, 0UL, 1UL}}, {{0x1AL, 0x1AL, 0x1AL}, {1UL, 0UL, 1UL}}, {{0x1AL, 0x1AL, 0x1AL}, {1UL, 0UL, 1UL}}, {{0x1AL, 0x1AL, 0x1AL}, {1UL, 0UL, 1UL}}, {{0x1AL, 0x1AL, 0x1AL}, {1UL, 0UL, 1UL}}};
        -:   11:static const uint64_t g_9 = 18446744073709551615UL;
        -:   12:static uint64_t g_15[1] = {0UL};
        -:   13:static uint8_t g_21 = 3UL;
        -:   14:static int32_t g_29[2] = {0xB7758B39L, 0xB7758B39L};
        -:   15:static volatile int32_t g_34 = 0L;
        -:   16:static volatile int32_t *g_33 = &g_34;
        -:   17:
        -:   18:static int16_t func_1(void);
        -:   19:static uint64_t func_2(int8_t p_3, uint32_t p_4, int16_t p_5, int32_t p_6, int64_t p_7);
        -:   20:
        1:   21:static int16_t func_1(void) {
        1:   22:  uint64_t *l_14 = &g_15[0];
        1:   23:  union U3 l_19 = {1L};
        1:   24:  uint8_t *l_20 = &g_21;
        -:   25:  int32_t *l_28[5];
        1:   26:  uint32_t l_35 = 0xABA9A984L;
        1:   27:  uint8_t l_42[3][5][4] = {{{0x6EL, 0xA4L, 0x6EL, 253UL}, {0x16L, 0xA4L, 0x56L, 0xA4L}, {0x16L, 253UL, 0x6EL, 0xA4L}, {0x6EL, 253UL, 0x56L, 0xE8L}, {0x6EL, 253UL, 0x16L, 253UL}}, {{0x6EL, 0xE8L, 0x56L, 253UL}, {0x56L, 253UL, 0x56L, 0xE8L}, {0x6EL, 253UL, 0x16L, 253UL}, {0x6EL, 0xE8L, 0x56L, 253UL}, {0x56L, 253UL, 0x56L, 0xE8L}}, {{0x6EL, 253UL, 0x16L, 253UL}, {0x6EL, 0xE8L, 0x56L, 253UL}, {0x56L, 253UL, 0x56L, 0xE8L}, {0x6EL, 253UL, 0x16L, 253UL}, {0x6EL, 0xE8L, 0x56L, 253UL}}};
        -:   28:  int i, j, k;
        6:   29:  for (i = 0; i < 5; i++)
        5:   30:    l_28[i] = &g_29[1];
        1:   31:  (*g_33) = (func_2(((g_8[3][1][0] >= g_9), ((safe_add_func_uint8_t_u_u(((safe_rshift_func_uint64_t_u_s(((*l_14) = g_8[1][1][0]), 49)) | ((((void *)0 == l_14) > (+g_9)), (safe_mul_func_uint8_t_u_u((l_19, (--(*l_20))), (safe_lshift_func_uint8_t_u_u((safe_div_func_int32_t_s_s((g_29[1] = g_9), (safe_rshift_func_uint16_t_u_s((safe_unary_minus_func_uint16_t_u((g_33 == g_33))), 1)))), g_9)))))), g_9)) == g_9)), l_35, g_9, g_9, g_9), l_42[2][3][3]);
        1:   32:  return g_8[0][1][2];
        -:   33:}
        -:   34:
        1:   35:static uint64_t func_2(int8_t p_3, uint32_t p_4, int16_t p_5, int32_t p_6, int64_t p_7) {
        1:   36:  int32_t l_38 = (-1L);
       1*:   37:  (*g_33) ^= ((safe_div_func_int16_t_s_s(((l_38, (safe_rshift_func_uint64_t_u_u((l_38 || (p_7 <= p_4)), p_3))) & 0x83L), (~0UL))) != 6L);
        1:   38:  return p_4;
        -:   39:}
        -:   40:
        1:   41:int main(int argc, char *argv[]) {
        -:   42:  int i, j, k;
        1:   43:  int print_hash_value = 0;
       1*:   44:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:   45:    print_hash_value = 1;
        1:   46:  platform_main_begin();
        1:   47:  crc32_gentab();
        1:   48:  func_1();
        6:   49:  for (i = 0; i < 5; i++) {
       15:   50:    for (j = 0; j < 2; j++) {
       40:   51:      for (k = 0; k < 3; k++) {
       30:   52:        transparent_crc(g_8[i][j][k], "g_8[i][j][k]", print_hash_value);
       30:   53:        if (print_hash_value)
    #####:   54:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:   55:      }
        -:   56:    }
        -:   57:  }
        1:   58:  transparent_crc(g_9, "g_9", print_hash_value);
        2:   59:  for (i = 0; i < 1; i++) {
        1:   60:    transparent_crc(g_15[i], "g_15[i]", print_hash_value);
        1:   61:    if (print_hash_value)
    #####:   62:      printf("index = [%d]\n", i);
        -:   63:  }
        1:   64:  transparent_crc(g_21, "g_21", print_hash_value);
        3:   65:  for (i = 0; i < 2; i++) {
        2:   66:    transparent_crc(g_29[i], "g_29[i]", print_hash_value);
        2:   67:    if (print_hash_value)
    #####:   68:      printf("index = [%d]\n", i);
        -:   69:  }
        1:   70:  transparent_crc(g_34, "g_34", print_hash_value);
        1:   71:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:   72:  return 0;
        -:   73:}

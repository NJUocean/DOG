        -:    0:Source:292.c
        -:    0:Graph:292.gcno
        -:    0:Data:292.gcda
        -:    0:Runs:1
        -:    1:// Options:   --concise --max-struct-fields 5 --max-funcs 2 --max-array-len-per-dim 5 --max-block-depth 3 --max-block-size 2
        -:    2:#include "csmith.h"
        -:    3:
        -:    4:static long __undefined;
        -:    5:
        -:    6:#pragma pack(push)
        -:    7:#pragma pack(1)
        -:    8:struct S1 {
        -:    9:  const signed f0 : 28;
        -:   10:  int32_t f1;
        -:   11:  volatile int32_t f2;
        -:   12:  int32_t f3;
        -:   13:  volatile int64_t f4;
        -:   14:};
        -:   15:#pragma pack(pop)
        -:   16:
        -:   17:struct S0 {
        -:   18:  int64_t f0;
        -:   19:  int16_t f1;
        -:   20:  uint16_t f2;
        -:   21:  uint32_t f3;
        -:   22:};
        -:   23:
        -:   24:struct S2 {
        -:   25:  uint16_t f0;
        -:   26:  int16_t f1;
        -:   27:  signed f2 : 17;
        -:   28:  const struct S0 f3;
        -:   29:};
        -:   30:
        -:   31:union U3 {
        -:   32:  uint32_t f0;
        -:   33:};
        -:   34:
        -:   35:static volatile uint32_t g_2 = 0x1DF82D83L;
        -:   36:static volatile int64_t g_4 = 0xD4E703026D8D3833LL;
        -:   37:static int64_t g_7[5][4][5] = {{{(-7L), 0L, 0L, 0xFB9A31C0A9C5A74DLL, 9L}, {0xE6FC2E607D19FA55LL, 0xFC2F92E6C0B333EELL, 0xB4B26D8F9C328129LL, 0x2349124C6E12CDFDLL, 0xCEF339200279E56ELL}, {0xC6EA3D88101AEDF4LL, 0xFB9A31C0A9C5A74DLL, 0xEABA4A2C6EB81F94LL, 5L, 0x4593F6A08376FBFCLL}, {0xCEF339200279E56ELL, 0xE6FC2E607D19FA55LL, 1L, 0xF28A996121589AFCLL, 0x9752EE8B7203FCA5LL}},
        -:   38:                               {{5L, 0xFFD020461302D9CALL, 1L, 0x70C387C7A5019003LL, (-5L)}, {0xA22DB785B6478C38LL, 4L, 1L, 0L, (-2L)}, {0x70C387C7A5019003LL, 0xB4B26D8F9C328129LL, 1L, 1L, 0xB4B26D8F9C328129LL}, {0x3876A47CDEDFC3E8LL, 0x70C387C7A5019003LL, 0xEABA4A2C6EB81F94LL, 0xC6EA3D88101AEDF4LL, 0xF9F41ADF890BA5FCLL}},
        -:   39:                               {{0xFC2F92E6C0B333EELL, 0x01EAE883781CDFFALL, 0xB4B26D8F9C328129LL, 0x4593F6A08376FBFCLL, 1L}, {0x125DBF60700C0D35LL, 0xEABA4A2C6EB81F94LL, 0xEF068CD5467356A0LL, 0x125DBF60700C0D35LL, 0x9752EE8B7203FCA5LL}, {0xFB9A31C0A9C5A74DLL, 0x70C387C7A5019003LL, 1L, 9L, 0xB5A40A7B48FE2D58LL}, {0x23B26D5D64F68993LL, 0xFFD020461302D9CALL, 0xEC93CC254292978DLL, 0x01EAE883781CDFFALL, 0xF9F41ADF890BA5FCLL}},
        -:   40:                               {{(-2L), 6L, 0xF9F41ADF890BA5FCLL, 0xEC93CC254292978DLL, 5L}, {6L, 1L, 1L, 0xEC93CC254292978DLL, 0x70C387C7A5019003LL}, {9L, (-5L), 0xCEF339200279E56ELL, 0x01EAE883781CDFFALL, 0xCEF339200279E56ELL}, {0x8629342BB1E5DE2CLL, 0x8629342BB1E5DE2CLL, 0xF7CC73EE49CE5708LL, 9L, 0xEABA4A2C6EB81F94LL}},
        -:   41:                               {{1L, 0xF9F41ADF890BA5FCLL, 0xFFD020461302D9CALL, 0x125DBF60700C0D35LL, 0x23B26D5D64F68993LL}, {(-4L), 0xFC2F92E6C0B333EELL, 1L, 0xC6EA3D88101AEDF4LL, 5L}, {0x70C387C7A5019003LL, 0xF9F41ADF890BA5FCLL, 0x8629342BB1E5DE2CLL, 1L, 0x125DBF60700C0D35LL}, {0x2349124C6E12CDFDLL, 0x8629342BB1E5DE2CLL, (-4L), 0xB4B26D8F9C328129LL, 0xFFD020461302D9CALL}}};
        -:   42:static int32_t g_17 = (-1L);
        -:   43:static int32_t *g_18 = &g_17;
        -:   44:static int32_t g_19 = 0xFE1A273DL;
        -:   45:static int32_t g_20[1][3] = {{(-6L), (-6L), (-6L)}};
        -:   46:static uint32_t g_22[3] = {0x40D8EB8AL, 0x40D8EB8AL, 0x40D8EB8AL};
        -:   47:static int8_t g_52 = 2L;
        -:   48:static uint8_t g_55[1][1] = {{255UL}};
        -:   49:static uint32_t *g_62 = &g_22[0];
        -:   50:static const struct S1 g_68 = {12312, 0xA1598D83L, 1L, 0L, 1L};
        -:   51:static int16_t g_77 = 1L;
        -:   52:static union U3 g_122 = {1UL};
        -:   53:static struct S2 g_123 = {0xB04AL, 0L, 209, {-1L, -7L, 65535UL, 0x55342C4FL}};
        -:   54:static uint32_t g_124[1][2][1] = {{{1UL}, {1UL}}};
        -:   55:static struct S1 g_129 = {7057, 0x0BBE9119L, -1L, -1L, 0x262B8E9E02A2B83ALL};
        -:   56:
        -:   57:static struct S1 func_1(void);
        -:   58:static int64_t func_10(int64_t *p_11);
        -:   59:
        1:   60:static struct S1 func_1(void) {
        1:   61:  int64_t l_5 = 1L;
        1:   62:  int32_t l_27 = 0x8B872472L;
        1:   63:  const uint32_t *l_63 = &g_22[2];
        1:   64:  int32_t l_79 = (-5L);
        1:   65:  int32_t l_95 = 0L;
        1:   66:  int32_t l_97 = 0x39DC62CBL;
        1:   67:  int32_t l_100 = 0xD013F083L;
        1:   68:  int32_t l_101[3][5][3] = {{{0x4804F9BFL, 0xF6D5B129L, 1L}, {0xF6D5B129L, 0x4804F9BFL, 0x4804F9BFL}, {1L, 0x4804F9BFL, 0x1E146C4CL}, {0x03C77F6BL, 0xF6D5B129L, 0x57AF5BD1L}, {1L, 1L, 0x57AF5BD1L}}, {{0xF6D5B129L, 0x03C77F6BL, 0x1E146C4CL}, {0x4804F9BFL, 1L, 0x4804F9BFL}, {0x4804F9BFL, 0xF6D5B129L, 1L}, {0xF6D5B129L, 0x4804F9BFL, 0x4804F9BFL}, {1L, 0x4804F9BFL, 0x1E146C4CL}}, {{0x03C77F6BL, 0xF6D5B129L, 0x57AF5BD1L}, {1L, 1L, 0x57AF5BD1L}, {0xF6D5B129L, 0x03C77F6BL, 0x1E146C4CL}, {0x4804F9BFL, 1L, 0x4804F9BFL}, {0x4804F9BFL, 0xF6D5B129L, 1L}}};
        1:   69:  union U3 l_120 = {0xFB63F38EL};
        -:   70:  int i, j, k;
        1:   71:  if (g_2) {
        1:   72:    int32_t *l_3 = (void *)0;
        1:   73:    int64_t *l_6 = &g_7[3][1][4];
        1:   74:    int64_t *l_12 = &l_5;
        1:   75:    g_4 = 0L;
        1:   76:    if ((((*l_6) &= l_5) >= g_4)) {
        1:   77:      uint32_t *l_21[5][5] = {{&g_22[0], &g_22[0], (void *)0, &g_22[0], &g_22[0]}, {&g_22[0], &g_22[1], &g_22[0], &g_22[0], &g_22[1]}, {&g_22[0], &g_22[0], &g_22[0], &g_22[0], &g_22[0]}, {&g_22[1], &g_22[1], &g_22[0], &g_22[1], &g_22[1]}, {&g_22[0], &g_22[0], &g_22[0], &g_22[0], &g_22[0]}};
        1:   78:      int32_t l_23[4][5] = {{1L, 1L, (-1L), 0L, (-1L)}, {1L, 1L, (-1L), 0L, (-1L)}, {1L, 1L, (-1L), 0L, (-1L)}, {1L, 1L, (-1L), 0L, (-1L)}};
        1:   79:      uint8_t l_24 = 0x15L;
        -:   80:      int i, j;
        1:   81:      l_27 ^= ((func_10(l_12) != (&g_17 != ((--l_24), (void *)0))) < 0xF52837B7L);
        -:   82:    } else {
    #####:   83:      int32_t *const l_28 = &g_17;
        -:   84:      int32_t *l_29[3];
        -:   85:      uint8_t l_30[2];
        -:   86:      int i;
    #####:   87:      for (i = 0; i < 3; i++)
    #####:   88:        l_29[i] = (void *)0;
    #####:   89:      for (i = 0; i < 2; i++)
    #####:   90:        l_30[i] = 1UL;
    #####:   91:      for (l_5 = 0; (l_5 >= 0); l_5 -= 1) {
    #####:   92:        g_18 = l_28;
        -:   93:      }
    #####:   94:      --l_30[1];
        -:   95:    }
        -:   96:  } else {
    #####:   97:    int32_t **l_33 = &g_18;
    #####:   98:    const uint16_t l_47 = 0xE20FL;
    #####:   99:    int32_t l_94 = (-1L);
    #####:  100:    int32_t l_98[5][3] = {{0x0E8D41E4L, 0x50BAFF8CL, 0xF5FFFD36L}, {0x2B020459L, 1L, (-9L)}, {0x0E8D41E4L, 0x0E8D41E4L, (-9L)}, {1L, 0x2B020459L, 0xF5FFFD36L}, {0x50BAFF8CL, 0x0E8D41E4L, 0x50BAFF8CL}};
        -:  101:    int i, j;
    #####:  102:    (*l_33) = &g_19;
    #####:  103:    if ((*g_18)) {
    #####:  104:      struct S2 l_44 = {1UL, -2L, 73, {0x7E6801B04C643A56LL, 0x2BEDL, 5UL, 0x6A5050E7L}};
        -:  105:      int8_t *l_51[1];
    #####:  106:      int32_t l_53 = 0xD1E93126L;
    #####:  107:      uint8_t *l_54 = &g_55[0][0];
    #####:  108:      int16_t *l_56 = (void *)0;
    #####:  109:      int16_t *l_57 = &l_44.f1;
        -:  110:      int i;
    #####:  111:      for (i = 0; i < 1; i++)
    #####:  112:        l_51[i] = &g_52;
    #####:  113:      (*g_18) = ((g_20[0][1] <= ((**l_33) && ((safe_add_func_uint64_t_u_u((safe_mod_func_int32_t_s_s(((((*l_57) = (safe_div_func_uint8_t_u_u(((*l_54) ^= (7UL != (((safe_add_func_int8_t_s_s(((l_44, g_20[0][2]) & (g_52 = (g_7[3][1][4] || (0x368F5644L || (l_47 == ((l_27 = (l_53 &= (+(safe_add_func_int32_t_s_s((g_22[0] >= 0L), 0x6A82D785L))))) && (**l_33))))))), 0x69L)) | 0x9381DCF01E3026CBLL) & g_20[0][1]))), g_2))) <= l_44.f3.f0) >= 65535UL), 0xF69F9328L)), 0x7606124FAE1B8E03LL)) > g_22[0]))) | l_5);
        -:  114:    } else {
    #####:  115:      uint32_t *l_61 = &g_22[0];
    #####:  116:      uint32_t *l_75 = &g_22[0];
    #####:  117:      uint32_t **l_74 = &l_75;
        -:  118:      int16_t *l_76[5];
    #####:  119:      int32_t *l_78 = &g_17;
    #####:  120:      int32_t l_96 = 1L;
        -:  121:      int32_t l_99[1];
        -:  122:      int i;
    #####:  123:      for (i = 0; i < 5; i++)
    #####:  124:        l_76[i] = &g_77;
    #####:  125:      for (i = 0; i < 1; i++)
    #####:  126:        l_99[i] = 0L;
    #####:  127:      if (((**l_33) = (((((g_4, (safe_sub_func_int32_t_s_s(((!((((g_62 = l_61) == l_63) >= (((safe_sub_func_int8_t_s_s(0xE6L, (safe_mul_func_int8_t_s_s((**l_33), (g_68, ((safe_lshift_func_int32_t_s_u(((*l_78) = (!((safe_mul_func_int16_t_s_s((((*l_74) = &g_22[0]) == (void *)0), (l_27 = l_27))) == (**l_33)))), 28)) == 0xA234E6C56EA18D89LL)))))), g_22[2]) ^ (**l_33))) ^ (*g_18))) == g_20[0][1]), l_79))) >= (*g_18)) >= (*g_18)) == 0xC7F2D8A91DCC1457LL) == (**l_33)))) {
    #####:  128:        (*l_78) = (safe_mul_func_int64_t_s_s(((safe_sub_func_uint64_t_u_u((*l_78), g_7[3][3][4])) && 0L), (safe_lshift_func_int16_t_s_u((safe_mul_func_uint8_t_u_u(0UL, (**l_33))), 4))));
        -:  129:      } else {
    #####:  130:        int32_t *l_88 = &g_19;
    #####:  131:        int32_t *l_89 = &g_17;
    #####:  132:        int32_t *l_90 = (void *)0;
    #####:  133:        int32_t *l_91 = &g_20[0][1];
    #####:  134:        int32_t *l_92 = &l_27;
        -:  135:        int32_t *l_93[3];
    #####:  136:        uint16_t l_102 = 0x89C1L;
    #####:  137:        union U3 *l_121 = (void *)0;
    #####:  138:        uint16_t *l_127 = &l_102;
    #####:  139:        int16_t l_128 = 0x6893L;
        -:  140:        int i;
    #####:  141:        for (i = 0; i < 3; i++)
    #####:  142:          l_93[i] = &g_20[0][1];
    #####:  143:        l_102++;
    #####:  144:        (*l_91) = (safe_div_func_uint32_t_u_u((((-6L) != (0xACL ^ (*l_88))) ^ (safe_add_func_int8_t_s_s(((((((+(safe_mod_func_int16_t_s_s((safe_add_func_int32_t_s_s((((g_4 & (((safe_mul_func_int64_t_s_s((((g_77 = ((safe_add_func_int16_t_s_s((safe_lshift_func_uint64_t_u_s(((g_122 = l_120), (g_123, (g_124[0][1][0] = l_79))), 56)), (safe_mul_func_uint16_t_u_u(0xED6AL, ((*l_127) = (*l_78)))))), 0xA32CL)), g_55[0][0]) && 0xD9F72E6D70E512B8LL), 0x6CF8E74D01EFD3BFLL)) >= 0xBFF233E6L), g_122.f0)) & 0L) ^ g_52), l_128)), 0xBBFEL))), g_123.f3.f0) != g_19) != g_52), g_68), (-9L)), 0x8CL))), (*g_18)));
        -:  145:      }
        -:  146:    }
        -:  147:  }
        1:  148:  return g_129;
        -:  149:}
        -:  150:
        1:  151:static int64_t func_10(int64_t *p_11) {
        1:  152:  int32_t *l_13 = (void *)0;
        1:  153:  int32_t **l_14 = &l_13;
        1:  154:  int32_t *l_16 = &g_17;
        1:  155:  int32_t **l_15[1][3][2] = {{{(void *)0, (void *)0}, {(void *)0, (void *)0}, {(void *)0, (void *)0}}};
        -:  156:  int i, j, k;
        1:  157:  g_18 = ((*l_14) = l_13);
        1:  158:  return g_7[3][1][4];
        -:  159:}
        -:  160:
        1:  161:int main(int argc, char *argv[]) {
        -:  162:  int i, j, k;
        1:  163:  int print_hash_value = 0;
       1*:  164:  if (argc == 2 && strcmp(argv[1], "1") == 0)
    #####:  165:    print_hash_value = 1;
        1:  166:  platform_main_begin();
        1:  167:  crc32_gentab();
        1:  168:  func_1();
        1:  169:  transparent_crc(g_2, "g_2", print_hash_value);
        1:  170:  transparent_crc(g_4, "g_4", print_hash_value);
        6:  171:  for (i = 0; i < 5; i++) {
       25:  172:    for (j = 0; j < 4; j++) {
      120:  173:      for (k = 0; k < 5; k++) {
      100:  174:        transparent_crc(g_7[i][j][k], "g_7[i][j][k]", print_hash_value);
      100:  175:        if (print_hash_value)
    #####:  176:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  177:      }
        -:  178:    }
        -:  179:  }
        1:  180:  transparent_crc(g_17, "g_17", print_hash_value);
        1:  181:  transparent_crc(g_19, "g_19", print_hash_value);
        2:  182:  for (i = 0; i < 1; i++) {
        4:  183:    for (j = 0; j < 3; j++) {
        3:  184:      transparent_crc(g_20[i][j], "g_20[i][j]", print_hash_value);
        3:  185:      if (print_hash_value)
    #####:  186:        printf("index = [%d][%d]\n", i, j);
        -:  187:    }
        -:  188:  }
        4:  189:  for (i = 0; i < 3; i++) {
        3:  190:    transparent_crc(g_22[i], "g_22[i]", print_hash_value);
        3:  191:    if (print_hash_value)
    #####:  192:      printf("index = [%d]\n", i);
        -:  193:  }
        1:  194:  transparent_crc(g_52, "g_52", print_hash_value);
        2:  195:  for (i = 0; i < 1; i++) {
        2:  196:    for (j = 0; j < 1; j++) {
        1:  197:      transparent_crc(g_55[i][j], "g_55[i][j]", print_hash_value);
        1:  198:      if (print_hash_value)
    #####:  199:        printf("index = [%d][%d]\n", i, j);
        -:  200:    }
        -:  201:  }
        1:  202:  transparent_crc(g_68.f0, "g_68.f0", print_hash_value);
        1:  203:  transparent_crc(g_68.f1, "g_68.f1", print_hash_value);
        1:  204:  transparent_crc(g_68.f2, "g_68.f2", print_hash_value);
        1:  205:  transparent_crc(g_68.f3, "g_68.f3", print_hash_value);
        1:  206:  transparent_crc(g_68.f4, "g_68.f4", print_hash_value);
        1:  207:  transparent_crc(g_77, "g_77", print_hash_value);
        1:  208:  transparent_crc(g_122.f0, "g_122.f0", print_hash_value);
        1:  209:  transparent_crc(g_123.f0, "g_123.f0", print_hash_value);
        1:  210:  transparent_crc(g_123.f1, "g_123.f1", print_hash_value);
        1:  211:  transparent_crc(g_123.f2, "g_123.f2", print_hash_value);
        1:  212:  transparent_crc(g_123.f3.f0, "g_123.f3.f0", print_hash_value);
        1:  213:  transparent_crc(g_123.f3.f1, "g_123.f3.f1", print_hash_value);
        1:  214:  transparent_crc(g_123.f3.f2, "g_123.f3.f2", print_hash_value);
        1:  215:  transparent_crc(g_123.f3.f3, "g_123.f3.f3", print_hash_value);
        2:  216:  for (i = 0; i < 1; i++) {
        3:  217:    for (j = 0; j < 2; j++) {
        4:  218:      for (k = 0; k < 1; k++) {
        2:  219:        transparent_crc(g_124[i][j][k], "g_124[i][j][k]", print_hash_value);
        2:  220:        if (print_hash_value)
    #####:  221:          printf("index = [%d][%d][%d]\n", i, j, k);
        -:  222:      }
        -:  223:    }
        -:  224:  }
        1:  225:  transparent_crc(g_129.f0, "g_129.f0", print_hash_value);
        1:  226:  transparent_crc(g_129.f1, "g_129.f1", print_hash_value);
        1:  227:  transparent_crc(g_129.f2, "g_129.f2", print_hash_value);
        1:  228:  transparent_crc(g_129.f3, "g_129.f3", print_hash_value);
        1:  229:  transparent_crc(g_129.f4, "g_129.f4", print_hash_value);
        1:  230:  platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  231:  return 0;
        -:  232:}

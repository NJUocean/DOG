        -:    0:Source:1182.c
        -:    0:Graph:1182.gcno
        -:    0:Data:1182.gcda
        -:    0:Runs:1
        -:    1:/* { dg-skip-if "requires alloca" { ! alloca } { "-O0" } { "" } } */
        -:    2:/* Verify that alloca storage is sufficiently aligned.  */
        -:    3:/* ??? May fail if BIGGEST_ALIGNMENT > STACK_BOUNDARY.  Which, I guess
        -:    4:   can only happen on !STRICT_ALIGNMENT targets.  */
        -:    5:
        -:    6:typedef __SIZE_TYPE__ size_t;
        -:    7:
        -:    8:struct dummy {
        -:    9:  int x __attribute__((aligned));
        -:   10:};
        -:   11:#define BIGGEST_ALIGNMENT __alignof__(struct dummy)
        -:   12:
        1:   13:_Bool foo(void) {
        1:   14:  char *p = __builtin_alloca(32);
        1:   15:  return ((size_t)p & (BIGGEST_ALIGNMENT - 1)) == 0;
        -:   16:}
        -:   17:
        1:   18:int main() {
        1:   19:  if (!foo())
    #####:   20:    abort();
        1:   21:  return 0;
        -:   22:}

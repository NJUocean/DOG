    1|       |/* { dg-additional-options "-fdump-tree-gimple" } */
    2|       |/* double reductions.  */
    3|       |
    4|  6.00k|#define n 1000
    5|       |
    6|      1|int main(void) {
    7|      1|  int i;
    8|      1|  double result, array[n];
    9|      1|  int lresult;
   10|      1|
   11|      1|  /* '+' reductions.  */
   12|      1|#pragma acc parallel
   13|      1|#pragma acc loop gang worker vector reduction(+ : result)
   14|  1.00k|  for (i = 0; i < n; i++)
   15|  1.00k|    result += array[i];
   16|      1|
   17|      1|    /* '*' reductions.  */
   18|      1|#pragma acc parallel
   19|      1|#pragma acc loop gang worker vector reduction(* : result)
   20|  1.00k|  for (i = 0; i < n; i++)
   21|  1.00k|    result *= array[i];
   22|      1|
   23|      1|    /* 'max' reductions.  */
   24|      1|#pragma acc parallel
   25|      1|#pragma acc loop gang worker vector reduction(max : result)
   26|  1.00k|  for (i = 0; i < n; i++)
   27|  1.00k|    result = result > array[i] ? result : array[i];
   28|      1|
   29|      1|    /* 'min' reductions.  */
   30|      1|#pragma acc parallel
   31|      1|#pragma acc loop gang worker vector reduction(min : result)
   32|  1.00k|  for (i = 0; i < n; i++)
   33|  1.00k|    result = result < array[i] ? result : array[i];
   34|      1|
   35|      1|    /* '&&' reductions.  */
   36|      1|#pragma acc parallel
   37|      1|#pragma acc loop gang worker vector reduction(&& : lresult)
   38|  1.00k|  for (i = 0; i < n; i++)
   39|  1.00k|    lresult = lresult && (result > array[i]);
   40|      1|
   41|      1|    /* '||' reductions.  */
   42|      1|#pragma acc parallel
   43|      1|#pragma acc loop gang worker vector reduction(|| : lresult)
   44|  1.00k|  for (i = 0; i < n; i++)
   45|  1.00k|    lresult = lresult || (result > array[i]);
   46|      1|
   47|      1|  return 0;
   48|      1|}
   49|       |
   50|       |/* Check that default copy maps are generated for loop reductions.  */
   51|       |/* { dg-final { scan-tree-dump-times "map\\(tofrom:result \\\[len:
   52|       | * \[0-9\]+\\\]\\)" 4 "gimple" } } */
   53|       |/* { dg-final { scan-tree-dump-times "map\\(tofrom:lresult \\\[len:
   54|       | * \[0-9\]+\\\]\\)" 2 "gimple" } } */


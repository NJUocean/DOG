        -:    0:Source:1021.c
        -:    0:Graph:1021.gcno
        -:    0:Data:1021.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-shouldfail "asan" } */
        -:    3:
        -:    4:#include <assert.h>
        -:    5:
        -:    6:volatile int ten = 10;
        -:    7:
        1:    8:__attribute__((noinline)) void foo(int index, int len) {
        1:    9:  volatile char str[len] __attribute__((aligned(128)));
        -:   10:  assert(!((long)str & 127L));
        1:   11:  str[index] = '1'; // BOOM
        1:   12:}
        -:   13:
        1:   14:int main() {
        1:   15:  foo(ten, ten);
        1:   16:  return 0;
        -:   17:}
        -:   18:
        -:   19:/* { dg-output "WRITE of size 1 at 0x\[0-9a-f\]+ thread T0\[^\n\r]*(\n|\r\n|\r)"
        -:   20: * } */
        -:   21:/* { dg-output "    #0 0x\[0-9a-f\]+ +(in
        -:   22: * _*foo(\[^\n\r]*alloca_big_alignment.c:11|\[^\n\r]*:0|\[^\n\r]*\\+0x\[0-9a-z\]*)|\[(\])\[^\n\r\]*(\n|\r\n|\r)"
        -:   23: * } */
        -:   24:/* { dg-output "\[^\n\r]*Address 0x\[0-9a-f\]+ is located in stack of thread
        -:   25: * T0.*(\n|\r\n|\r)" */
        -:   26:/* { dg-output "\[^\n\r]*in foo.*alloca_big_alignment.c.*(\n|\r\n|\r)" */

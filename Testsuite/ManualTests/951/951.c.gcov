        -:    0:Source:951.c
        -:    0:Graph:951.gcno
        -:    0:Data:951.gcda
        -:    0:Runs:1
        -:    1:
        -:    2:typedef __SIZE_TYPE__ Size_t;
        -:    3:
        -:    4:#if __SIZEOF_LONG__ < __SIZEOF_POINTER__
        -:    5:#define bufsize ((1LL << (8 * sizeof(Size_t) - 2)) - 256)
        -:    6:#else
        -:    7:#define bufsize ((1L << (8 * sizeof(Size_t) - 2)) - 256)
        -:    8:#endif
        -:    9:
        -:   10:struct huge_struct {
        -:   11:  short buf[bufsize];
        -:   12:  int a;
        -:   13:  int b;
        -:   14:  int c;
        -:   15:  int d;
        -:   16:};
        -:   17:
        -:   18:union huge_union {
        -:   19:  int a;
        -:   20:  char buf[bufsize];
        -:   21:};
        -:   22:
        1:   23:Size_t union_size() { return sizeof(union huge_union); }
        -:   24:
        1:   25:Size_t struct_size() { return sizeof(struct huge_struct); }
        -:   26:
        1:   27:Size_t struct_a_offset() { return (Size_t)(&((struct huge_struct *)0)->a); }
        -:   28:
        1:   29:int main() {
        -:   30:  /* Check the exact sizeof value. bufsize is aligned on 256b. */
        1:   31:  if (union_size() != sizeof(char) * bufsize)
    #####:   32:    abort();
        -:   33:
        1:   34:  if (struct_size() != sizeof(short) * bufsize + 4 * sizeof(int))
    #####:   35:    abort();
        -:   36:
        1:   37:  if (struct_a_offset() < sizeof(short) * bufsize)
    #####:   38:    abort();
        -:   39:
        1:   40:  return 0;
        -:   41:}

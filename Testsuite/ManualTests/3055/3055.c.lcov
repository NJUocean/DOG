    1|       |/* Bug in reorg.c, deleting the "++" in the last loop in main.
    2|       |   Origin: <hp@axis.com>.  */
    3|       |
    4|       |extern void f(void);
    5|       |extern int x(int, char **);
    6|       |extern int r(const char *);
    7|       |extern char *s(char *, char **);
    8|       |extern char *m(char *);
    9|       |char *u;
   10|       |char *h;
   11|       |int check = 0;
   12|       |int o = 0;
   13|       |
   14|      1|int main(int argc, char **argv) {
   15|      1|  char *args[] = {"a", "b", "c", "d", "e"};
   16|      1|  if (x(5, args) != 0 || check != 2 || o != 5)
   17|      0|    abort();
   18|      1|  exit(0);
   19|      1|}
   20|       |
   21|      1|int x(int argc, char **argv) {
   22|      1|  int opt = 0;
   23|      1|  char *g = 0;
   24|      1|  char *p = 0;
   25|      1|
   26|      1|  if (argc > o && argc > 2 && argv[o]) {
   27|      1|    g = s(argv[o], &p);
   28|      1|    if (g) {
   29|      0|      *g++ = '\0';
   30|      0|      h = s(g, &p);
   31|      0|      if (g == p)
   32|      0|        h = m(g);
   33|      0|    }
   34|      1|    u = s(argv[o], &p);
   35|      1|    if (argv[o] == p)
   36|      0|      u = m(argv[o]);
   37|      1|  } else
   38|      0|    abort();
   39|      1|
   40|      5|  while (++o < argc)
   41|      4|    if (r(argv[o]) == 0)
   42|      0|      return 1;
   43|      1|
   44|      1|  return 0;
   45|      1|}
   46|       |
   47|      0|char *m(char *x) { abort(); }
   48|      2|char *s(char *v, char **pp) {
   49|      2|  if (strcmp(v, "a") != 0 || check++ > 1)
   50|      0|    abort();
   51|      2|  *pp = v + 1;
   52|      2|  return 0;
   53|      2|}
   54|       |
   55|      4|int r(const char *f) {
   56|      4|  static char c[2] = "b";
   57|      4|  static int cnt = 0;
   58|      4|
   59|      4|  if (*f != *c || f[1] != c[1] || cnt > 3)
   60|      0|    abort();
   61|      4|  c[0]++;
   62|      4|  cnt++;
   63|      4|  return 1;
   64|      4|}


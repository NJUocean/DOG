        -:    0:Source:444.c
        -:    0:Graph:444.gcno
        -:    0:Data:444.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-require-effective-target size32plus } */
        -:    3:/* { dg-require-effective-target int32plus } */
        -:    4:/* { dg-options "-O2 -floop-nest-optimize -ffast-math -fno-ipa-cp" } */
        -:    5:
        -:    6:#define DEBUG 0
        -:    7:#if DEBUG
        -:    8:#include <stdio.h>
        -:    9:#endif
        -:   10:
        -:   11:double u[1782225];
        -:   12:
        1:   13:static int __attribute__((noinline)) foo(int N, int *res) {
        -:   14:  int i, j;
        1:   15:  double sum = 0;
     1336:   16:  for (i = 0; i < N; i++)
  1783560:   17:    for (j = 0; j < N; j++)
  1782225:   18:      sum = sum + u[i + 1335 * j];
        -:   19:
     1336:   20:  for (i = 0; i < N; i++)
     1335:   21:    u[1336 * i] *= 2;
        -:   22:
        1:   23:  *res = sum + N + u[1336 * 2] + u[1336];
        1:   24:}
        -:   25:
        -:   26:extern void abort();
        -:   27:
        1:   28:int main(void) {
        -:   29:  int i, j, res;
        -:   30:
  1782226:   31:  for (i = 0; i < 1782225; i++)
  1782225:   32:    u[i] = 2;
        -:   33:
        1:   34:  foo(1335, &res);
        -:   35:
        -:   36:#if DEBUG
        -:   37:  fprintf(stderr, "res = %d \n", res);
        -:   38:#endif
        -:   39:
        1:   40:  if (res != 3565793)
    #####:   41:    abort();
        -:   42:
        1:   43:  return 0;
        -:   44:}

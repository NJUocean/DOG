    1|       |/* { dg-do run { target { powerpc*-*-linux* && { lp64 && p9vector_hw } } } } */
    2|       |/* { dg-require-effective-target powerpc_p9vector_ok } */
    3|       |/* { dg-options "-O3 -mdejagnu-cpu=power9" } */
    4|       |
    5|       |/* Verify that we get correct code when we vectorize this SAD loop using
    6|       |   vabsduh. */
    7|       |
    8|       |extern void abort();
    9|       |extern int abs(int __x) __attribute__((__nothrow__, __leaf__))
   10|       |__attribute__((__const__));
   11|       |
   12|      1|static int foo(unsigned short *w, int i, unsigned short *x, int j) {
   13|      1|  int tot = 0;
   14|     17|  for (int a = 0; a < 16; a++) {
   15|    144|    for (int b = 0; b < 8; b++)
   16|    128|      tot += abs(w[b] - x[b]);
   17|     16|    w += i;
   18|     16|    x += j;
   19|     16|  }
   20|      1|  return tot;
   21|      1|}
   22|       |
   23|      1|void bar(unsigned short *w, unsigned short *x, int i, int *result) {
   24|      1|  *result = foo(w, 8, x, i);
   25|      1|}
   26|       |
   27|      1|int main() {
   28|      1|  unsigned short m[128];
   29|      1|  unsigned short n[128];
   30|      1|  int sum, i;
   31|      1|
   32|    129|  for (i = 0; i < 128; ++i)
   33|    128|    if (i % 2 == 0) {
   34|     64|      m[i] = (i % 8) * 2 + 1;
   35|     64|      n[i] = i % 8;
   36|     64|    } else {
   37|     64|      m[i] = (i % 8) * 4 - 3;
   38|     64|      n[i] = (i % 8) >> 1;
   39|     64|    }
   40|      1|
   41|      1|  bar(m, n, 8, &sum);
   42|      1|
   43|      1|  if (sum != 992)
   44|      0|    abort();
   45|      1|
   46|      1|  return 0;
   47|      1|}


    1|       |/* { dg-do run } */
    2|       |/* { dg-options "-g" } */
    3|       |
    4|      2|void __attribute__((noinline)) optimize_me_not() {
    5|      2|  __asm__ volatile("" : : : "memory");
    6|      2|}
    7|       |volatile long a;
    8|       |int b[9][1];
    9|       |static short c[2][1] = {3};
   10|      1|int main() {
   11|      1|  int i, d, e;
   12|      1|  i = 0;
   13|     10|  for (; i < 9; i++)
   14|      9|    a = b[i][0];
   15|      1|  i = 0;
   16|      3|  for (; i < 2; i++) {
   17|      2|    d = 0;
   18|      4|    for (; d < 1; d++) {
   19|      2|      e = 0;
   20|      4|      for (; e < 1; e++)
   21|      2|        a = c[i][e];
   22|      2|      /* i may very well be optimized out, so we cannot test for i == 0.
   23|      2|         Instead test i + 1 which will make the test UNSUPPORTED if i
   24|      2|         is optimized out.  Since the test previously had wrong debug
   25|      2|         with i == 9 this is acceptable.  */
   26|      2|      optimize_me_not(); /* { dg-final { gdb-test . "i + 1" "1" } } */
   27|      2|    }
   28|      2|  }
   29|      1|  return 0;
   30|      1|}


        -:    0:Source:4075.c
        -:    0:Graph:4075.gcno
        -:    0:Data:4075.gcda
        -:    0:Runs:1
        -:    1:/* Test saving and restoring of SIMD registers.  */
        -:    2:
        -:    3:typedef short Q __attribute__((vector_size(8)));
        -:    4:
        -:    5:Q q1 = {1, 2}, q2 = {3, 4}, q3 = {5, 6}, q4 = {7, 8};
        -:    6:
        -:    7:Q w1, w2, w3, w4;
        -:    8:Q z1, z2, z3, z4;
        -:    9:
        -:   10:volatile int dummy;
        -:   11:
        1:   12:void __attribute__((__noinline__)) func0(void) { dummy = 1; }
        -:   13:
        1:   14:void __attribute__((__noinline__)) func1(void) {
        -:   15:  Q a, b;
        1:   16:  a = q1 * q2;
        1:   17:  b = q3 * q4;
        1:   18:  w1 = a;
        1:   19:  w2 = b;
        1:   20:  func0();
        1:   21:  w3 = a;
        1:   22:  w4 = b;
        1:   23:}
        -:   24:
        1:   25:void __attribute__((__noinline__)) func2(void) {
        -:   26:  Q a, b;
        1:   27:  a = q1 + q2;
        1:   28:  b = q3 - q4;
        1:   29:  z1 = a;
        1:   30:  z2 = b;
        1:   31:  func1();
        1:   32:  z3 = a;
        1:   33:  z4 = b;
        1:   34:}
        -:   35:
        1:   36:int main(void) {
        1:   37:  func2();
        -:   38:
        1:   39:  if (memcmp(&w1, &w3, sizeof(Q)) != 0)
    #####:   40:    abort();
        1:   41:  if (memcmp(&w2, &w4, sizeof(Q)) != 0)
    #####:   42:    abort();
        1:   43:  if (memcmp(&z1, &z3, sizeof(Q)) != 0)
    #####:   44:    abort();
        1:   45:  if (memcmp(&z2, &z4, sizeof(Q)) != 0)
    #####:   46:    abort();
        -:   47:
        1:   48:  return 0;
        -:   49:}

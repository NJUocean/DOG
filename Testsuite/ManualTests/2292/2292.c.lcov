    1|       |/* { dg-do run } */
    2|       |/* { dg-options "-fno-builtin-memset" } */
    3|       |/* { dg-shouldfail "asan" } */
    4|       |
    5|       |extern
    6|       |#ifdef __cplusplus
    7|       |    "C"
    8|       |#endif
    9|       |    void *
   10|       |    memset(void *, int, __SIZE_TYPE__);
   11|       |
   12|       |volatile int ten = 10;
   13|       |
   14|      1|int main() {
   15|      1|  char x[10];
   16|      1|  memset(x, 0, 10);
   17|      1|  int res = x[ten]; /* BOOOM */
   18|      1|  return res;
   19|      1|}
   20|       |
   21|       |/* { dg-output "READ of size 1 at 0x\[0-9a-f\]+ thread T0\[^\n\r]*(\n|\r\n|\r)"
   22|       | * } */
   23|       |/* { dg-output "    #0 0x\[0-9a-f\]+ +(in _*main
   24|       | * (\[^\n\r]*stack-overflow-1.c:16|\[^\n\r]*:0|\[^\n\r]*\\+0x\[0-9a-z\]*)|\[(\]).*(\n|\r\n|\r)"
   25|       | * } */
   26|       |/* { dg-output "\[^\n\r]*Address 0x\[0-9a-f\]+ is located in stack of thread
   27|       | * T0.*(\n|\r\n|\r)" */
   28|       |/* { dg-output "\[^\n\r]*in main.*stack-overflow-1.c.*(\n|\r\n|\r)" */


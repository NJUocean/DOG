        -:    0:Source:2144.c
        -:    0:Graph:2144.gcno
        -:    0:Data:2144.gcda
        -:    0:Runs:1
        -:    1:/* PR middle-end/7847 */
        -:    2:/* Originator: <jk@tools.de> */
        -:    3:/* { dg-do run } */
        -:    4:
        -:    5:/* This used to fail on SPARC at runtime because of
        -:    6:   an unaligned memory access.  */
        -:    7:
        -:    8:typedef char int8_t;
        -:    9:typedef short int16_t;
        -:   10:typedef int int32_t;
        -:   11:typedef unsigned char uint8_t;
        -:   12:typedef unsigned short uint16_t;
        -:   13:typedef unsigned int uint32_t;
        -:   14:
        -:   15:typedef struct {
        -:   16:  uint32_t address;
        -:   17:  uint16_t size;
        -:   18:} __attribute__((packed)) sml_agl_data_t;
        -:   19:
        -:   20:typedef struct {
        -:   21:  sml_agl_data_t data[9];
        -:   22:} __attribute__((packed)) sml_agli_t;
        -:   23:
        -:   24:typedef struct {
        -:   25:  sml_agli_t sml_agli;
        -:   26:} __attribute__((packed)) dsi_t;
        -:   27:
        -:   28:typedef struct {
        -:   29:  int a;
        -:   30:  dsi_t dsi_pack;
        -:   31:} dvd_priv_t;
        -:   32:
        1:   33:int dvd_read_sector(dvd_priv_t *d, unsigned char *data) {
        1:   34:  int i, skip = 0;
        -:   35:
       10:   36:  for (i = 0; i < 9; i++)
        9:   37:    if ((skip = d->dsi_pack.sml_agli.data[i].address) != 0)
    #####:   38:      break;
        -:   39:
        1:   40:  return skip;
        -:   41:}
        -:   42:
        1:   43:int main(void) {
        -:   44:  static dvd_priv_t dvd_priv;
        1:   45:  dvd_read_sector(&dvd_priv, 0);
        1:   46:  return 0;
        -:   47:}

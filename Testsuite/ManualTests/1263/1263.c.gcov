        -:    0:Source:1263.c
        -:    0:Graph:1263.gcno
        -:    0:Data:1263.gcda
        -:    0:Runs:1
        -:    1:/* From PR rtl-optimization/19683.  On little-endian MIPS targets,
        -:    2:   reload would incorrectly inherit the high part of the multiplication
        -:    3:   result.  */
        -:    4:/* { dg-do run { target mips*-*-* } } */
        -:    5:
        -:    6:extern void abort(void);
        -:    7:extern void exit(int);
        -:    8:
        -:    9:#define REPEAT10(X, Y)                                                         \
        -:   10:  X(Y##0);                                                                     \
        -:   11:  X(Y##1);                                                                     \
        -:   12:  X(Y##2);                                                                     \
        -:   13:  X(Y##3);                                                                     \
        -:   14:  X(Y##4);                                                                     \
        -:   15:  X(Y##5);                                                                     \
        -:   16:  X(Y##6);                                                                     \
        -:   17:  X(Y##7);                                                                     \
        -:   18:  X(Y##8);                                                                     \
        -:   19:  X(Y##9)
        -:   20:
        -:   21:#define REPEAT30(X)                                                            \
        -:   22:  REPEAT10(X, 0);                                                              \
        -:   23:  REPEAT10(X, 1);                                                              \
        -:   24:  REPEAT10(X, 2)
        -:   25:#define IN(X) unsigned int x##X = ptr[0]
        -:   26:#define OUT(X) ptr[0] = x##X
        -:   27:
        -:   28:#if __mips_isa_rev <= 5
        -:   29:union u {
        -:   30:  unsigned long long ll;
        -:   31:  unsigned int i[2];
        -:   32:};
        -:   33:
        1:   34:unsigned int __attribute__((nomips16)) foo(volatile unsigned int *ptr) {
        -:   35:  union u u;
        -:   36:  int result;
        -:   37:
        1:   38:  u.ll = (unsigned long long)ptr[0] * ptr[0];
        1:   39:  REPEAT30(IN);
        1:   40:  REPEAT30(OUT);
        1:   41:  asm("#" : "=l"(result) : "l"(u.i[1]));
        1:   42:  return result;
        -:   43:}
        -:   44:#endif
        -:   45:
        1:   46:int __attribute__((nomips16)) main(void) {
        -:   47:#if __mips_isa_rev <= 5
        1:   48:  unsigned int array[] = {1000 * 1000 * 1000};
        -:   49:  union u u;
        -:   50:
        1:   51:  u.ll = (unsigned long long)array[0] * array[0];
        1:   52:  if (foo(array) != u.i[1])
    #####:   53:    abort();
        -:   54:#endif
        1:   55:  exit(0);
        -:   56:}

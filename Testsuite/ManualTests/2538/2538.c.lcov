    1|       |/* Copyright (C) 2000  Free Software Foundation.
    2|       |
    3|       |   by Manfred Hollstein <manfredh@redhat.com>  */
    4|       |
    5|       |void *temporary_obstack;
    6|       |
    7|       |static int input(void);
    8|       |static int ISALNUM(int ch);
    9|       |static void obstack_1grow(void **ptr, int ch);
   10|       |
   11|       |int yylex(void);
   12|       |int main(void);
   13|       |
   14|      1|int main(void) {
   15|      1|  int ch = yylex();
   16|      1|
   17|      1|  exit(0);
   18|      1|}
   19|       |
   20|      1|int yylex(void) {
   21|      1|  int ch;
   22|      1|
   23|      1|#ifndef WORK_AROUND
   24|      1|  for (;;) {
   25|      1|    ch = input();
   26|      1|    if (ISALNUM(ch))
   27|      0|      obstack_1grow(&temporary_obstack, ch);
   28|      1|    else if (ch != '_')
   29|      1|      break;
   30|      1|  }
   31|       |#else
   32|       |  do {
   33|       |    ch = input();
   34|       |    if (ISALNUM(ch))
   35|       |      obstack_1grow(&temporary_obstack, ch);
   36|       |  } while (ch == '_');
   37|       |#endif
   38|      1|
   39|      1|  return ch;
   40|      1|}
   41|       |
   42|      1|static int input(void) { return 0; }
   43|       |
   44|      1|static int ISALNUM(int ch) {
   45|      1|  return ((ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z') ||
   46|      1|          (ch >= '0' && ch <= '0'));
   47|      1|}
   48|       |
   49|      0|static void obstack_1grow(void **ptr, int ch) {}


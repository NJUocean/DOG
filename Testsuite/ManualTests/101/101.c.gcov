        -:    0:Source:101.c
        -:    0:Graph:101.gcno
        -:    0:Data:101.gcda
        -:    0:Runs:1
        -:    1:// { dg-do run }
        -:    2:// { dg-additional-options "-fdump-tree-gimple" }
        -:    3:
        1:    4:int main(int argc, char **argv) {
        1:    5:  int *ptr = 0;
        1:    6:  int *ptr2 = 0;
        1:    7:  int *ptr3 = 0;
        -:    8:
        3:    9:  for (unsigned i = 0; i < 2; i++) {
        -:   10:    switch (argc) {
        2:   11:    case 1111:;
        -:   12:      int a, b, c;
        -:   13:    default:
        2:   14:      ptr = &a;
        2:   15:      ptr2 = &b;
        2:   16:      ptr3 = &c;
        2:   17:      break;
        -:   18:    }
        -:   19:  }
        -:   20:
        1:   21:  return 0;
        -:   22:}
        -:   23:
        -:   24:/* { dg-final { scan-tree-dump-times "ASAN_MARK \\(UNPOISON, &a, \[0-9\]\\);" 2
        -:   25: * "gimple" } }  */
        -:   26:/* { dg-final { scan-tree-dump-times "ASAN_MARK \\(UNPOISON, &b, \[0-9\]\\);" 2
        -:   27: * "gimple" } }  */
        -:   28:/* { dg-final { scan-tree-dump-times "ASAN_MARK \\(UNPOISON, &c, \[0-9\]\\);" 2
        -:   29: * "gimple" } }  */
        -:   30:/* { dg-final { scan-tree-dump-times "ASAN_MARK \\(POISON, &a, \[0-9\]\\);" 1
        -:   31: * "gimple" } }  */
        -:   32:/* { dg-final { scan-tree-dump-times "ASAN_MARK \\(POISON, &b, \[0-9\]\\);" 1
        -:   33: * "gimple" } }  */
        -:   34:/* { dg-final { scan-tree-dump-times "ASAN_MARK \\(POISON, &c, \[0-9\]\\);" 1
        -:   35: * "gimple" } }  */

    1|       |/* { dg-do compile } */
    2|       |/* { dg-do run } */
    3|       |/* { dg-options "-O2 -funroll-loops --param max-unroll-times=8
    4|       | * -fpredictive-commoning -fdump-tree-pcom-details -fno-tree-pre" } */
    5|       |
    6|       |void abort(void);
    7|       |
    8|       |unsigned fib[1000];
    9|       |
   10|      1|__attribute__((noinline)) void count_fib(void) {
   11|      1|  int i;
   12|      1|
   13|      1|  fib[0] = 0;
   14|      1|  fib[1] = 1;
   15|    999|  for (i = 2; i < 1000; i++)
   16|    998|    fib[i] = (fib[i - 1] + fib[i - 2]) & 0xffff;
   17|      1|}
   18|       |
   19|       |unsigned avg[1000];
   20|       |
   21|      1|__attribute__((noinline)) void count_averages(int n) {
   22|      1|  int i;
   23|      1|
   24|    999|  for (i = 1; i < n; i++)
   25|    998|    avg[i] = (((unsigned long)fib[i - 1] + fib[i] + fib[i + 1]) / 3) & 0xffff;
   26|      1|}
   27|       |
   28|      1|int main(void) {
   29|      1|  count_fib();
   30|      1|  count_averages(999);
   31|      1|
   32|      1|  if (fib[19] != 4181 || avg[19] != 4510)
   33|      0|    abort();
   34|      1|
   35|      1|  if (fib[999] != 162 || avg[998] != 21953)
   36|      0|    abort();
   37|      1|
   38|      1|  return 0;
   39|      1|}
   40|       |
   41|       |/* Verify that both loops were transformed and unrolled.  */
   42|       |/* { dg-final { scan-tree-dump-times "Unrolling 2 times." 2 "pcom"} } */
   43|       |
   44|       |/* Also check that we undid the transformation previously made by PRE.
   45|       |   ???  PRE now does the predictive commoning in count_averages.  */
   46|       |/* dg-final { scan-tree-dump-times "looparound ref" 1 "pcom" } */


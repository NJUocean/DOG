    1|      3|long f(long x) { return x / (-0x7fffffffL - 1L); }
    2|       |
    3|      3|long r(long x) { return x % (-0x7fffffffL - 1L); }
    4|       |
    5|       |/* Since we have a negative divisor, this equation must hold for the
    6|       |   results of / and %; no specific results are guaranteed.  */
    7|      3|long std_eqn(long num, long denom, long quot, long rem) {
    8|      3|  /* For completeness, a check for "ABS (rem) < ABS (denom)" belongs here,
    9|      3|     but causes trouble on 32-bit machines and isn't worthwhile.  */
   10|      3|  return quot * (-0x7fffffffL - 1L) + rem == num;
   11|      3|}
   12|       |
   13|       |long nums[] = {-1L, 0x7fffffffL, -0x7fffffffL - 1L};
   14|       |
   15|      1|main() {
   16|      1|  int i;
   17|      1|
   18|      4|  for (i = 0; i < sizeof(nums) / sizeof(nums[0]); i++)
   19|      3|    if (std_eqn(nums[i], -0x7fffffffL - 1L, f(nums[i]), r(nums[i])) == 0)
   20|      0|      abort();
   21|      1|
   22|      1|  exit(0);
   23|      1|}


        -:    0:Source:180.c
        -:    0:Graph:180.gcno
        -:    0:Data:180.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-require-effective-target stdint_types } */
        -:    3:/* { dg-options "-Wall" } */
        -:    4:
        -:    5:#include <stdint.h>
        -:    6:
        -:    7:#define MAKE_FUN(suffix, type)                                                 \
        -:    8:  type my_bswap##suffix(type x) {                                              \
        -:    9:    type result = 0;                                                           \
        -:   10:    int shift;                                                                 \
        -:   11:    for (shift = 0; shift < 8 * sizeof(type); shift += 8) {                    \
        -:   12:      result <<= 8;                                                            \
        -:   13:      result |= (x >> shift) & 0xff;                                           \
        -:   14:    }                                                                          \
        -:   15:    return result;                                                             \
        -:   16:  }
        -:   17:
        9:   18:MAKE_FUN(16, uint16_t);
       15:   19:MAKE_FUN(32, uint32_t);
       27:   20:MAKE_FUN(64, uint64_t);
        -:   21:
        -:   22:extern void abort(void);
        -:   23:
        -:   24:#define NUMS16                                                                 \
        -:   25:  { 0x0000, 0x1122, 0xffff, }
        -:   26:
        -:   27:#define NUMS32                                                                 \
        -:   28:  { 0x00000000UL, 0x11223344UL, 0xffffffffUL, }
        -:   29:
        -:   30:#define NUMS64                                                                 \
        -:   31:  { 0x0000000000000000ULL, 0x1122334455667788ULL, 0xffffffffffffffffULL, }
        -:   32:
        -:   33:uint16_t uint16_ts[] = NUMS16;
        -:   34:
        -:   35:uint32_t uint32_ts[] = NUMS32;
        -:   36:
        -:   37:uint64_t uint64_ts[] = NUMS64;
        -:   38:
        -:   39:#define N(table) (sizeof(table) / sizeof(table[0]))
        -:   40:
        1:   41:int main(void) {
        -:   42:  int i;
        -:   43:
        4:   44:  for (i = 0; i < N(uint16_ts); i++)
        3:   45:    if (__builtin_bswap16(uint16_ts[i]) != my_bswap16(uint16_ts[i]))
    #####:   46:      abort();
        -:   47:
        4:   48:  for (i = 0; i < N(uint32_ts); i++)
        3:   49:    if (__builtin_bswap32(uint32_ts[i]) != my_bswap32(uint32_ts[i]))
    #####:   50:      abort();
        -:   51:
        4:   52:  for (i = 0; i < N(uint64_ts); i++)
        3:   53:    if (__builtin_bswap64(uint64_ts[i]) != my_bswap64(uint64_ts[i]))
    #####:   54:      abort();
        -:   55:
        1:   56:  return 0;
        -:   57:}

    1|       |/* Limit this to known non-strict alignment targets.  */
    2|       |/* { dg-do run { target { i?86-*-linux* x86_64-*-linux* } } } */
    3|       |/* { dg-options "-O -fsanitize=alignment -fsanitize-recover=alignment
    4|       | * -Wno-address-of-packed-member" } */
    5|       |
    6|       |struct R {
    7|       |  int a;
    8|       |} r;
    9|       |struct S {
   10|       |  struct R a;
   11|       |  char b;
   12|       |  long long c;
   13|       |  short d[10];
   14|       |};
   15|       |struct T {
   16|       |  char a;
   17|       |  long long b;
   18|       |};
   19|       |struct U {
   20|       |  char a;
   21|       |  int b;
   22|       |  int c;
   23|       |  long long d;
   24|       |  struct S e;
   25|       |  struct T f;
   26|       |} __attribute__((packed));
   27|       |struct V {
   28|       |  long long a;
   29|       |  struct S b;
   30|       |  struct T c;
   31|       |  struct U u;
   32|       |} v;
   33|       |
   34|      3|__attribute__((noinline, noclone)) int bar(int x, struct R y, struct R z) {
   35|      3|  return x + y.a;
   36|      3|}
   37|       |
   38|      1|__attribute__((noinline, noclone)) int foo(struct S *p, struct S *q) {
   39|      1|  int i = bar(0, r, r);
   40|      1|  i += bar(1, p->a, r);
   41|      1|  i += bar(2, r, q->a);
   42|      1|  return i;
   43|      1|}
   44|       |
   45|      1|int main() {
   46|      1|  char *p = (char *)&v.u.e;
   47|      1|  struct S *q, *r;
   48|      1|  asm volatile("" : "=r"(q) : "0"(p));
   49|      1|  asm volatile("" : "=r"(r) : "0"(p));
   50|      1|  if (foo(q, r) != 3)
   51|      0|    __builtin_abort();
   52|      1|  return 0;
   53|      1|}
   54|       |
   55|       |/* { dg-output "\.c:21:\[0-9]*: \[^\n\r]*member access within misaligned address
   56|       | * 0x\[0-9a-fA-F]* for type 'struct S', which requires \[48] byte alignment.*" }
   57|       | */
   58|       |/* { dg-output "\.c:22:\[0-9]*: \[^\n\r]*member access within misaligned address
   59|       | * 0x\[0-9a-fA-F]* for type 'struct S', which requires \[48] byte alignment" }
   60|       | */


        -:    0:Source:960.c
        -:    0:Graph:960.gcno
        -:    0:Data:960.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do compile } */
        -:    2:/* { dg-options "-O2 -ftree-tail-merge -fdump-tree-pre" } */
        -:    3:
        -:    4:struct node {
        -:    5:  struct node *next;
        -:    6:  struct node *prev;
        -:    7:};
        -:    8:
        -:    9:struct node node;
        -:   10:
        -:   11:struct head {
        -:   12:  struct node *first;
        -:   13:};
        -:   14:
        -:   15:struct head heads[5];
        -:   16:
        -:   17:int k = 2;
        -:   18:
        -:   19:struct head *head = &heads[2];
        -:   20:
        1:   21:int main() {
        -:   22:  struct node *p;
        -:   23:
        1:   24:  node.next = (void *)0;
        -:   25:
        1:   26:  node.prev = (void *)head;
        -:   27:
        1:   28:  asm("" : "=m"(node.prev));
        -:   29:
        1:   30:  head->first = &node;
        -:   31:
        1:   32:  struct node *n = head->first;
        -:   33:
        1:   34:  struct head *h = &heads[k];
        -:   35:
        1:   36:  heads[2].first = n->next;
        -:   37:
        1:   38:  if ((void *)n->prev == (void *)h)
        1:   39:    p = h->first;
        -:   40:  else
        -:   41:    /* Dead tbaa-unsafe load from ((struct node *)&heads[2])->next.  */
    #####:   42:    p = n->prev->next;
        -:   43:
        1:   44:  return !(p == (void *)0);
        -:   45:}
        -:   46:
        -:   47:/* { dg-final { scan-tree-dump-not "Removing basic block" "pre"} } */

    1|       |/* { dg-do run } */
    2|       |/* { dg-additional-options "-ftracer" } */
    3|       |
    4|       |extern void abort(void);
    5|       |
    6|       |typedef long int _PyTime_t;
    7|       |typedef enum {
    8|       |  _PyTime_ROUND_FLOOR = 0,
    9|       |  _PyTime_ROUND_CEILING = 1
   10|       |} _PyTime_round_t;
   11|       |
   12|       |static _PyTime_t _PyTime_Divide(const _PyTime_t t, const _PyTime_t k,
   13|      1|                                const _PyTime_round_t round) {
   14|      1|  if (round == _PyTime_ROUND_CEILING) {
   15|      0|    if (t >= 0)
   16|      0|      return (t + k - 1) / k;
   17|      0|    else
   18|      0|      return t / k;
   19|      1|  } else {
   20|      1|    if (t >= 0)
   21|      1|      return t / k;
   22|      0|    else
   23|      0|      return (t - (k - 1)) / k;
   24|      1|  }
   25|      1|}
   26|       |
   27|       |_PyTime_t __attribute__((noinline, noclone))
   28|      1|_PyTime_AsMicroseconds(_PyTime_t t, _PyTime_round_t round) {
   29|      1|  return _PyTime_Divide(t, 1000, round);
   30|      1|}
   31|       |
   32|      1|int main() {
   33|      1|  if (_PyTime_AsMicroseconds(10000, _PyTime_ROUND_FLOOR) != 10)
   34|      0|    abort();
   35|      1|  return 0;
   36|      1|}


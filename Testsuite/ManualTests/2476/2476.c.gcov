        -:    0:Source:2476.c
        -:    0:Graph:2476.gcno
        -:    0:Data:2476.gcda
        -:    0:Runs:1
        -:    1:/* Test AAPCS layout (alignment) for callee.  */
        -:    2:
        -:    3:/* { dg-do run { target arm_eabi } } */
        -:    4:/* { dg-require-effective-target arm32 } */
        -:    5:/* { dg-options "-O2 -fno-inline" } */
        -:    6:
        -:    7:extern int memcmp(const void *s1, const void *s2, __SIZE_TYPE__ n);
        -:    8:extern void abort(void);
        -:    9:
        -:   10:typedef struct __attribute__((aligned(8))) {
        -:   11:  int x;
        -:   12:  int y;
        -:   13:} overaligned;
        -:   14:
        -:   15:overaligned a = {2, 3};
        -:   16:overaligned b = {5, 8};
        -:   17:
        1:   18:void f(int r0, overaligned r1, int r3, int stack, overaligned stack4) {
        1:   19:  if (r0 != 7 || r3 != 9 || stack != 10)
    #####:   20:    abort();
        1:   21:  if (memcmp((void *)&r1, (void *)&a, sizeof(overaligned)))
    #####:   22:    abort();
        1:   23:  if (memcmp((void *)&stack4, (void *)&b, sizeof(overaligned)))
    #####:   24:    abort();
        1:   25:  int addr = ((int)&stack4) & 7;
        1:   26:  if (addr != 0) {
    #####:   27:    __builtin_printf("Alignment was %d\n", addr);
    #####:   28:    abort();
        -:   29:  }
        1:   30:}
        -:   31:
        1:   32:int main(int argc, char **argv) {
        1:   33:  f(7, a, 9, 10, b);
        1:   34:  return 0;
        -:   35:}

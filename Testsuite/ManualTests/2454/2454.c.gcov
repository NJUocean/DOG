        -:    0:Source:2454.c
        -:    0:Graph:2454.gcno
        -:    0:Data:2454.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-options "-O2 -fno-inline" } */
        -:    3:
        -:    4:/* Test pass-by-reference and pointer-typed argument passing on stack.
        -:    5:   This test shall pass on any of the following four combinitions:
        -:    6:    {big-endian, little-endian} {LP64, ILP32}.  */
        -:    7:
        -:    8:struct s5 {
        -:    9:  double a;
        -:   10:  double b;
        -:   11:  double c;
        -:   12:  double d;
        -:   13:  double e;
        -:   14:} gS = {1.0, 2.0, 3.0, 4.0, 5.0};
        -:   15:
        -:   16:double __attribute__((noinline))
        1:   17:foo(struct s5 p1, struct s5 p2, struct s5 p3, struct s5 p4, struct s5 p5,
        -:   18:    struct s5 p6, struct s5 p7, struct s5 p8, struct s5 p9) {
        1:   19:  asm("");
        1:   20:  return p9.c;
        -:   21:}
        -:   22:
        -:   23:void abort(void);
        -:   24:int printf(const char *, ...);
        -:   25:
        1:   26:int main(void) {
        1:   27:  printf("Here we print out some values and more importantly hope that"
        -:   28:         " the stack is getting a bit dirty for the bug to manifest itself"
        -:   29:         "\n\t%f, %f, %f, %f, %f\n",
        -:   30:         gS.a, gS.b, gS.c, gS.d, gS.e);
        -:   31:
        1:   32:  if (foo(gS, gS, gS, gS, gS, gS, gS, gS, gS) != 3.0)
    #####:   33:    abort();
        -:   34:
        1:   35:  return 0;
        -:   36:}

        -:    0:Source:1307.c
        -:    0:Graph:1307.gcno
        -:    0:Data:1307.gcda
        -:    0:Runs:1
        -:    1:/* Test __builtin_bswap64 . */
        -:    2:
        -:    3:unsigned long long g(unsigned long long a) __attribute__((noinline));
        8:    4:unsigned long long g(unsigned long long a) { return __builtin_bswap64(a); }
        -:    5:
        8:    6:unsigned long long f(unsigned long long c) {
        -:    7:  union {
        -:    8:    unsigned long long a;
        -:    9:    unsigned char b[8];
        -:   10:  } a, b;
        8:   11:  a.a = c;
        8:   12:  b.b[0] = a.b[7];
        8:   13:  b.b[1] = a.b[6];
        8:   14:  b.b[2] = a.b[5];
        8:   15:  b.b[3] = a.b[4];
        8:   16:  b.b[4] = a.b[3];
        8:   17:  b.b[5] = a.b[2];
        8:   18:  b.b[6] = a.b[1];
        8:   19:  b.b[7] = a.b[0];
        8:   20:  return b.a;
        -:   21:}
        -:   22:
        1:   23:int main(void) {
        -:   24:  unsigned long long i;
        -:   25:  /* The rest of the testcase assumes 8 byte long long. */
        -:   26:  if (sizeof(i) != sizeof(char) * 8)
        -:   27:    return 0;
        1:   28:  if (f(0x12) != g(0x12))
    #####:   29:    __builtin_abort();
        1:   30:  if (f(0x1234) != g(0x1234))
    #####:   31:    __builtin_abort();
        1:   32:  if (f(0x123456) != g(0x123456))
    #####:   33:    __builtin_abort();
        1:   34:  if (f(0x12345678ull) != g(0x12345678ull))
    #####:   35:    __builtin_abort();
        1:   36:  if (f(0x1234567890ull) != g(0x1234567890ull))
    #####:   37:    __builtin_abort();
        1:   38:  if (f(0x123456789012ull) != g(0x123456789012ull))
    #####:   39:    __builtin_abort();
        1:   40:  if (f(0x12345678901234ull) != g(0x12345678901234ull))
    #####:   41:    __builtin_abort();
        1:   42:  if (f(0x1234567890123456ull) != g(0x1234567890123456ull))
    #####:   43:    __builtin_abort();
        1:   44:  return 0;
        -:   45:}

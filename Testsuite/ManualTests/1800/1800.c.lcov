    1|       |/* Check that vector insertion works correctly. */
    2|       |
    3|       |/* { dg-do run } */
    4|       |/* { dg-options "-msse" { target { i?86-*-* x86_64-*-* } } } */
    5|       |/* { dg-require-effective-target sse_runtime { target { i?86-*-* x86_64-*-* } }
    6|       | * } */
    7|       |/* { dg-options "-mabi=altivec" { target { powerpc-*-* powerpc64-*-* } } } */
    8|       |/* { dg-require-effective-target vmx_hw { target { powerpc-*-* powerpc64--*-* }
    9|       | * } } */
   10|       |
   11|      6|#define vector __attribute__((vector_size(16)))
   12|       |
   13|       |extern int memcmp(const void *, const void *, __SIZE_TYPE__);
   14|       |
   15|      1|vector int f0(vector int t, int a) {
   16|      1|  ((int *)&t)[0] = a;
   17|      1|  return t;
   18|      1|}
   19|      1|vector int f1(vector int t, int a) {
   20|      1|  ((int *)&t)[1] = a;
   21|      1|  return t;
   22|      1|}
   23|      1|vector int f2(vector int t, int a) {
   24|      1|  ((int *)&t)[2] = a;
   25|      1|  return t;
   26|      1|}
   27|      1|vector int f3(vector int t, int a) {
   28|      1|  ((int *)&t)[3] = a;
   29|      1|  return t;
   30|      1|}
   31|      1|int main(void) {
   32|      1|  vector int a = {0, 0, 0, 0};
   33|      1|  vector int b = {1, 0, 0, 0};
   34|      1|  vector int c = {0, 1, 0, 0};
   35|      1|  vector int d = {0, 0, 1, 0};
   36|      1|  vector int e = {0, 0, 0, 1};
   37|      1|  vector int a0;
   38|      1|  a0 = f0(a, 1);
   39|      1|  if (memcmp(&a0, &b, sizeof(a0)))
   40|      0|    __builtin_abort();
   41|      1|  a0 = f1(a, 1);
   42|      1|  if (memcmp(&a0, &c, sizeof(a0)))
   43|      0|    __builtin_abort();
   44|      1|  a0 = f2(a, 1);
   45|      1|  if (memcmp(&a0, &d, sizeof(a0)))
   46|      0|    __builtin_abort();
   47|      1|  a0 = f3(a, 1);
   48|      1|  if (memcmp(&a0, &e, sizeof(a0)))
   49|      0|    __builtin_abort();
   50|      1|  return 0;
   51|      1|}


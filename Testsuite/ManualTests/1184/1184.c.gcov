        -:    0:Source:1184.c
        -:    0:Graph:1184.gcno
        -:    0:Data:1184.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-options "-fsanitize=signed-integer-overflow -Wno-unused-variable
        -:    3: * -fno-sanitize-recover=signed-integer-overflow" } */
        -:    4:
        -:    5:#define SCHAR_MIN (-__SCHAR_MAX__ - 1)
        -:    6:#define SHRT_MIN (-__SHRT_MAX__ - 1)
        -:    7:#define INT_MIN (-__INT_MAX__ - 1)
        -:    8:#define LONG_MIN (-__LONG_MAX__ - 1L)
        -:    9:#define LLONG_MIN (-__LONG_LONG_MAX__ - 1LL)
        -:   10:
        -:   11:#define CHECK(A, B)                                                            \
        -:   12:  ({                                                                           \
        -:   13:    if ((A) != (B))                                                            \
        -:   14:      __builtin_abort();                                                       \
        -:   15:  })
        -:   16:
        1:   17:int main(void) {
        1:   18:  volatile signed char c = -SCHAR_MIN;
       1*:   19:  CHECK(c, -128);
        -:   20:
        1:   21:  volatile short s = -SHRT_MIN;
       1*:   22:  CHECK(s, -32768);
        -:   23:
        1:   24:  volatile int i = INT_MIN;
        1:   25:  i = -(unsigned)i;
       1*:   26:  CHECK(i, -0x80000000);
        -:   27:
        1:   28:  volatile long int li = LONG_MIN;
        1:   29:  li = -(unsigned long)li;
        -:   30:#if __LONG_MAX__ == 2147483647L
        -:   31:  CHECK(li, -0x80000000L);
        -:   32:#elif __LONG_MAX__ == 9223372036854775807L
       1*:   33:  CHECK(li, -0x8000000000000000L);
        -:   34:#endif
        -:   35:
        1:   36:  volatile long long lli = LLONG_MIN;
        1:   37:  lli = -(unsigned long long)lli;
       1*:   38:  CHECK(lli, -0x8000000000000000L);
        1:   39:  return 0;
        -:   40:}

    1|       |/* { dg-do run { target { ! "m68k*-*-* mmix*-*-* bfin*-*-* v850*-*-* moxie*-*-*
    2|       | * cris*-*-* m32c*-*-* fr30*-*-* mcore*-*-* powerpc*-*-* xtensa*-*-* hppa*-*-*
    3|       | * nios2*-*-* or1k*-*-* pru*-*-*"} } } */
    4|       |
    5|       |/* { dg-options "-O2 -fno-inline -fdump-tree-reassoc1-details --param
    6|       | * logical-op-non-short-circuit=1" } */
    7|       |/* { dg-additional-options "-mbranch-cost=2" { target branch_cost } } */
    8|       |
    9|    111|int test(unsigned int a, int b, int c) {
   10|    111|  if ((a - 43) <= 3 || (a - 75) <= 3)
   11|      8|    return b;
   12|    103|  else
   13|    103|    return c;
   14|    111|}
   15|      1|int main() {
   16|      1|  volatile int n43, n47, n75, n79;
   17|      1|  n43 = 43;
   18|      1|  n47 = n43 + 4;
   19|      1|  n75 = 75;
   20|      1|  n79 = n75 + 4;
   21|      1|  int i;
   22|    112|  for (i = -10; i <= 100; i++)
   23|    111|    if (test(i, 2, 3) != 3 - ((i >= n43 && i < n47) || (i >= n75 && i < n79)))
   24|      0|      __builtin_abort();
   25|      1|  return 0;
   26|      1|}
   27|       |
   28|       |/* { dg-final { scan-tree-dump-times "Optimizing range tests" 1 "reassoc1"} }*/


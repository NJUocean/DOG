    1|       |/* Check that the two loops are fused and that we manage to fold the two xor
    2|       |   operations.  */
    3|       |/* { dg-options "-O2 -floop-nest-optimize -fdump-tree-forwprop-all
    4|       | * -fdump-tree-graphite-all" } */
    5|       |
    6|       |/* Make sure we fuse the loops like this:
    7|       |AST generated by isl:
    8|       |for (int c0 = 0; c0 <= 99; c0 += 1) {
    9|       |  S_3(c0);
   10|       |  S_6(c0);
   11|       |  S_9(c0);
   12|       |} */
   13|       |/* { dg-final { scan-tree-dump-times "AST generated by isl:.*for \\(int c0 = 0;
   14|       | * c0 <= 99; c0 \\+= 1\\) \\{.*S_.*\\(c0\\);.*S_.*\\(c0\\);.*S_.*\\(c0\\);.*\\}"
   15|       | * 1 "graphite" } } */
   16|       |
   17|       |/* Check that after fusing the loops, the scalar computation is also fused.  */
   18|       |/* { dg-final { scan-tree-dump-times "gimple_simplified to\[^\\n\]*\\^ 12" 1
   19|       | * "forwprop4" } } */
   20|       |
   21|    404|#define MAX 100
   22|       |int A[MAX];
   23|       |
   24|       |extern void abort();
   25|       |
   26|      1|int main(void) {
   27|      1|  int i;
   28|      1|
   29|    101|  for (i = 0; i < MAX; i++)
   30|    100|    A[i] = i;
   31|    101|  for (int i = 0; i < MAX; i++)
   32|    100|    A[i] ^= 4;
   33|    101|  for (int i = 0; i < MAX; i++)
   34|    100|    A[i] ^= 8;
   35|      1|
   36|    101|  for (i = 0; i < MAX; i++)
   37|    100|    if (A[i] != (i ^ 12))
   38|      0|      abort();
   39|      1|
   40|      1|  return 0;
   41|      1|}


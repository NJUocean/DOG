    1|       |/* Testcase to check generation of a SH2A specific instruction
    2|       |  'BSET #imm3,Rn'.  */
    3|       |/* { dg-do compile { target { sh2a } } }  */
    4|       |/* { dg-options "-O1" }  */
    5|       |/* { dg-final { scan-assembler "bset"} }  */
    6|       |
    7|       |struct a {
    8|       |  char a, b;
    9|       |  short c;
   10|       |};
   11|       |
   12|       |/* This function generates the instruction "BSET #imm3,Rn" only
   13|       |   on using optimization option "-O1" and above.  */
   14|       |
   15|      1|int a2() {
   16|      1|  volatile int j;
   17|      1|  volatile static struct a x = {1, 66, ~1}, y = {1, 2, ~2};
   18|      1|
   19|      1|  if (j > 1)
   20|      0|    return (x.a == y.a && (x.b | 1) == y.b);
   21|      1|  if (j > 2)
   22|      0|    return (x.a == y.a && (x.b | 2) == y.b);
   23|      1|  if (j > 3)
   24|      0|    return (x.a == y.a && (x.b | 4) == y.b);
   25|      1|  if (j > 4)
   26|      0|    return (x.a == y.a && (x.b | 8) == y.b);
   27|      1|  if (j > 5)
   28|      0|    return (x.a == y.a && (x.b | 16) == y.b);
   29|      1|  if (j > 6)
   30|      0|    return (x.a == y.a && (x.b | 32) == y.b);
   31|      1|  if (j > 7)
   32|      0|    return (x.a == y.a && (x.b | 64) == y.b);
   33|      1|  if (j > 8)
   34|      0|    return (x.a == y.a && (x.b | 128) == y.b);
   35|      1|}
   36|       |
   37|      1|int main() {
   38|      1|  volatile unsigned char x;
   39|      1|
   40|      1|  x |= 0x1;
   41|      1|  x |= 0x2;
   42|      1|  x |= 0x4;
   43|      1|  x |= 0x8;
   44|      1|  x |= 0x16;
   45|      1|  x |= 0x32;
   46|      1|  x |= 0x64;
   47|      1|  x |= 0x128;
   48|      1|
   49|      1|  if (!a2())
   50|      1|    return 0;
   51|      1|}


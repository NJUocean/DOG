        -:    0:Source:753.c
        -:    0:Graph:753.gcno
        -:    0:Data:753.gcda
        -:    0:Runs:1
        -:    1:/* { dg-require-effective-target label_values } */
        -:    2:
        -:    3:/* As a quality of implementation issue, we should not prevent inlining
        -:    4:   of function explicitly marked inline just because a label therein had
        -:    5:   its address taken.  */
        -:    6:
        -:    7:static void *ptr1, *ptr2;
        -:    8:static int i = 1;
        -:    9:
        2:   10:static __inline__ void doit(void **pptr, int cond) {
        2:   11:  if (cond) {
        2:   12:  here:
        2:   13:    *pptr = &&here;
        -:   14:  }
        2:   15:}
        -:   16:
        1:   17:__attribute__((noinline)) static void f(int cond) { doit(&ptr1, cond); }
        -:   18:
        1:   19:__attribute__((noinline)) static void g(int cond) { doit(&ptr2, cond); }
        -:   20:
        -:   21:__attribute__((noinline)) static void bar(void);
        -:   22:
        1:   23:int main() {
        1:   24:  f(i);
        1:   25:  bar();
        1:   26:  g(i);
        -:   27:
        -:   28:#ifdef __OPTIMIZE__
        -:   29:  if (ptr1 == ptr2)
        -:   30:    abort();
        -:   31:#endif
        -:   32:
        1:   33:  exit(0);
        -:   34:}
        -:   35:
        1:   36:void bar(void) {}

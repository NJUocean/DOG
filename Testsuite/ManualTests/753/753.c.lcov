    1|       |/* { dg-require-effective-target label_values } */
    2|       |
    3|       |/* As a quality of implementation issue, we should not prevent inlining
    4|       |   of function explicitly marked inline just because a label therein had
    5|       |   its address taken.  */
    6|       |
    7|       |static void *ptr1, *ptr2;
    8|       |static int i = 1;
    9|       |
   10|      2|static __inline__ void doit(void **pptr, int cond) {
   11|      2|  if (cond) {
   12|      2|  here:
   13|      2|    *pptr = &&here;
   14|      2|  }
   15|      2|}
   16|       |
   17|      1|__attribute__((noinline)) static void f(int cond) { doit(&ptr1, cond); }
   18|       |
   19|      1|__attribute__((noinline)) static void g(int cond) { doit(&ptr2, cond); }
   20|       |
   21|       |__attribute__((noinline)) static void bar(void);
   22|       |
   23|      1|int main() {
   24|      1|  f(i);
   25|      1|  bar();
   26|      1|  g(i);
   27|      1|
   28|       |#ifdef __OPTIMIZE__
   29|       |  if (ptr1 == ptr2)
   30|       |    abort();
   31|       |#endif
   32|      1|
   33|      1|  exit(0);
   34|      1|}
   35|       |
   36|      1|void bar(void) {}


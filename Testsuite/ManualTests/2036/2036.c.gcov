        -:    0:Source:2036.c
        -:    0:Graph:2036.gcno
        -:    0:Data:2036.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-options "-O2 -fno-inline -fpredictive-commoning
        -:    3: * -fdump-tree-pcom-details" } */
        -:    4:
        -:    5:int arr1[105] = {2, 3, 5, 7, 11, 13, 17, 19};
        -:    6:int arr2[105] = {2, 3, 5, 7, 11, 13, 17, 19};
        -:    7:int arr3[105] = {2, 3, 5, 7, 11, 13, 17, 19};
        -:    8:
        -:    9:int result1[105] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   10:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   11:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   12:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   13:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   14:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -2, -3, -4, -5};
        -:   15:int result2[105] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   16:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   17:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   18:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   19:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   20:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -3, -3, -5, -5};
        -:   21:int result3[105] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   22:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   23:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   24:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   25:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,
        -:   26:                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, -5, -5, -5, -5};
        -:   27:
        -:   28:extern void abort(void);
        -:   29:
        1:   30:void __attribute__((noinline)) foo1(int *a) {
        -:   31:  int i;
      101:   32:  for (i = 0; i < 100; i++) {
      100:   33:    a[i] = 0;
      100:   34:    a[i + 1] = -1;
      100:   35:    a[i + 2] = -2;
      100:   36:    a[i + 3] = -3;
      100:   37:    a[i + 4] = -4;
      100:   38:    a[i + 5] = -5;
        -:   39:  }
        1:   40:}
        -:   41:
        1:   42:void __attribute__((noinline)) foo2(int *a) {
        -:   43:  int i;
      101:   44:  for (i = 0; i < 100; i++) {
      100:   45:    a[i] = 0;
      100:   46:    a[i + 1] = -1;
      100:   47:    a[i + 3] = -3;
      100:   48:    a[i + 5] = -5;
        -:   49:  }
        1:   50:}
        -:   51:
        1:   52:void __attribute__((noinline)) foo3(int *a) {
        -:   53:  int i;
      101:   54:  for (i = 0; i < 100; i++) {
      100:   55:    a[i] = 0;
      100:   56:    a[i + 5] = -5;
        -:   57:  }
        1:   58:}
        -:   59:
        3:   60:void check(int *a, int *res, int len) {
        -:   61:  int i;
        -:   62:
       33:   63:  for (i = 0; i < len; i++)
       30:   64:    if (a[i] != res[i])
    #####:   65:      abort();
        3:   66:}
        -:   67:
        1:   68:int main(void) {
        1:   69:  foo1(arr1);
        1:   70:  check(arr1, result1, 10);
        -:   71:
        1:   72:  foo2(arr2);
        1:   73:  check(arr2, result2, 10);
        -:   74:
        1:   75:  foo3(arr3);
        1:   76:  check(arr3, result3, 10);
        -:   77:
        1:   78:  return 0;
        -:   79:}
        -:   80:/* { dg-final { scan-tree-dump "Store-stores chain" "pcom"} } */

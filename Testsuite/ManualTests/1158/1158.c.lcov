    1|       |/* { dg-do run } */
    2|       |/* { dg-require-effective-target store_merge } */
    3|       |/* { dg-options "-O2 -fdump-tree-store-merging" } */
    4|       |
    5|       |struct S {
    6|       |  unsigned int b1 : 1;
    7|       |  unsigned int b2 : 1;
    8|       |  unsigned int b3 : 1;
    9|       |  unsigned int b4 : 1;
   10|       |  unsigned int b5 : 1;
   11|       |  unsigned int b6 : 27;
   12|       |};
   13|       |
   14|       |struct T {
   15|       |  unsigned int b1 : 1;
   16|       |  unsigned int b2 : 16;
   17|       |  unsigned int b3 : 14;
   18|       |  unsigned int b4 : 1;
   19|       |};
   20|       |
   21|      1|__attribute__((noipa)) void foo(struct S *x) {
   22|      1|  x->b1 = 1;
   23|      1|  x->b2 = 0;
   24|      1|  x->b3 = 1;
   25|      1|  x->b4 = 1;
   26|      1|  x->b5 = 0;
   27|      1|}
   28|       |
   29|      1|__attribute__((noipa)) void bar(struct T *x) {
   30|      1|  x->b1 = 1;
   31|      1|  x->b2 = 0;
   32|      1|  x->b4 = 0;
   33|      1|}
   34|       |
   35|       |struct S s = {0, 1, 0, 0, 1, 0x3a5f05a};
   36|       |struct T t = {0, 0xf5af, 0x3a5a, 1};
   37|       |
   38|      1|int main() {
   39|      1|  asm volatile("" : : : "memory");
   40|      1|  foo(&s);
   41|      1|  bar(&t);
   42|      1|  asm volatile("" : : : "memory");
   43|      1|  if (s.b1 != 1 || s.b2 != 0 || s.b3 != 1 || s.b4 != 1 || s.b5 != 0 ||
   44|      1|      s.b6 != 0x3a5f05a)
   45|      0|    __builtin_abort();
   46|      1|  if (t.b1 != 1 || t.b2 != 0 || t.b3 != 0x3a5a || t.b4 != 0)
   47|      0|    __builtin_abort();
   48|      1|  return 0;
   49|      1|}
   50|       |
   51|       |/* { dg-final { scan-tree-dump-times "Merging successful" 2 "store-merging" } }
   52|       | */


        -:    0:Source:1361.c
        -:    0:Graph:1361.gcno
        -:    0:Data:1361.gcda
        -:    0:Runs:1
        -:    1:/* Test that __builtin_prefetch does no harm.
        -:    2:
        -:    3:   Data prefetch should not fault if used with an invalid address.  */
        -:    4:
        -:    5:#include <limits.h>
        -:    6:
        -:    7:#define ARRSIZE 65
        -:    8:int *bad_addr[ARRSIZE];
        -:    9:int arr_used;
        -:   10:
        -:   11:/* Fill bad_addr with a range of values in the hopes that on any target
        -:   12:   some will be invalid addresses.  */
        1:   13:void init_addrs(void) {
        -:   14:  int i;
        1:   15:  int bits_per_ptr = sizeof(void *) * 8;
       65:   16:  for (i = 0; i < bits_per_ptr; i++)
       64:   17:    bad_addr[i] = (void *)(1UL << i);
        1:   18:  arr_used = bits_per_ptr + 1; /* The last element used is zero.  */
        1:   19:}
        -:   20:
        1:   21:void prefetch_for_read(void) {
        -:   22:  int i;
       66:   23:  for (i = 0; i < ARRSIZE; i++)
       65:   24:    __builtin_prefetch(bad_addr[i], 0, 0);
        1:   25:}
        -:   26:
        1:   27:void prefetch_for_write(void) {
        -:   28:  int i;
       66:   29:  for (i = 0; i < ARRSIZE; i++)
       65:   30:    __builtin_prefetch(bad_addr[i], 1, 0);
        1:   31:}
        -:   32:
        1:   33:int main() {
        1:   34:  init_addrs();
        1:   35:  prefetch_for_read();
        1:   36:  prefetch_for_write();
        1:   37:  exit(0);
        -:   38:}

    1|       |/* PR rtl-optimization/51933 */
    2|       |
    3|       |static signed char v1;
    4|       |static unsigned char v2[256], v3[256];
    5|       |
    6|      2|__attribute__((noclone, noinline)) void foo(void) {
    7|       |#if defined(__s390__) && !defined(__zarch__)
    8|       |  /* S/390 31 bit cannot deal with more than one literal pool
    9|       |     reference per insn.  */
   10|       |  asm volatile("" : : "g"(&v1) : "memory");
   11|       |  asm volatile("" : : "g"(&v2[0]));
   12|       |  asm volatile("" : : "g"(&v3[0]));
   13|       |#else
   14|      2|  asm volatile("" : : "g"(&v1), "g"(&v2[0]), "g"(&v3[0]) : "memory");
   15|      2|#endif
   16|      2|}
   17|       |
   18|       |__attribute__((noclone, noinline)) int bar(const int x, const unsigned short *y,
   19|      1|                                           char *z) {
   20|      1|  int i;
   21|      1|  unsigned short u;
   22|      1|  if (!v1)
   23|      1|    foo();
   24|     18|  for (i = 0; i < x; i++) {
   25|     17|    u = y[i];
   26|     17|    z[i] = u < 0x0100 ? v2[u] : v3[u & 0xff];
   27|     17|  }
   28|      1|  z[x] = '\0';
   29|      1|  return x;
   30|      1|}
   31|       |
   32|      1|int main(void) {
   33|      1|  char buf[18];
   34|      1|  unsigned short s[18];
   35|      1|  unsigned char c[18] = "abcdefghijklmnopq";
   36|      1|  int i;
   37|    257|  for (i = 0; i < 256; i++) {
   38|    256|    v2[i] = i;
   39|    256|    v3[i] = i + 1;
   40|    256|  }
   41|     19|  for (i = 0; i < 18; i++)
   42|     18|    s[i] = c[i];
   43|      1|  s[5] |= 0x600;
   44|      1|  s[6] |= 0x500;
   45|      1|  s[11] |= 0x2000;
   46|      1|  s[15] |= 0x500;
   47|      1|  foo();
   48|      1|  if (bar(17, s, buf) != 17 ||
   49|      1|      __builtin_memcmp(buf, "abcdeghhijkmmnoqq", 18) != 0)
   50|      0|    __builtin_abort();
   51|      1|  return 0;
   52|      1|}


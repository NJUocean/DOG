    1|       |/* Verify that IPA-CP can clone mark_cell without miscompiling it despite its
    2|       |   type_attributes.  */
    3|       |/* { dg-do run } */
    4|       |/* { dg-options "-O3 -fdump-ipa-cp" } */
    5|       |
    6|       |struct PMC {
    7|       |  unsigned flags;
    8|       |};
    9|       |
   10|       |typedef struct Pcc_cell {
   11|       |  struct PMC *p;
   12|       |  long bla;
   13|       |  long type;
   14|       |} Pcc_cell;
   15|       |
   16|       |int gi;
   17|       |
   18|       |extern void abort();
   19|       |extern void never_ever(int *interp, struct PMC *pmc) __attribute__((noinline));
   20|       |
   21|      0|void never_ever(int *interp, struct PMC *pmc) { abort(); }
   22|       |
   23|       |static void mark_cell(int *interp, Pcc_cell *c) __attribute__((__nonnull__(1)))
   24|       |__attribute__((noinline));
   25|       |
   26|    100|static void mark_cell(int *interp, Pcc_cell *c) {
   27|    100|  if (c && c->type == 4 && c->p && !(c->p->flags & (1 << 14)))
   28|      0|    never_ever(interp, c->p);
   29|    100|}
   30|       |
   31|       |static void foo(int *interp, Pcc_cell *c) __attribute__((noinline));
   32|       |
   33|    100|static void foo(int *interp, Pcc_cell *c) { mark_cell(interp, c); }
   34|       |
   35|    100|static struct Pcc_cell *__attribute__((noinline, noclone)) getnull(void) {
   36|    100|  return (struct Pcc_cell *)0;
   37|    100|}
   38|       |
   39|      1|int main() {
   40|      1|  int i;
   41|      1|
   42|    101|  for (i = 0; i < 100; i++)
   43|    100|    foo(&gi, getnull());
   44|      1|  return 0;
   45|      1|}
   46|       |
   47|       |/* { dg-final { scan-ipa-dump "Creating a specialized node of mark_cell" "cp" }
   48|       | * } */


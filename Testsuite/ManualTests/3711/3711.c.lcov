    1|       |/* PR rtl-optimization/47337 */
    2|       |
    3|       |static unsigned int a[256], b = 0;
    4|       |static char c = 0;
    5|       |static int d = 0, *f = &d;
    6|       |static long long e = 0;
    7|       |
    8|      1|static short foo(long long x, long long y) { return x / y; }
    9|       |
   10|      1|static char bar(char x, char y) { return x - y; }
   11|       |
   12|      1|static int baz(int x, int y) {
   13|      1|  *f = (y != (short)(y * 3));
   14|      1|  for (c = 0; c < 2; c++) {
   15|      1|  lab:
   16|      1|    if (d) {
   17|      1|      if (e)
   18|      0|        e = 1;
   19|      1|      else
   20|      1|        return x;
   21|      0|    } else {
   22|      0|      d = 1;
   23|      0|      goto lab;
   24|      0|    }
   25|      0|    f = &d;
   26|      0|  }
   27|      1|  return x;
   28|      1|}
   29|       |
   30|      2|static void fnx(unsigned long long x, int y) {
   31|      2|  if (!y) {
   32|      2|    b = a[b & 1];
   33|      2|    b = a[b & 1];
   34|      2|    b = a[(b ^ (x & 1)) & 1];
   35|      2|    b = a[(b ^ (x & 1)) & 1];
   36|      2|  }
   37|      2|}
   38|       |
   39|       |char *volatile w = "2";
   40|       |
   41|      1|int main() {
   42|      1|  int h = 0;
   43|      1|  unsigned int k = 0;
   44|      1|  int l[8];
   45|      1|  int i, j;
   46|      1|
   47|      1|  if (__builtin_strcmp(w, "1") == 0)
   48|      0|    h = 1;
   49|      1|
   50|    257|  for (i = 0; i < 256; i++) {
   51|  2.30k|    for (j = 8; j > 0; j--)
   52|  2.04k|      k = 1;
   53|    256|    a[i] = k;
   54|    256|  }
   55|      9|  for (i = 0; i < 8; i++)
   56|      8|    l[i] = 0;
   57|      1|
   58|      1|  d = bar(c, c);
   59|      1|  d = baz(c, 1 | foo(l[0], 10));
   60|      1|  fnx(d, h);
   61|      1|  fnx(e, h);
   62|      1|
   63|      1|  if (d != 0)
   64|      0|    __builtin_abort();
   65|      1|  return 0;
   66|      1|}


        -:    0:Source:795.c
        -:    0:Graph:795.gcno
        -:    0:Data:795.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-options "-fsanitize=bounds" } */
        -:    3:
        -:    4:/* Test negative bounds.  */
        -:    5:
        -:    6:struct S {
        -:    7:  int a[10];
        -:    8:};
        -:    9:
        1:   10:__attribute__((noinline, noclone)) void fn1(void) {
        -:   11:  volatile int i;
        1:   12:  int m = -1;
        -:   13:  volatile int a[7];
        1:   14:  asm("" : : "r"(&a) : "memory");
        1:   15:  i = a[-1];
        1:   16:  asm("" : : "r"(&a) : "memory");
        1:   17:  i = a[m];
        1:   18:}
        -:   19:
        1:   20:__attribute__((noinline, noclone)) void fn2(void) {
        -:   21:  volatile int i;
        1:   22:  int m = 7;
        1:   23:  volatile int a[m];
        1:   24:  asm("" : : "r"(&a) : "memory");
        1:   25:  i = a[-1];
        1:   26:}
        -:   27:
        1:   28:__attribute__((noinline, noclone)) void fn3(void) {
        -:   29:  volatile int i;
        -:   30:  volatile struct S s;
        1:   31:  asm("" : : "r"(&s.a) : "memory");
        1:   32:  i = s.a[-1];
        1:   33:}
        -:   34:
        1:   35:int main(void) {
        1:   36:  fn1();
        1:   37:  fn2();
        1:   38:  fn3();
        1:   39:  return 0;
        -:   40:}
        -:   41:
        -:   42:/* { dg-output "index -1 out of bounds for type 'int
        -:   43: * \\\[7\\\]'\[^\n\r]*(\n|\r\n|\r)" } */
        -:   44:/* { dg-output "\[^\n\r]*index -1 out of bounds for type 'int
        -:   45: * \\\[7\\\]'\[^\n\r]*(\n|\r\n|\r)" } */
        -:   46:/* { dg-output "\[^\n\r]*index -1 out of bounds for type 'int
        -:   47: * \\\[\\\*\\\]'\[^\n\r]*(\n|\r\n|\r)" } */
        -:   48:/* { dg-output "\[^\n\r]*index -1 out of bounds for type 'int \\\[10\\\]'" } */

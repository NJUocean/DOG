        -:    0:Source:2752.c
        -:    0:Graph:2752.gcno
        -:    0:Data:2752.gcda
        -:    0:Runs:1
        -:    1:/* We used to mis-compile this testcase as we did not know that
        -:    2:   &a+offsetof(b,a) was the same as &a.b */
        -:    3:struct A {
        -:    4:  int t;
        -:    5:  int i;
        -:    6:};
        -:    7:
        1:    8:void bar(float *p) { *p = 5.2; }
        -:    9:
        1:   10:int foo(struct A *locp, int i, int str) {
        -:   11:  float f, g, *p;
        -:   12:  int T355;
        -:   13:  int *T356;
        -:   14:  /* Currently, the alias analyzer has limited support for handling
        -:   15:     aliases of structure fields when no other variables are aliased.
        -:   16:     Introduce additional aliases to confuse it.  */
       1*:   17:  p = i ? &g : &f;
        1:   18:  bar(p);
        1:   19:  if (*p > 0.0)
        1:   20:    str = 1;
        -:   21:
        1:   22:  T355 = locp->i;
        1:   23:  T356 = &locp->i;
        1:   24:  *T356 = str;
        1:   25:  T355 = locp->i;
        -:   26:
        1:   27:  return T355;
        -:   28:}
        -:   29:
        1:   30:main() {
        -:   31:  struct A loc;
        -:   32:  int str;
        -:   33:
        1:   34:  loc.i = 2;
        1:   35:  str = foo(&loc, 10, 3);
        1:   36:  if (str != 1)
    #####:   37:    abort();
        1:   38:  return 0;
        -:   39:}

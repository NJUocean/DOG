    1|       |/* { dg-require-effective-target size32plus } */
    2|       |
    3|       |#define DEBUG 0
    4|       |#if DEBUG
    5|       |#include <stdio.h>
    6|       |#endif
    7|       |
    8|  8.16M|#define N 200
    9|       |
   10|       |unsigned int A[N][N], B[N][N], C[N][N];
   11|       |
   12|      1|static void __attribute__((noinline)) matmult(void) {
   13|      1|  int i, j, k;
   14|      1|
   15|    201|  for (i = 0; i < N; i++)
   16|  40.2k|    for (j = 0; j < N; j++)
   17|  40.0k|      A[i][j] = 0;
   18|      1|
   19|      1|  /* Loops J and K should be interchanged.  */
   20|    201|  for (i = 0; i < N; i++)
   21|  40.2k|    for (j = 0; j < N; j++)
   22|  8.04M|      for (k = 0; k < N; k++)
   23|  8.00M|        A[i][j] += B[i][k] * C[k][j];
   24|      1|}
   25|       |
   26|       |extern void abort();
   27|       |
   28|      1|int main(void) {
   29|      1|  int i, j;
   30|      1|  unsigned res = 0;
   31|      1|
   32|    201|  for (i = 0; i < N; i++)
   33|  40.2k|    for (j = 0; j < N; j++) {
   34|  40.0k|      B[i][j] = j;
   35|  40.0k|      C[i][j] = i;
   36|  40.0k|    }
   37|      1|
   38|      1|  matmult();
   39|      1|
   40|    201|  for (i = 0; i < N; i++)
   41|    200|    res += A[i][i];
   42|      1|
   43|       |#if DEBUG
   44|       |  fprintf(stderr, "res = %d \n", res);
   45|       |#endif
   46|      1|
   47|      1|  if (res != 529340000)
   48|      0|    abort();
   49|      1|
   50|      1|  return 0;
   51|      1|}
   52|       |
   53|       |/* { dg-final { scan-tree-dump "tiled by" "graphite" } } */


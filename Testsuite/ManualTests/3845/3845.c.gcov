        -:    0:Source:3845.c
        -:    0:Graph:3845.gcno
        -:    0:Data:3845.gcda
        -:    0:Runs:1
        -:    1:#ifdef __UINT64_TYPE__
        -:    2:typedef __UINT64_TYPE__ uint64_t;
        -:    3:#else
        -:    4:typedef unsigned long long uint64_t;
        -:    5:#endif
        -:    6:
        -:    7:#ifndef __SIZEOF_INT128__
        -:    8:#define __int128 long long
        -:    9:#endif
        -:   10:
        -:   11:/* Some version of bswap optimization would ICE when analyzing a mask constant
        -:   12:   too big for an uint64_t variable (PR210931).  */
        -:   13:
        -:   14:__attribute__((noinline, noclone)) uint64_t
        1:   15:uint128_central_bitsi_ior(unsigned __int128 in1, uint64_t in2) {
        1:   16:  __int128 mask = (__int128)0xffff << 56;
        1:   17:  return ((in1 & mask) >> 56) | in2;
        -:   18:}
        -:   19:
        1:   20:int main(int argc, char **argv) {
        1:   21:  __int128 in = 1;
        -:   22:#ifdef __SIZEOF_INT128__
        1:   23:  in <<= 64;
        -:   24:#endif
        -:   25:  if (sizeof(uint64_t) * __CHAR_BIT__ != 64)
        -:   26:    return 0;
        -:   27:  if (sizeof(unsigned __int128) * __CHAR_BIT__ != 128)
        -:   28:    return 0;
        1:   29:  if (uint128_central_bitsi_ior(in, 2) != 0x102)
    #####:   30:    __builtin_abort();
        1:   31:  return 0;
        -:   32:}

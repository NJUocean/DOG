        -:    0:Source:1025.c
        -:    0:Graph:1025.gcno
        -:    0:Data:1025.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-set-target-env-var ASAN_OPTIONS
        -:    3: * "detect_invalid_pointer_pairs=1:halt_on_error=1" } */
        -:    4:/* { dg-options "-fsanitize=address,pointer-compare" } */
        -:    5:
        8:    6:int foo(char *p, char *q) { return p <= q; }
        -:    7:
        -:    8:char global[8192] = {};
        -:    9:char small_global[7] = {};
        -:   10:
        1:   11:int main() {
        -:   12:  // Heap allocated memory.
        1:   13:  char *p = (char *)__builtin_malloc(42);
        1:   14:  int r = foo(p, 0);
        1:   15:  __builtin_free(p);
        -:   16:
        1:   17:  p = (char *)__builtin_malloc(1024);
        1:   18:  foo(0, p);
        1:   19:  __builtin_free(p);
        -:   20:
        1:   21:  p = (char *)__builtin_malloc(4096);
        1:   22:  foo(p, 0);
        1:   23:  __builtin_free(p);
        -:   24:
        -:   25:  // Global variable.
        1:   26:  foo(&global[0], 0);
        1:   27:  foo(&global[1000], 0);
        -:   28:
        1:   29:  p = &small_global[0];
        1:   30:  foo(p, 0);
        -:   31:
        -:   32:  // Stack variable.
        -:   33:  char stack[10000];
        1:   34:  foo(&stack[0], 0);
        1:   35:  foo(0, &stack[9000]);
        -:   36:
        1:   37:  return 0;
        -:   38:}

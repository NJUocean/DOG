    1|       |/* { dg-do run } */
    2|       |/* { dg-require-effective-target lp64 } */
    3|       |
    4|       |typedef unsigned long size_t;
    5|       |struct tree_base {
    6|       |  int code;
    7|       |};
    8|       |struct tree_decl_minimal {
    9|       |  struct tree_base base;
   10|       |  const char *name;
   11|       |};
   12|       |typedef union tree_node {
   13|       |  struct tree_base base;
   14|       |  struct tree_decl_minimal decl_minimal;
   15|       |} * tree;
   16|       |struct tree_overload {
   17|       |  struct tree_base common;
   18|       |  tree function;
   19|       |};
   20|       |typedef struct VEC_tree_base {
   21|       |  unsigned num;
   22|       |  unsigned alloc;
   23|       |  tree vec[1];
   24|       |} VEC_tree_base;
   25|       |typedef struct VEC_tree_gc {
   26|       |  VEC_tree_base base;
   27|       |} VEC_tree_gc;
   28|      1|static __inline__ unsigned VEC_tree_base_length(const VEC_tree_base *vec_) {
   29|      1|  return vec_ ? vec_->num : 0;
   30|      1|}
   31|       |static __inline__ int VEC_tree_base_iterate(const VEC_tree_base *vec_,
   32|      1|                                            unsigned ix_, tree *ptr) {
   33|      1|  if (vec_ && ix_ < vec_->num) {
   34|      0|    *ptr = vec_->vec[ix_];
   35|      0|    return 1;
   36|      1|  } else {
   37|      1|    *ptr = 0;
   38|      1|    return 0;
   39|      1|  }
   40|      1|}
   41|       |extern void abort(void);
   42|      1|void __attribute__((noinline)) foo(size_t x) {
   43|      1|  if (x != 18446744073709551614UL)
   44|      0|    abort();
   45|      1|}
   46|      1|void resort_type_method_vec(VEC_tree_gc *method_vec) {
   47|      1|  int len = (VEC_tree_base_length(((method_vec) ? &(method_vec)->base : 0)));
   48|      1|  size_t slot;
   49|      1|  tree fn;
   50|      1|
   51|      1|  for (slot = 2; (VEC_tree_base_iterate(
   52|      1|           ((method_vec) ? &(method_vec)->base : 0), slot, &(fn)));
   53|      1|       ++slot)
   54|      0|    if (!(((((((fn)->base.code) == 225)
   55|      0|                 ? (((struct tree_overload *)(fn))->function)
   56|      0|                 : (fn)))
   57|      0|               ->decl_minimal.name)))
   58|      0|      break;
   59|      1|
   60|      1|  if (len - slot > 1)
   61|      1|    foo(len - slot);
   62|      1|}
   63|       |
   64|      1|int main() {
   65|      1|  resort_type_method_vec((void *)0);
   66|      1|  return 0;
   67|      1|}


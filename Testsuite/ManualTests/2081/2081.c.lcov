    1|       |/* { dg-do run } */
    2|       |/* { dg-options "-O3 -fstrict-aliasing" } */
    3|       |
    4|       |union U {
    5|       |  struct A {
    6|       |    int : 2;
    7|       |    int x : 8;
    8|       |  } a;
    9|       |  struct B {
   10|       |    int : 6;
   11|       |    int x : 8;
   12|       |  } b;
   13|       |};
   14|       |
   15|      1|int __attribute__((noipa)) foo(union U *p, union U *q) {
   16|      1|  p->a.x = 1;
   17|      1|  q->b.x = 1;
   18|      1|  return p->a.x;
   19|      1|}
   20|       |
   21|      1|int main() {
   22|      1|  union U x;
   23|      1|  if (foo(&x, &x) != x.a.x)
   24|      0|    __builtin_abort();
   25|      1|  return 0;
   26|      1|}
   27|       |
   28|       |/* We support arbitrary punning through unions when it happens through
   29|       |   the union type and thus p == q is valid here.  */


    1|       |/* PR rtl-optimization/49390 */
    2|       |
    3|       |struct S {
    4|       |  unsigned int s1;
    5|       |  unsigned int s2;
    6|       |};
    7|       |struct T {
    8|       |  unsigned int t1;
    9|       |  struct S t2;
   10|       |};
   11|       |struct U {
   12|       |  unsigned short u1;
   13|       |  unsigned short u2;
   14|       |};
   15|       |struct V {
   16|       |  struct U v1;
   17|       |  struct T v2;
   18|       |};
   19|       |struct S a;
   20|       |char *b;
   21|       |union {
   22|       |  char b[64];
   23|       |  struct V v;
   24|       |} u;
   25|       |volatile int v;
   26|       |extern void abort(void);
   27|       |
   28|       |__attribute__((noinline, noclone)) void foo(int x, void *y, unsigned int z,
   29|      1|                                            unsigned int w) {
   30|      1|  if (x != 4 || y != (void *)&u.v.v2)
   31|      0|    abort();
   32|      1|  v = z + w;
   33|      1|  v = 16384;
   34|      1|}
   35|       |
   36|      0|__attribute__((noinline, noclone)) void bar(struct S x) {
   37|      0|  v = x.s1;
   38|      0|  v = x.s2;
   39|      0|}
   40|       |
   41|      1|__attribute__((noinline, noclone)) int baz(struct S *x) {
   42|      1|  v = x->s1;
   43|      1|  v = x->s2;
   44|      1|  v = 0;
   45|      1|  return v + 1;
   46|      1|}
   47|       |
   48|      1|__attribute__((noinline, noclone)) void test(struct S *c) {
   49|      1|  struct T *d;
   50|      1|  struct S e = a;
   51|      1|  unsigned int f, g;
   52|      1|  if (c == 0)
   53|      1|    c = &e;
   54|      0|  else {
   55|      0|    if (c->s2 % 8192 <= 15 || (8192 - c->s2 % 8192) <= 31)
   56|      0|      foo(1, 0, c->s1, c->s2);
   57|      0|  }
   58|      1|  if (!baz(c))
   59|      0|    return;
   60|      1|  g = (((struct U *)b)->u2 & 2) ? 32 : __builtin_offsetof(struct V, v2);
   61|      1|  f = c->s2 % 8192;
   62|      1|  if (f == 0) {
   63|      1|    e.s2 += g;
   64|      1|    f = g;
   65|      1|  } else if (f < g) {
   66|      0|    foo(2, 0, c->s1, c->s2);
   67|      0|    return;
   68|      0|  }
   69|      1|  if ((((struct U *)b)->u2 & 1) && f == g) {
   70|      0|    bar(*c);
   71|      0|    foo(3, 0, c->s1, c->s2);
   72|      0|    return;
   73|      0|  }
   74|      1|  d = (struct T *)(b + c->s2 % 8192);
   75|      1|  if (d->t2.s1 >= c->s1 && (d->t2.s1 != c->s1 || d->t2.s2 >= c->s2))
   76|      1|    foo(4, d, c->s1, c->s2);
   77|      1|  return;
   78|      1|}
   79|       |
   80|      1|int main() {
   81|      1|  struct S *c = 0;
   82|      1|  asm("" : "+r"(c) : "r"(&a));
   83|      1|  u.v.v2.t2.s1 = 8192;
   84|      1|  b = u.b;
   85|      1|  test(c);
   86|      1|  if (v != 16384)
   87|      0|    abort();
   88|      1|  return 0;
   89|      1|}


        -:    0:Source:3735.c
        -:    0:Graph:3735.gcno
        -:    0:Data:3735.gcda
        -:    0:Runs:1
        -:    1:/* PR rtl-optimization/49390 */
        -:    2:
        -:    3:struct S {
        -:    4:  unsigned int s1;
        -:    5:  unsigned int s2;
        -:    6:};
        -:    7:struct T {
        -:    8:  unsigned int t1;
        -:    9:  struct S t2;
        -:   10:};
        -:   11:struct U {
        -:   12:  unsigned short u1;
        -:   13:  unsigned short u2;
        -:   14:};
        -:   15:struct V {
        -:   16:  struct U v1;
        -:   17:  struct T v2;
        -:   18:};
        -:   19:struct S a;
        -:   20:char *b;
        -:   21:union {
        -:   22:  char b[64];
        -:   23:  struct V v;
        -:   24:} u;
        -:   25:volatile int v;
        -:   26:extern void abort(void);
        -:   27:
        1:   28:__attribute__((noinline, noclone)) void foo(int x, void *y, unsigned int z,
        -:   29:                                            unsigned int w) {
        1:   30:  if (x != 4 || y != (void *)&u.v.v2)
    #####:   31:    abort();
        1:   32:  v = z + w;
        1:   33:  v = 16384;
        1:   34:}
        -:   35:
    #####:   36:__attribute__((noinline, noclone)) void bar(struct S x) {
    #####:   37:  v = x.s1;
    #####:   38:  v = x.s2;
    #####:   39:}
        -:   40:
        1:   41:__attribute__((noinline, noclone)) int baz(struct S *x) {
        1:   42:  v = x->s1;
        1:   43:  v = x->s2;
        1:   44:  v = 0;
        1:   45:  return v + 1;
        -:   46:}
        -:   47:
        1:   48:__attribute__((noinline, noclone)) void test(struct S *c) {
        -:   49:  struct T *d;
        1:   50:  struct S e = a;
        -:   51:  unsigned int f, g;
        1:   52:  if (c == 0)
        1:   53:    c = &e;
        -:   54:  else {
    #####:   55:    if (c->s2 % 8192 <= 15 || (8192 - c->s2 % 8192) <= 31)
    #####:   56:      foo(1, 0, c->s1, c->s2);
        -:   57:  }
        1:   58:  if (!baz(c))
    #####:   59:    return;
       1*:   60:  g = (((struct U *)b)->u2 & 2) ? 32 : __builtin_offsetof(struct V, v2);
        1:   61:  f = c->s2 % 8192;
        1:   62:  if (f == 0) {
        1:   63:    e.s2 += g;
        1:   64:    f = g;
    #####:   65:  } else if (f < g) {
    #####:   66:    foo(2, 0, c->s1, c->s2);
    #####:   67:    return;
        -:   68:  }
       1*:   69:  if ((((struct U *)b)->u2 & 1) && f == g) {
    #####:   70:    bar(*c);
    #####:   71:    foo(3, 0, c->s1, c->s2);
    #####:   72:    return;
        -:   73:  }
        1:   74:  d = (struct T *)(b + c->s2 % 8192);
       1*:   75:  if (d->t2.s1 >= c->s1 && (d->t2.s1 != c->s1 || d->t2.s2 >= c->s2))
        1:   76:    foo(4, d, c->s1, c->s2);
        1:   77:  return;
        -:   78:}
        -:   79:
        1:   80:int main() {
        1:   81:  struct S *c = 0;
        1:   82:  asm("" : "+r"(c) : "r"(&a));
        1:   83:  u.v.v2.t2.s1 = 8192;
        1:   84:  b = u.b;
        1:   85:  test(c);
        1:   86:  if (v != 16384)
    #####:   87:    abort();
        1:   88:  return 0;
        -:   89:}

        -:    0:Source:326.c
        -:    0:Graph:326.gcno
        -:    0:Data:326.gcda
        -:    0:Runs:1
        -:    1:/* Test non-canonical BID significands: _Decimal128, case where
        -:    2:   combination field starts 11.  Bug 91226.  */
        -:    3:/* { dg-do run { target { { i?86-*-* x86_64-*-* } && lp64 } } } */
        -:    4:/* { dg-options "-std=gnu2x -O2" } */
        -:    5:
        -:    6:extern void abort(void);
        -:    7:extern void exit(int);
        -:    8:
        -:    9:union u {
        -:   10:  _Decimal128 d128;
        -:   11:  unsigned __int128 u128;
        -:   12:};
        -:   13:
        -:   14:#define U128(hi, lo) (((unsigned __int128)lo) | (((unsigned __int128)hi) << 64))
        -:   15:
        1:   16:int main(void) {
        1:   17:  unsigned __int128 i = U128(0x6e79000000000000ULL, 0x1ULL);
        -:   18:  union u x;
        -:   19:  _Decimal128 d128;
        1:   20:  x.u128 = i;
        1:   21:  d128 = x.d128;
        1:   22:  volatile double d = d128;
        1:   23:  if (d != 0)
    #####:   24:    abort();
        -:   25:  /* The above number should have quantum exponent 1234.  */
        1:   26:  _Decimal128 t1233 = 0.e1233DL, t1234 = 0.e1234DL, t1235 = 0.e1235DL;
        -:   27:  _Decimal128 dx;
        1:   28:  dx = d128 + t1233;
        1:   29:  if (__builtin_memcmp(&dx, &t1233, 16) != 0)
    #####:   30:    abort();
        1:   31:  dx = d128 + t1234;
        1:   32:  if (__builtin_memcmp(&dx, &t1234, 16) != 0)
    #####:   33:    abort();
        1:   34:  dx = d128 + t1235;
        1:   35:  if (__builtin_memcmp(&dx, &t1234, 16) != 0)
    #####:   36:    abort();
        1:   37:  exit(0);
        -:   38:}

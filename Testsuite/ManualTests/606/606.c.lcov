    1|       |/* { dg-do run } */
    2|       |/* { dg-options "-O2 -fipa-sra -fdump-ipa-sra"  } */
    3|       |
    4|       |/* Check of a recursive by-reference structure split.  The recursive functions
    5|       |   have to be pure right from the start, otherwise the current AA would detect
    6|       |   possible modification of data.  */
    7|       |
    8|       |struct S {
    9|       |  float red;
   10|       |  void *blue;
   11|       |  int green;
   12|       |};
   13|       |
   14|      2|void __attribute__((noipa)) check(float r, int g, int g2) {
   15|      2|  if (r < 7.39 || r > 7.41 || g != 6 || g2 != 6)
   16|      0|    __builtin_abort();
   17|      2|  return;
   18|      2|}
   19|       |
   20|       |static int __attribute__((noinline, pure)) bar(struct S *s, int rec);
   21|       |
   22|      2|static int __attribute__((noinline, pure)) foo(struct S *s, int rec) {
   23|      2|  int t = 0;
   24|      2|  if (rec)
   25|      1|    t = bar(s, 0);
   26|      2|  check(s->red, s->green, s->green);
   27|      2|  return t;
   28|      2|}
   29|       |
   30|      2|static int __attribute__((noinline, pure)) bar(struct S *s, int rec) {
   31|      2|  int t = foo(s, rec);
   32|      2|  return t + t;
   33|      2|}
   34|       |
   35|       |volatile int g;
   36|       |
   37|      1|int main(int argc, char *argv[]) {
   38|      1|  struct S s;
   39|      1|
   40|      1|  s.red = 7.4;
   41|      1|  s.green = 6;
   42|      1|  s.blue = &s;
   43|      1|
   44|      1|  g = bar(&s, 1);
   45|      1|  return 0;
   46|      1|}
   47|       |
   48|       |/* { dg-final { scan-ipa-dump-times "Will split parameter" 2 "sra" } } */
   49|       |/* { dg-final { scan-ipa-dump-times "component at byte offset" 4 "sra" } } */


        -:    0:Source:885.c
        -:    0:Graph:885.gcno
        -:    0:Data:885.gcda
        -:    0:Runs:1
        -:    1:/* PR target/44606 */
        -:    2:/* { dg-do run } */
        -:    3:/* { dg-options "-O2" } */
        -:    4:/* { dg-skip-if "requires io" { freestanding } }  */
        -:    5:
        -:    6:#include <stdio.h>
        -:    7:
        -:    8:extern void abort(void);
        -:    9:
        -:   10:typedef struct _PixelPacket {
        -:   11:  unsigned char r, g, b;
        -:   12:} PixelPacket;
        -:   13:#define ARRAYLEN(X) (sizeof(X) / sizeof(X[0]))
        -:   14:PixelPacket q[6];
        -:   15:#define COLS (ARRAYLEN(q) - 1)
        -:   16:PixelPacket p[2 * COLS + 22];
        -:   17:#define Minify(POS, WEIGHT)                                                    \
        -:   18:  do {                                                                         \
        -:   19:    total_r += (WEIGHT) * (p[POS].r);                                          \
        -:   20:    total_g += (WEIGHT) * (p[POS].g);                                          \
        -:   21:    total_b += (WEIGHT) * (p[POS].b);                                          \
        -:   22:  } while (0)
        -:   23:unsigned long columns = COLS;
        1:   24:int main(void) {
        -:   25:  static const unsigned char answers[COLS] = {31, 32, 34, 35, 36};
        -:   26:  unsigned long x;
       33:   27:  for (x = 0; x < sizeof(p) / sizeof(p[0]); x++) {
       32:   28:    p[x].b = (x + 34) | 1;
        -:   29:  }
        6:   30:  for (x = 0; x < columns; x++) {
        5:   31:    double total_r = 0, total_g = 0, total_b = 0;
        5:   32:    double saved_r = 0, saved_g = 0, saved_b = 0;
        5:   33:    Minify(2 * x + 0, 3.0);
        5:   34:    Minify(2 * x + 1, 7.0);
        5:   35:    Minify(2 * x + 2, 7.0);
        5:   36:    saved_r = total_r;
        5:   37:    saved_g = total_g;
        5:   38:    Minify(2 * x + 11, 15.0);
        5:   39:    Minify(2 * x + 12, 7.0);
        5:   40:    Minify(2 * x + 18, 7.0);
        5:   41:    Minify(2 * x + 19, 15.0);
        5:   42:    Minify(2 * x + 20, 15.0);
        5:   43:    Minify(2 * x + 21, 7.0);
        5:   44:    q[x].r = (unsigned char)(total_r / 128.0 + 0.5);
        5:   45:    q[x].g = (unsigned char)(total_g / 128.0 + 0.5);
        5:   46:    q[x].b = (unsigned char)(total_b / 128.0 + 0.5);
        5:   47:    fprintf(stderr, "r:%f g:%f b:%f\n", saved_r, saved_g, saved_b);
        -:   48:  }
        6:   49:  for (x = 0; x < COLS; x++) {
        5:   50:    if (answers[x] != q[x].b)
    #####:   51:      abort();
        -:   52:  }
        1:   53:  return 0;
        -:   54:}

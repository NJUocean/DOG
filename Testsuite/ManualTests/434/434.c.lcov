    1|       |/* PR tree-optimization/29581 */
    2|       |/* Origin: gcc.dg/vect/vect-85.c */
    3|       |/* { dg-do run } */
    4|       |/* { dg-options "-O2 -ftree-loop-linear" } */
    5|       |
    6|       |extern void abort(void);
    7|       |
    8|    611|#define N 16
    9|       |
   10|      1|int main1(int *a) {
   11|      1|  int i, j, k;
   12|      1|  int b[N];
   13|      1|
   14|     17|  for (i = 0; i < N; i++) {
   15|    272|    for (j = 0; j < N; j++) {
   16|    256|      k = i + N;
   17|    256|      a[j] = k;
   18|    256|    }
   19|     16|    b[i] = k;
   20|     16|  }
   21|      1|
   22|     17|  for (j = 0; j < N; j++)
   23|     16|    if (a[j] != i + N - 1)
   24|      0|      abort();
   25|      1|
   26|     17|  for (j = 0; j < N; j++)
   27|     16|    if (b[j] != j + N)
   28|     16|      abort();
   29|      1|
   30|      1|  return 0;
   31|      1|}
   32|       |
   33|      1|int main(void) {
   34|      1|  int a[N] __attribute__((__aligned__(16)));
   35|      1|
   36|      1|  main1(a);
   37|      1|
   38|      1|  return 0;
   39|      1|}


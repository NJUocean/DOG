    1|       |extern void abort(void);
    2|       |
    3|       |typedef float v4flt __attribute__((vector_size(16)));
    4|       |
    5|      1|void __attribute__((noinline)) foo(float *dst, float **src, int a, int n) {
    6|      1|  int i, j;
    7|      1|  int z = sizeof(v4flt) / sizeof(float);
    8|      1|  unsigned m = sizeof(v4flt) - 1;
    9|      1|
   10|      1|  for (j = 0; j < n && (((unsigned long)dst + j) & m); ++j) {
   11|      0|    float t = src[0][j];
   12|      0|    for (i = 1; i < a; ++i)
   13|      0|      t += src[i][j];
   14|      0|    dst[j] = t;
   15|      0|  }
   16|      1|
   17|      2|  for (; j < (n - (4 * z - 1)); j += 4 * z) {
   18|      1|    v4flt t0 = *(v4flt *)(src[0] + j + 0 * z);
   19|      1|    v4flt t1 = *(v4flt *)(src[0] + j + 1 * z);
   20|      1|    v4flt t2 = *(v4flt *)(src[0] + j + 2 * z);
   21|      1|    v4flt t3 = *(v4flt *)(src[0] + j + 3 * z);
   22|      2|    for (i = 1; i < a; ++i) {
   23|      1|      t0 += *(v4flt *)(src[i] + j + 0 * z);
   24|      1|      t1 += *(v4flt *)(src[i] + j + 1 * z);
   25|      1|      t2 += *(v4flt *)(src[i] + j + 2 * z);
   26|      1|      t3 += *(v4flt *)(src[i] + j + 3 * z);
   27|      1|    }
   28|      1|    *(v4flt *)(dst + j + 0 * z) = t0;
   29|      1|    *(v4flt *)(dst + j + 1 * z) = t1;
   30|      1|    *(v4flt *)(dst + j + 2 * z) = t2;
   31|      1|    *(v4flt *)(dst + j + 3 * z) = t3;
   32|      1|  }
   33|      1|  for (; j < n; ++j) {
   34|      0|    float t = src[0][j];
   35|      0|    for (i = 1; i < a; ++i)
   36|      0|      t += src[i][j];
   37|      0|    dst[j] = t;
   38|      0|  }
   39|      1|}
   40|       |
   41|       |float buffer[64];
   42|       |
   43|      1|int main(void) {
   44|      1|  int i;
   45|      1|  float *dst, *src[2];
   46|      1|  char *cptr;
   47|      1|
   48|      1|  cptr = (char *)buffer;
   49|      1|  cptr += (-(long int)buffer & (16 * sizeof(float) - 1));
   50|      1|  dst = (float *)cptr;
   51|      1|  src[0] = dst + 16;
   52|      1|  src[1] = dst + 32;
   53|     17|  for (i = 0; i < 16; ++i) {
   54|     16|    src[0][i] = (float)i + 11 * (float)i;
   55|     16|    src[1][i] = (float)i + 12 * (float)i;
   56|     16|  }
   57|      1|  foo(dst, src, 2, 16);
   58|     17|  for (i = 0; i < 16; ++i) {
   59|     16|    float e = (float)i + 11 * (float)i + (float)i + 12 * (float)i;
   60|     16|    if (dst[i] != e)
   61|      0|      abort();
   62|     16|  }
   63|      1|  return 0;
   64|      1|}


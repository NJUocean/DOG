    1|       |/* PR tree-optimization/34244  */
    2|       |/* { dg-do run } */
    3|       |/* { dg-options "-O2 " } */
    4|       |
    5|      8|int __attribute__((noinline)) GetParent(void) {
    6|      8|  static int count = 0;
    7|      8|  count++;
    8|      8|  switch (count) {
    9|      3|  case 1:
   10|      3|  case 3:
   11|      3|  case 4:
   12|      3|    return 1;
   13|      5|  default:
   14|      5|    return 0;
   15|      8|  }
   16|      8|}
   17|      1|int __attribute__((noinline)) FindCommonAncestor(int aNode1, int aNode2) {
   18|      1|  if (aNode1 && aNode2) {
   19|      1|    int offset = 0;
   20|      1|    int anc1 = aNode1;
   21|      2|    for (;;) {
   22|      2|      ++offset;
   23|      2|      int parent = GetParent();
   24|      2|      if (!parent)
   25|      1|        break;
   26|      1|      anc1 = parent;
   27|      1|    }
   28|      1|    int anc2 = aNode2;
   29|      3|    for (;;) {
   30|      3|      --offset;
   31|      3|      int parent = GetParent();
   32|      3|      if (!parent)
   33|      1|        break;
   34|      2|      anc2 = parent;
   35|      2|    }
   36|      1|    if (anc1 == anc2) {
   37|      1|      anc1 = aNode1;
   38|      1|      anc2 = aNode2;
   39|      1|      while (offset > 0) {
   40|      0|        anc1 = GetParent();
   41|      0|        --offset;
   42|      0|      }
   43|      2|      while (offset < 0) {
   44|      1|        anc2 = GetParent();
   45|      1|        ++offset;
   46|      1|      }
   47|      2|      while (anc1 != anc2) {
   48|      1|        anc1 = GetParent();
   49|      1|        anc2 = GetParent();
   50|      1|      }
   51|      1|      return anc1;
   52|      1|    }
   53|      0|  }
   54|      0|  return 0;
   55|      0|}
   56|       |extern void abort(void);
   57|      1|int main() {
   58|      1|  if (FindCommonAncestor(1, 1) != 0)
   59|      0|    abort();
   60|      1|  return 0;
   61|      1|}


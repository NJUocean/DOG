        -:    0:Source:1942.c
        -:    0:Graph:1942.gcno
        -:    0:Data:1942.gcda
        -:    0:Runs:1
        -:    1:/* PR tree-optimization/34244  */
        -:    2:/* { dg-do run } */
        -:    3:/* { dg-options "-O2 " } */
        -:    4:
        8:    5:int __attribute__((noinline)) GetParent(void) {
        -:    6:  static int count = 0;
        8:    7:  count++;
        8:    8:  switch (count) {
        3:    9:  case 1:
        -:   10:  case 3:
        -:   11:  case 4:
        3:   12:    return 1;
        5:   13:  default:
        5:   14:    return 0;
        -:   15:  }
        -:   16:}
        1:   17:int __attribute__((noinline)) FindCommonAncestor(int aNode1, int aNode2) {
        1:   18:  if (aNode1 && aNode2) {
        1:   19:    int offset = 0;
        1:   20:    int anc1 = aNode1;
        1:   21:    for (;;) {
        2:   22:      ++offset;
        2:   23:      int parent = GetParent();
        2:   24:      if (!parent)
        1:   25:        break;
        1:   26:      anc1 = parent;
        -:   27:    }
        1:   28:    int anc2 = aNode2;
        2:   29:    for (;;) {
        3:   30:      --offset;
        3:   31:      int parent = GetParent();
        3:   32:      if (!parent)
        1:   33:        break;
        2:   34:      anc2 = parent;
        -:   35:    }
        1:   36:    if (anc1 == anc2) {
        1:   37:      anc1 = aNode1;
        1:   38:      anc2 = aNode2;
        1:   39:      while (offset > 0) {
    #####:   40:        anc1 = GetParent();
    #####:   41:        --offset;
        -:   42:      }
        2:   43:      while (offset < 0) {
        1:   44:        anc2 = GetParent();
        1:   45:        ++offset;
        -:   46:      }
        2:   47:      while (anc1 != anc2) {
        1:   48:        anc1 = GetParent();
        1:   49:        anc2 = GetParent();
        -:   50:      }
        1:   51:      return anc1;
        -:   52:    }
        -:   53:  }
    #####:   54:  return 0;
        -:   55:}
        -:   56:extern void abort(void);
        1:   57:int main() {
        1:   58:  if (FindCommonAncestor(1, 1) != 0)
    #####:   59:    abort();
        1:   60:  return 0;
        -:   61:}

        -:    0:Source:1372.c
        -:    0:Graph:1372.gcno
        -:    0:Data:1372.gcda
        -:    0:Runs:1
        -:    1:int i;
        -:    2:double d;
        -:    3:
        -:    4:/* Make sure we return a constant.  */
        -:    5:float rootbeer[__builtin_types_compatible_p(int, typeof(i))];
        -:    6:
        -:    7:typedef enum { hot, dog, poo, bear } dingos;
        -:    8:typedef enum { janette, laura, amanda } cranberry;
        -:    9:
        -:   10:typedef float same1;
        -:   11:typedef float same2;
        -:   12:
        -:   13:int main(void);
        -:   14:
        1:   15:int main(void) {
        -:   16:  /* Compatible types.  */
        -:   17:  if (!(__builtin_types_compatible_p(int, const int) &&
        -:   18:        __builtin_types_compatible_p(typeof(hot), int) &&
        -:   19:        __builtin_types_compatible_p(typeof(hot), typeof(laura)) &&
        -:   20:        __builtin_types_compatible_p(int[5], int[]) &&
        -:   21:        __builtin_types_compatible_p(same1, same2)))
        -:   22:    abort();
        -:   23:
        -:   24:  /* Incompatible types.  */
        -:   25:  if (__builtin_types_compatible_p(char *, int) ||
        -:   26:      __builtin_types_compatible_p(char *, const char *) ||
        -:   27:      __builtin_types_compatible_p(long double, double) ||
        -:   28:      __builtin_types_compatible_p(typeof(i), typeof(d)) ||
        -:   29:      __builtin_types_compatible_p(typeof(dingos), typeof(cranberry)) ||
        -:   30:      __builtin_types_compatible_p(char, int) ||
        -:   31:      __builtin_types_compatible_p(char *, char **))
        -:   32:    abort();
        1:   33:  exit(0);
        -:   34:}

    1|       |/* { dg-do run } */
    2|       |/* { dg-options "-O1 -ftree-vectorize" } */
    3|       |
    4|       |unsigned char v1[] __attribute__((aligned(16))) = {
    5|       |    0x80, 0xd0, 0x90, 0xa0, 1,    15,   10, 15, 0xa0, 0xc0, 0xb0,
    6|       |    0xf0, 2,    25,   20,   35,   3,    34, 30, 36,   0xd0, 0x80,
    7|       |    0xe0, 0xb0, 0xf0, 0xe0, 0xe0, 0x80, 25, 34, 30,   40};
    8|       |unsigned char v2[] __attribute__((aligned(16))) = {
    9|       |    4,  44,   40,   48,   0xb0, 0x80, 0x80, 0x90, 5,    55,  50,
   10|       |    51, 0xc0, 0xb0, 0xf0, 0xd0, 0xd0, 0x80, 0xa0, 0xf0, 6,   61,
   11|       |    65, 68,   7,    76,   75,   81,   0xe0, 0xf0, 0xc0, 0x90};
   12|       |
   13|       |unsigned char max[] = {0x80, 0xd0, 0x90, 0xa0, 0xb0, 0x80, 0x80, 0x90,
   14|       |                       0xa0, 0xc0, 0xb0, 0xf0, 0xc0, 0xb0, 0xf0, 0xd0,
   15|       |                       0xd0, 0x80, 0xa0, 0xf0, 0xd0, 0x80, 0xe0, 0xb0,
   16|       |                       0xf0, 0xe0, 0xe0, 0x80, 0xe0, 0xf0, 0xc0, 0x90};
   17|       |
   18|       |unsigned char min[] = {4,  44, 40, 48, 1,  15, 10, 15, 5,  55, 50,
   19|       |                       51, 2,  25, 20, 35, 3,  34, 30, 36, 6,  61,
   20|       |                       65, 68, 7,  76, 75, 81, 25, 34, 30, 40};
   21|       |
   22|       |unsigned char res[32] __attribute__((aligned(16)));
   23|       |
   24|       |extern void abort(void);
   25|       |
   26|      1|void find_max(void) {
   27|      1|  int i;
   28|      1|
   29|     33|  for (i = 0; i < 32; i++)
   30|     32|    res[i] = v1[i] < v2[i] ? v2[i] : v1[i];
   31|      1|}
   32|       |
   33|      1|void find_min(void) {
   34|      1|  int i;
   35|      1|
   36|     33|  for (i = 0; i < 32; i++)
   37|     32|    res[i] = v1[i] > v2[i] ? v2[i] : v1[i];
   38|      1|}
   39|       |
   40|      1|int main(void) {
   41|      1|  int i;
   42|      1|  int err = 0;
   43|      1|
   44|      1|  find_max();
   45|     33|  for (i = 0; i < 32; i++)
   46|     32|    if (res[i] != max[i])
   47|      0|      err++;
   48|      1|
   49|      1|  find_min();
   50|     33|  for (i = 0; i < 32; i++)
   51|     32|    if (res[i] != min[i])
   52|      0|      err++;
   53|      1|
   54|      1|  if (err)
   55|      0|    abort();
   56|      1|
   57|      1|  return 0;
   58|      1|}


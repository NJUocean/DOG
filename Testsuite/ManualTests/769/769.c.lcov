    1|       |/* PR optimization/10392
    2|       | * Reporter: marcus@mc.pp.se
    3|       | * Summary: [3.3/3.4 regression] [SH] optimizer generates faulty array indexing
    4|       | * Description:
    5|       | * The address calculation of an index operation on an array on the stack
    6|       | * can _under some conditions_ get messed up completely
    7|       | *
    8|       | * Testcase tweaked by dank@kegel.com
    9|       | * Problem only happens with -O2 -m4, so it should only happen on sh4,
   10|       | * but what the heck, let's test other architectures, too.
   11|       | * Not marked as xfail since it's a regression.
   12|       | */
   13|       |/* { dg-do run } */
   14|       |/* { dg-options "-O2" } */
   15|       |/* { dg-options "-O2 -m4" { target sh4-*-* } } */
   16|       |extern void abort(void);
   17|       |const char *dont_optimize_function_away;
   18|       |
   19|     10|const char *use(const char *str) {
   20|     10|  dont_optimize_function_away = str;
   21|     10|  if (str[0] != 'v')
   22|      0|    abort();
   23|     10|  if (str[1] < '1' || str[1] > '6')
   24|      0|    abort();
   25|     10|  if (str[2])
   26|      0|    abort();
   27|     10|  return str[2] ? "notused" : "v6";
   28|     10|}
   29|       |
   30|      1|const char *func(char *a, char *b) {
   31|      1|  char buf[128];
   32|      1|  unsigned char i;
   33|      1|  const char *result;
   34|      1|
   35|      1|  char *item[] = {
   36|      1|      "v1",
   37|      1|      "v2",
   38|      1|  };
   39|      1|
   40|      1|  buf[0] = 'v';
   41|      1|  buf[1] = '3';
   42|      1|  buf[2] = 0;
   43|      1|
   44|      3|  for (i = 0; i < 2; i++) {
   45|      2|    /* bug is: following line passes wild pointer to use() on sh4 -O2 */
   46|      2|    result = use(item[i]);
   47|      2|
   48|      2|    use(buf);
   49|      2|    use(a);
   50|      2|    use(b);
   51|      2|    result = use(result);
   52|      2|  }
   53|      1|  return result;
   54|      1|}
   55|       |
   56|      1|int main() {
   57|      1|  func("v4", "v5");
   58|      1|  return 0;
   59|      1|}


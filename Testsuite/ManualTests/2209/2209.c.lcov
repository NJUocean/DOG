    1|       |static double identity[4][4] = {
    2|       |    {1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}};
    3|       |static double expected[4][4] = {
    4|       |    {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}};
    5|       |
    6|      1|static void __attribute__((noinline, noclone)) kernel(double A[4][4]) {
    7|      1|  double tmp[4][4];
    8|      5|  for (int j = 0; j < 4; j++)
    9|     20|    for (int k = 0; k < 4; k++)
   10|     16|      tmp[j][k] = identity[j][0] * identity[j][k];
   11|      5|  for (int j = 0; j < 4; j++)
   12|     20|    for (int k = 0; k < 4; k++)
   13|     16|      A[j][k] = tmp[j][k];
   14|      1|}
   15|       |
   16|      1|int main(void) {
   17|      1|  double A[4][4] = {{0.0}};
   18|      1|  kernel(A);
   19|      5|  for (int i = 0; i < 4; i++)
   20|     20|    for (int j = 0; j < 4; j++)
   21|     16|      if (A[i][j] != expected[i][j])
   22|      0|        __builtin_abort();
   23|      1|  return 0;
   24|      1|}


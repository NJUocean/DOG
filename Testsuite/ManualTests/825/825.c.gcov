        -:    0:Source:825.c
        -:    0:Graph:825.gcno
        -:    0:Data:825.gcda
        -:    0:Runs:1
        -:    1:/* PR middle-end/32912 */
        -:    2:/* { dg-do run } */
        -:    3:/* { dg-options "-O2 -w" } */
        -:    4:/* { dg-additional-options "-fno-common" { target hppa*-*-hpux* } } */
        -:    5:/* { dg-additional-options "-msse" { target { i?86-*-* x86_64-*-* } } } */
        -:    6:/* { dg-require-effective-target sse_runtime { target { i?86-*-* x86_64-*-* } }
        -:    7: * } */
        -:    8:
        -:    9:extern void abort(void);
        -:   10:
        -:   11:typedef int __m128i __attribute__((__vector_size__(16)));
        -:   12:
        -:   13:__m128i a, b, c, d, e, f;
        -:   14:
        1:   15:void foo(__m128i x) {
        1:   16:  a = x ^ ~x;
        1:   17:  b = ~x ^ x;
        1:   18:  c = x | ~x;
        1:   19:  d = ~x | x;
        1:   20:  e = x & ~x;
        1:   21:  f = ~x & x;
        1:   22:}
        -:   23:
        1:   24:int main(void) {
        -:   25:  union {
        -:   26:    __m128i v;
        -:   27:    int i[sizeof(__m128i) / sizeof(int)];
        -:   28:  } u;
        -:   29:  int i;
        -:   30:
        5:   31:  for (i = 0; i < sizeof(u.i) / sizeof(u.i[0]); i++)
        4:   32:    u.i[i] = i * 49 - 36;
        1:   33:  foo(u.v);
        -:   34:#define check(x, val)                                                          \
        -:   35:  u.v = (x);                                                                   \
        -:   36:  for (i = 0; i < sizeof(u.i) / sizeof(u.i[0]); i++)                           \
        -:   37:    if (u.i[i] != (val))                                                       \
        -:   38:  abort()
        -:   39:
       5*:   40:  check(a, ~0);
       5*:   41:  check(b, ~0);
       5*:   42:  check(c, ~0);
       5*:   43:  check(d, ~0);
       5*:   44:  check(e, 0);
       5*:   45:  check(f, 0);
        1:   46:  return 0;
        -:   47:}

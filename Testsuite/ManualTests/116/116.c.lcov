    1|       |/* Test __atomic routines for existence and proper execution on 8 byte
    2|       |   values with each valid memory model.  */
    3|       |/* { dg-do run } */
    4|       |/* { dg-require-effective-target sync_long_long_runtime } */
    5|       |/* { dg-options "" } */
    6|       |/* { dg-options "-march=pentium" { target { { i?86-*-* x86_64-*-* } && ia32 } }
    7|       | * } */
    8|       |
    9|       |/* Test the execution of the __atomic_X builtin for a long_long.  */
   10|       |
   11|       |extern void abort(void);
   12|       |
   13|       |long long v, count, ret;
   14|       |
   15|      1|int main() {
   16|      1|  v = 0;
   17|      1|  count = 0;
   18|      1|
   19|      1|  if (__atomic_exchange_n(&v, count + 1, __ATOMIC_RELAXED) != count)
   20|      0|    abort();
   21|      1|  count++;
   22|      1|
   23|      1|  if (__atomic_exchange_n(&v, count + 1, __ATOMIC_ACQUIRE) != count)
   24|      0|    abort();
   25|      1|  count++;
   26|      1|
   27|      1|  if (__atomic_exchange_n(&v, count + 1, __ATOMIC_RELEASE) != count)
   28|      0|    abort();
   29|      1|  count++;
   30|      1|
   31|      1|  if (__atomic_exchange_n(&v, count + 1, __ATOMIC_ACQ_REL) != count)
   32|      0|    abort();
   33|      1|  count++;
   34|      1|
   35|      1|  if (__atomic_exchange_n(&v, count + 1, __ATOMIC_SEQ_CST) != count)
   36|      0|    abort();
   37|      1|  count++;
   38|      1|
   39|      1|  /* Now test the generic version.  */
   40|      1|
   41|      1|  count++;
   42|      1|
   43|      1|  __atomic_exchange(&v, &count, &ret, __ATOMIC_RELAXED);
   44|      1|  if (ret != count - 1 || v != count)
   45|      0|    abort();
   46|      1|  count++;
   47|      1|
   48|      1|  __atomic_exchange(&v, &count, &ret, __ATOMIC_ACQUIRE);
   49|      1|  if (ret != count - 1 || v != count)
   50|      0|    abort();
   51|      1|  count++;
   52|      1|
   53|      1|  __atomic_exchange(&v, &count, &ret, __ATOMIC_RELEASE);
   54|      1|  if (ret != count - 1 || v != count)
   55|      0|    abort();
   56|      1|  count++;
   57|      1|
   58|      1|  __atomic_exchange(&v, &count, &ret, __ATOMIC_ACQ_REL);
   59|      1|  if (ret != count - 1 || v != count)
   60|      0|    abort();
   61|      1|  count++;
   62|      1|
   63|      1|  __atomic_exchange(&v, &count, &ret, __ATOMIC_SEQ_CST);
   64|      1|  if (ret != count - 1 || v != count)
   65|      0|    abort();
   66|      1|  count++;
   67|      1|
   68|      1|  return 0;
   69|      1|}


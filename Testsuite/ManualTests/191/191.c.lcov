    1|       |/* Copyright (C) 2003  Free Software Foundation.
    2|       |
    3|       |   Verify that the malloc-like __builtin_ allocation functions are
    4|       |   correctly aliased by the compiler.
    5|       |
    6|       |   Written by Roger Sayle, 12th April 2003.  */
    7|       |
    8|       |/* { dg-do link } */
    9|       |/* { dg-options "-ansi" } */
   10|       |
   11|       |typedef __SIZE_TYPE__ size_t;
   12|       |
   13|       |extern void abort(void);
   14|       |extern void *malloc(size_t);
   15|       |extern void *calloc(size_t, size_t);
   16|       |
   17|       |extern void link_error(void);
   18|       |
   19|       |static int x;
   20|       |
   21|      1|void test1(void) {
   22|      1|  int *ptr1, *ptr2;
   23|      1|
   24|      1|  ptr1 = &x;
   25|      1|  ptr2 = (int *)malloc(sizeof(int));
   26|      1|
   27|      1|  *ptr1 = 12;
   28|      1|  *ptr2 = 8;
   29|      1|
   30|      1|  if (*ptr1 != 12)
   31|      0|    link_error();
   32|      1|}
   33|       |
   34|      1|void test2(void) {
   35|      1|  int *ptr1, *ptr2;
   36|      1|
   37|      1|  ptr1 = &x;
   38|      1|  ptr2 = (int *)calloc(1, sizeof(int));
   39|      1|
   40|      1|  *ptr1 = 12;
   41|      1|  *ptr2 = 8;
   42|      1|
   43|      1|  if (*ptr1 != 12)
   44|      0|    link_error();
   45|      1|}
   46|       |
   47|      1|int main() {
   48|      1|  test1();
   49|      1|  test2();
   50|      1|  return 0;
   51|      1|}
   52|       |
   53|       |#ifndef __OPTIMIZE__
   54|      0|void link_error(void) { abort(); }
   55|       |#endif


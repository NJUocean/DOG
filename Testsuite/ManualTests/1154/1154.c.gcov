        -:    0:Source:1154.c
        -:    0:Graph:1154.gcno
        -:    0:Data:1154.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-require-effective-target int128 } */
        -:    3:/* { dg-options "-fsanitize=signed-integer-overflow" } */
        -:    4:
        -:    5:/* 2^127 - 1 */
        -:    6:#define INT128_MAX                                                             \
        -:    7:  (__int128)(((unsigned __int128)1                                             \
        -:    8:              << ((__SIZEOF_INT128__ * __CHAR_BIT__) - 1)) -                   \
        -:    9:             1)
        -:   10:#define INT128_MIN (-INT128_MAX - 1)
        -:   11:
        1:   12:int main(void) {
        1:   13:  volatile __int128 i = INT128_MAX;
        1:   14:  volatile __int128 j = 1;
        1:   15:  volatile __int128 k = i + j;
        1:   16:  k = j + i;
        1:   17:  i++;
        1:   18:  j = INT128_MAX - 100;
        1:   19:  j += (1 << 10);
        -:   20:
        1:   21:  j = INT128_MIN;
        1:   22:  i = -1;
        1:   23:  k = i + j;
        1:   24:  k = j + i;
        1:   25:  j--;
        1:   26:  j = INT128_MIN + 100;
        1:   27:  j += -(1 << 10);
        -:   28:
        1:   29:  i = INT128_MAX;
        1:   30:  j = 2;
        1:   31:  k = i * j;
        -:   32:
        1:   33:  i = INT128_MIN;
        1:   34:  i = -i;
        -:   35:
        1:   36:  return 0;
        -:   37:}
        -:   38:
        -:   39:/* { dg-output "signed integer overflow: 0x7fffffffffffffffffffffffffffffff \\+
        -:   40: * 1 cannot be represented in type '__int128'(\n|\r\n|\r)" } */
        -:   41:/* { dg-output "\[^\n\r]*signed integer overflow: 1 \\+
        -:   42: * 0x7fffffffffffffffffffffffffffffff cannot be represented in type
        -:   43: * '__int128'(\n|\r\n|\r)" } */
        -:   44:/* { dg-output "\[^\n\r]*signed integer overflow:
        -:   45: * 0x7fffffffffffffffffffffffffffffff \\+ 1 cannot be represented in type
        -:   46: * '__int128'(\n|\r\n|\r)" } */
        -:   47:/* { dg-output "\[^\n\r]*signed integer overflow:
        -:   48: * 0x7fffffffffffffffffffffffffffff9b \\+ 1024 cannot be represented in type
        -:   49: * '__int128'(\n|\r\n|\r)" } */
        -:   50:/* { dg-output "\[^\n\r]*signed integer overflow: -1 \\+
        -:   51: * 0x80000000000000000000000000000000 cannot be represented in type
        -:   52: * '__int128'(\n|\r\n|\r)" } */
        -:   53:/* { dg-output "\[^\n\r]*signed integer overflow:
        -:   54: * 0x80000000000000000000000000000000 \\+ -1 cannot be represented in type
        -:   55: * '__int128'(\n|\r\n|\r)" } */
        -:   56:/* { dg-output "\[^\n\r]*signed integer overflow:
        -:   57: * 0x80000000000000000000000000000000 - 1 cannot be represented in type
        -:   58: * '__int128'(\n|\r\n|\r)" } */
        -:   59:/* { dg-output "\[^\n\r]*signed integer overflow:
        -:   60: * 0x80000000000000000000000000000064 \\+ -1024 cannot be represented in type
        -:   61: * '__int128'(\n|\r\n|\r)" } */
        -:   62:/* { dg-output "\[^\n\r]*signed integer overflow:
        -:   63: * 0x7fffffffffffffffffffffffffffffff \\* 2 cannot be represented in type
        -:   64: * '__int128'(\n|\r\n|\r)" } */
        -:   65:/* { dg-output "\[^\n\r]*negation of 0x80000000000000000000000000000000 cannot
        -:   66: * be represented in type '__int128'; cast to an unsigned type to negate this
        -:   67: * value to itself" } */

        -:    0:Source:1083.c
        -:    0:Graph:1083.gcno
        -:    0:Data:1083.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do-compile } */
        -:    2:/* { dg-options "-O2 -Warray-bounds" } */
        -:    3:
        -:    4:#include <assert.h>
        -:    5:#include <stdio.h>
        -:    6:#include <string.h>
        -:    7:
        1:    8:static inline __attribute__((__artificial__)) void *a(char *c, const char *d,
        -:    9:                                                      long n) {
        1:   10:  return __builtin___memcpy_chk(c, d, n, __builtin_object_size(c, 0));
        -:   11:}
        -:   12:typedef struct {
        -:   13:  char *data;
        -:   14:  int len;
        -:   15:} sb_t;
        -:   16:const char __sb_slop[1];
        2:   17:static void inline set0(sb_t *c) {
        2:   18:  if (c->data != __sb_slop)
        2:   19:    c->data[0] = 0;
        -:   20:  else
    #####:   21:    assert(c->data[0] == 0);
        2:   22:}
        -:   23:char buf[5];
        -:   24:sb_t l = {.data = buf, .len = 0};
        1:   25:void o() {
        1:   26:  char *data = "abcd";
        1:   27:  sb_t h = l;
        1:   28:  set0(&h);
        1:   29:  a(h.data, data, strlen(data));
        1:   30:  printf("%s\n", h.data);
        1:   31:  printf("%d\n", h.data == __sb_slop);
        1:   32:  printf("%d\n", h.data == buf);
        1:   33:  set0(&h);
        1:   34:}
        1:   35:int main(void) {
        1:   36:  o();
        1:   37:  return 0;
        -:   38:}

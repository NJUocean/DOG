    1|       |/* { dg-do run } */
    2|       |/* { dg-options "-O3 -fdump-tree-optimized" } */
    3|       |
    4|       |typedef __INT8_TYPE__ v16qi
    5|       |    __attribute__((vector_size(16), may_alias, aligned(1)));
    6|       |typedef __INT32_TYPE__ v4si
    7|       |    __attribute__((vector_size(16), may_alias, aligned(1)));
    8|       |
    9|       |const __INT32_TYPE__ x[8] = {1, 2, 3, 4, 5, 6, 7, 8};
   10|       |const __INT8_TYPE__ y[32] = {0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10,
   11|       |                             11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
   12|       |                             22, 23, 24, 25, 26, 27, 28, 29, 30, 31};
   13|       |const __INT32_TYPE__ z[8] = {[3] = 3, [1] = 1};
   14|       |
   15|      1|int main() {
   16|      1|  v4si v1 = *(v4si *)(x + 1);
   17|      5|  for (unsigned i = 0; i < 4; ++i)
   18|      4|    if (v1[i] != (v4si){2, 3, 4, 5}[i])
   19|      0|      __builtin_abort();
   20|      1|  v4si v2 = *(v4si *)z;
   21|      5|  for (unsigned i = 0; i < 4; ++i)
   22|      4|    if (v2[i] != (v4si){0, 1, 0, 3}[i])
   23|      0|      __builtin_abort();
   24|      1|  v4si v3 = *(v4si *)(y + 1);
   25|      5|  for (unsigned i = 0; i < 4; ++i)
   26|      4|    if (v3[i] !=
   27|       |#if __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
   28|       |        (v4si){0x01020304, 0x05060708, 0x090a0b0c, 0x0d0e0f10}[i]
   29|       |#elif __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__
   30|       |        (v4si){0x04030201, 0x08070605, 0x0c0b0a09, 0x100f0e0d}[i]
   31|       |#else
   32|       |        v3[i]
   33|       |#endif
   34|      0|    )
   35|      0|      __builtin_abort();
   36|      1|  return 0;
   37|      1|}
   38|       |
   39|       |/* { dg-final { scan-tree-dump-not "abort" "optimized" } } */


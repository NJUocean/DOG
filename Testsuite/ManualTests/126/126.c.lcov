    1|       |/* Test __atomic routines for existence and proper execution on 4 byte
    2|       |   values with each valid memory model.  */
    3|       |/* { dg-do run } */
    4|       |/* { dg-require-effective-target sync_int_long } */
    5|       |
    6|       |/* Test the execution of the __atomic_store_n builtin for an int.  */
    7|       |
    8|       |extern void abort(void);
    9|       |
   10|       |int v, count;
   11|       |
   12|      1|int main() {
   13|      1|  v = 0;
   14|      1|  count = 0;
   15|      1|
   16|      1|  __atomic_store_n(&v, count + 1, __ATOMIC_RELAXED);
   17|      1|  if (v != ++count)
   18|      0|    abort();
   19|      1|
   20|      1|  __atomic_store_n(&v, count + 1, __ATOMIC_RELEASE);
   21|      1|  if (v != ++count)
   22|      0|    abort();
   23|      1|
   24|      1|  __atomic_store_n(&v, count + 1, __ATOMIC_SEQ_CST);
   25|      1|  if (v != ++count)
   26|      0|    abort();
   27|      1|
   28|      1|  /* Now test the generic variant.  */
   29|      1|  count++;
   30|      1|
   31|      1|  __atomic_store(&v, &count, __ATOMIC_RELAXED);
   32|      1|  if (v != count++)
   33|      0|    abort();
   34|      1|
   35|      1|  __atomic_store(&v, &count, __ATOMIC_RELEASE);
   36|      1|  if (v != count++)
   37|      0|    abort();
   38|      1|
   39|      1|  __atomic_store(&v, &count, __ATOMIC_SEQ_CST);
   40|      1|  if (v != count)
   41|      0|    abort();
   42|      1|
   43|      1|  return 0;
   44|      1|}


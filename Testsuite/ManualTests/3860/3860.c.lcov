    1|       |/* Test recovery mode.  */
    2|       |/* { dg-do run } */
    3|       |/* { dg-options "-fsanitize-recover=address" } */
    4|       |/* { dg-set-target-env-var ASAN_OPTIONS "halt_on_error=false" } */
    5|       |
    6|       |#include <string.h>
    7|       |
    8|       |volatile int ten = 10;
    9|       |
   10|      1|int main() {
   11|      1|  char x[10];
   12|      1|  __builtin_memset(x, 0, ten + 1);
   13|      1|  asm volatile("" : : : "memory");
   14|      1|  volatile int res = x[ten];
   15|      1|  x[ten] = res + 3;
   16|      1|  res = x[ten];
   17|      1|  return 0;
   18|      1|}
   19|       |
   20|       |/* { dg-output "WRITE of size 11 at 0x\[0-9a-f\]+ thread
   21|       | * T0\[^\n\r]*(\n|\r\n|\r).*" } */
   22|       |/* { dg-output "\[^\n\r]*READ of size 1 at 0x\[0-9a-f\]+ thread
   23|       | * T0\[^\n\r]*(\n|\r\n|\r).*" } */
   24|       |/* { dg-output "\[^\n\r]*WRITE of size 1 at 0x\[0-9a-f\]+ thread
   25|       | * T0\[^\n\r]*(\n|\r\n|\r).*" } */
   26|       |/* { dg-output "\[^\n\r]*READ of size 1 at 0x\[0-9a-f\]+ thread
   27|       | * T0\[^\n\r]*(\n|\r\n|\r).*" } */


    1|       |/* PR tree-optimization/53366 */
    2|       |/* { dg-do run } */
    3|       |
    4|       |extern void abort(void);
    5|       |
    6|       |struct T {
    7|       |  float r[3], i[3];
    8|       |};
    9|       |struct U {
   10|       |  struct T j[4];
   11|       |};
   12|       |
   13|       |void __attribute__((noinline))
   14|      1|foo(struct U *__restrict y, const float _Complex *__restrict x) {
   15|      1|  int i, j;
   16|      5|  for (j = 0; j < 4; ++j) {
   17|      4|    float a = __real__ x[j];
   18|      4|    float b = __imag__ x[j];
   19|      4|    float c = __real__ x[j + 4];
   20|      4|    float d = __imag__ x[j + 4];
   21|     16|    for (i = 0; i < 3; ++i) {
   22|     12|      y->j[j].r[i] = y->j[j].r[i] + a + c;
   23|     12|      y->j[j].i[i] = y->j[j].i[i] + b + d;
   24|     12|    }
   25|      4|  }
   26|      1|}
   27|       |
   28|       |_Complex float x[8];
   29|       |struct U y;
   30|       |
   31|      1|int main() {
   32|      1|  int i, j;
   33|      9|  for (i = 0; i < 8; ++i) {
   34|      8|    x[i] = i + 1.0iF * (2 * i);
   35|      8|    __asm__ volatile("");
   36|      8|  }
   37|      1|  foo(&y, x);
   38|      5|  for (j = 0; j < 4; ++j)
   39|     16|    for (i = 0; i < 3; ++i)
   40|     12|      if (y.j[j].r[i] != __real__(x[j] + x[j + 4]) ||
   41|     12|          y.j[j].i[i] != __imag__(x[j] + x[j + 4]))
   42|      0|        __builtin_abort();
   43|      1|  return 0;
   44|      1|}


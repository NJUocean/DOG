        -:    0:Source:1412.c
        -:    0:Graph:1412.gcno
        -:    0:Data:1412.gcda
        -:    0:Runs:1
        -:    1:/* PR tree-optimization/53366 */
        -:    2:/* { dg-do run } */
        -:    3:
        -:    4:extern void abort(void);
        -:    5:
        -:    6:struct T {
        -:    7:  float r[3], i[3];
        -:    8:};
        -:    9:struct U {
        -:   10:  struct T j[4];
        -:   11:};
        -:   12:
        -:   13:void __attribute__((noinline))
        1:   14:foo(struct U *__restrict y, const float _Complex *__restrict x) {
        -:   15:  int i, j;
        5:   16:  for (j = 0; j < 4; ++j) {
        4:   17:    float a = __real__ x[j];
        4:   18:    float b = __imag__ x[j];
        4:   19:    float c = __real__ x[j + 4];
        4:   20:    float d = __imag__ x[j + 4];
       16:   21:    for (i = 0; i < 3; ++i) {
       12:   22:      y->j[j].r[i] = y->j[j].r[i] + a + c;
       12:   23:      y->j[j].i[i] = y->j[j].i[i] + b + d;
        -:   24:    }
        -:   25:  }
        1:   26:}
        -:   27:
        -:   28:_Complex float x[8];
        -:   29:struct U y;
        -:   30:
        1:   31:int main() {
        -:   32:  int i, j;
        9:   33:  for (i = 0; i < 8; ++i) {
        8:   34:    x[i] = i + 1.0iF * (2 * i);
        8:   35:    __asm__ volatile("");
        -:   36:  }
        1:   37:  foo(&y, x);
        5:   38:  for (j = 0; j < 4; ++j)
       16:   39:    for (i = 0; i < 3; ++i)
       12:   40:      if (y.j[j].r[i] != __real__(x[j] + x[j + 4]) ||
       12:   41:          y.j[j].i[i] != __imag__(x[j] + x[j + 4]))
    #####:   42:        __builtin_abort();
        1:   43:  return 0;
        -:   44:}

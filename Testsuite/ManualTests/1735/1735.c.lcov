    1|       |/* { dg-do run { target int128 } } */
    2|       |/* { dg-additional-options "-fgcse-after-reload" } */
    3|       |
    4|       |typedef unsigned char u8;
    5|       |typedef unsigned short u16;
    6|       |typedef unsigned int u32;
    7|       |typedef unsigned long long u64;
    8|       |int a, b, c;
    9|      1|int d(u16 e, u64 f) {
   10|      1|  b |= e;
   11|      1|#if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__
   12|      1|  __builtin_memset(&f, e, 2);
   13|       |#elif (__BYTE_ORDER__ == __ORDER_BIG_ENDIAN__ ||                               \
   14|       |       __BYTE_ORDER__ == __ORDER_PDP_ENDIAN__)
   15|       |  __builtin_memset((char *)&f + sizeof(f) - 2, e, 2);
   16|       |#else
   17|       |#error "endian unknown?"
   18|       |#endif
   19|      1|  a = (u16)-e >= 2 ?: __builtin_popcountll(f);
   20|      1|  return a + c;
   21|      1|}
   22|       |
   23|      1|int main(void) {
   24|      1|  __int128 x = d(~0, 0);
   25|      1|  if (x != 16)
   26|      0|    __builtin_abort();
   27|      1|  return 0;
   28|      1|}


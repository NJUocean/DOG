    1|       |/* { dg-do run } */
    2|       |/* { dg-options "-fsanitize=signed-integer-overflow -Wno-unused-variable
    3|       | * -fno-sanitize-recover=signed-integer-overflow" } */
    4|       |
    5|       |#define SCHAR_MAX __SCHAR_MAX__
    6|      1|#define SCHAR_MIN (-__SCHAR_MAX__ - 1)
    7|       |#define SHRT_MAX __SHRT_MAX__
    8|      1|#define SHRT_MIN (-__SHRT_MAX__ - 1)
    9|      1|#define INT_MAX __INT_MAX__
   10|      1|#define INT_MIN (-__INT_MAX__ - 1)
   11|       |
   12|     10|void __attribute__((noinline, noclone)) check(int i, int j) {
   13|     10|  if (i != j)
   14|      0|    __builtin_abort();
   15|     10|}
   16|       |
   17|      1|int main(void) {
   18|      1|#if __INT_MAX__ == 2147483647
   19|      1|  /* Here, nothing should fail.  */
   20|      1|  volatile int i = -1;
   21|      1|  volatile int j = INT_MIN;
   22|      1|  volatile int k = j - i;
   23|      1|  check(k, -2147483647);
   24|      1|  k = i - j;
   25|      1|  check(k, 2147483647);
   26|      1|  j++;
   27|      1|  check(j, -2147483647);
   28|      1|
   29|      1|  i = 1;
   30|      1|  j = INT_MAX;
   31|      1|  k = i - j;
   32|      1|  check(k, -2147483646);
   33|      1|  k = j - i;
   34|      1|  check(k, 2147483646);
   35|      1|  j--;
   36|      1|  check(k, 2147483646);
   37|      1|#endif
   38|      1|
   39|      1|  /* Test integer promotion.  */
   40|      1|#if __SCHAR_MAX__ == 127
   41|      1|  volatile signed char a = SCHAR_MIN;
   42|      1|  volatile signed char b = 1;
   43|      1|  volatile signed char c = a - b;
   44|      1|  check(c, 127);
   45|      1|  a--;
   46|      1|  check(a, 127);
   47|      1|#endif
   48|      1|
   49|      1|#if __SHRT_MAX__ == 32767
   50|      1|  volatile short d = SHRT_MIN;
   51|      1|  volatile short e = 1;
   52|      1|  volatile short f = d - e;
   53|      1|  check(f, 32767);
   54|      1|  d--;
   55|      1|  check(d, 32767);
   56|      1|#endif
   57|      1|  return 0;
   58|      1|}


        -:    0:Source:2686.c
        -:    0:Graph:2686.gcno
        -:    0:Data:2686.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run { target lp64 } } */
        -:    2:/* { dg-options "-O2" } */
        -:    3:
        -:    4:void abort(void);
        -:    5:
        -:    6:char global;
        -:    7:
        -:    8:__attribute__((sysv_abi, noinline, noclone)) void
        3:    9:sysv_abi_func(char const *desc, void *local) {
        -:   10:  register int esi asm("esi");
        -:   11:  register int edi asm("edi");
        -:   12:
        3:   13:  if (local != &global)
    #####:   14:    abort();
        -:   15:
        -:   16:  /* Clobber some of the extra SYSV ABI registers.  */
        3:   17:  asm volatile("movl\t%2, %0\n\tmovl\t%2, %1"
        -:   18:               : "=r"(esi), "=r"(edi)
        -:   19:               : "i"(0xdeadbeef));
        3:   20:}
        -:   21:
        1:   22:__attribute__((ms_abi, noinline, noclone)) void ms_abi_func() {
        1:   23:  sysv_abi_func("1st call", &global);
        1:   24:  sysv_abi_func("2nd call", &global);
        1:   25:  sysv_abi_func("3rd call", &global);
        1:   26:}
        -:   27:
        1:   28:int main(void) {
        1:   29:  ms_abi_func();
        1:   30:  return 0;
        -:   31:}

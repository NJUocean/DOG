    1|       |/* { dg-do compile } */
    2|       |/* { dg-options "-O2 -funsafe-math-optimizations -ftrapping-math
    3|       | * -fdump-tree-recip -fdump-tree-lim2" } */
    4|       |/* { dg-warning "'-fassociative-math' disabled" "" { target *-*-* } 0 } */
    5|       |
    6|       |double F[2] = {0., 0.}, e = 0.;
    7|       |
    8|      1|int main() {
    9|      1|  int i;
   10|      1|  double E, W, P, d;
   11|      1|
   12|      1|  /* make sure the program crashes on FP exception */
   13|      1|  unsigned short int Mask;
   14|      1|
   15|      1|  W = 1.;
   16|      1|  d = 2. * e;
   17|      1|  E = 1. - d;
   18|      1|
   19|      3|  for (i = 0; i < 2; i++)
   20|      2|    if (d > 0.01) {
   21|      0|      P = (W < E) ? (W - E) / d : (E - W) / d;
   22|      0|      F[i] += P;
   23|      0|    }
   24|      1|
   25|      1|  return 0;
   26|      1|}
   27|       |
   28|       |/* LIM only performs the transformation in the no-trapping-math case.  In
   29|       |   the future we will do it for trapping-math as well in recip, check that
   30|       |   this is not wrongly optimized.  */
   31|       |/* { dg-final { scan-tree-dump-not "reciptmp" "lim2" } } */
   32|       |/* { dg-final { scan-tree-dump-not "reciptmp" "recip" } } */


    1|       |/* Test that __builtin_prefetch does no harm.
    2|       |
    3|       |   Use addresses that are unlikely to be word-aligned.  Some targets
    4|       |   have alignment requirements for prefetch addresses, so make sure the
    5|       |   compiler takes care of that.  This fails if it aborts, anything else
    6|       |   is OK.  */
    7|       |
    8|       |struct S {
    9|       |  short a;
   10|       |  short b;
   11|       |  char c[8];
   12|       |} s;
   13|       |
   14|       |char arr[100];
   15|       |char *ptr = arr;
   16|       |int idx = 3;
   17|       |
   18|      2|void arg_ptr(char *p) { __builtin_prefetch(p, 0, 0); }
   19|       |
   20|      2|void arg_idx(char *p, int i) { __builtin_prefetch(&p[i], 0, 0); }
   21|       |
   22|      2|void glob_ptr(void) { __builtin_prefetch(ptr, 0, 0); }
   23|       |
   24|      2|void glob_idx(void) { __builtin_prefetch(&ptr[idx], 0, 0); }
   25|       |
   26|      1|int main() {
   27|      1|  __builtin_prefetch(&s.b, 0, 0);
   28|      1|  __builtin_prefetch(&s.c[1], 0, 0);
   29|      1|
   30|      1|  arg_ptr(&s.c[1]);
   31|      1|  arg_ptr(ptr + 3);
   32|      1|  arg_idx(ptr, 3);
   33|      1|  arg_idx(ptr + 1, 2);
   34|      1|  idx = 3;
   35|      1|  glob_ptr();
   36|      1|  glob_idx();
   37|      1|  ptr++;
   38|      1|  idx = 2;
   39|      1|  glob_ptr();
   40|      1|  glob_idx();
   41|      1|  exit(0);
   42|      1|}


        -:    0:Source:1519.c
        -:    0:Graph:1519.gcno
        -:    0:Data:1519.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-require-effective-target int32plus } */
        -:    3:
        -:    4:extern void abort(void);
        -:    5:extern int memcmp(const void *, const void *, __SIZE_TYPE__);
        -:    6:
        1:    7:void __attribute__((noinline, noclone)) foo(int *in) {
        -:    8:  int i;
       54:    9:  for (i = 62; i >= 10; i--) {
       53:   10:    in[i - 8] -= in[i];
       53:   11:    in[i - 5] += in[i] * 2;
       53:   12:    in[i - 4] += in[i];
        -:   13:  }
        1:   14:}
        -:   15:
        1:   16:int main() {
        -:   17:  int x[64];
        1:   18:  int y[64] = {
        -:   19:      0,       1,       -2380134, -1065336, -1026376, 3264240, 3113534, 2328130,
        -:   20:      3632054, 3839634, 2380136,  1065339,  1026380,  1496037, 1397286, 789976,
        -:   21:      386408,  450984,  597112,   497464,   262008,   149184,  194768,  231519,
        -:   22:      173984,  87753,   60712,    82042,    87502,    60014,   30050,   25550,
        -:   23:      33570,   32386,   20464,    10675,    10868,    13329,   11794,   6892,
        -:   24:      3988,    4564,    5148,     4228,     2284,     1568,    1848,    1943,
        -:   25:      1472,    741,     628,      702,      714,      474,     230,     234,
        -:   26:      238,     242,     120,      59,       60,       61,      62,      63};
        -:   27:  int i;
        -:   28:
       65:   29:  for (i = 0; i < 64; ++i) {
       64:   30:    x[i] = i;
       64:   31:    __asm__ volatile("");
        -:   32:  }
        -:   33:
        1:   34:  foo(x);
        -:   35:
        1:   36:  if (memcmp(x, y, sizeof(x)) != 0)
    #####:   37:    abort();
        -:   38:
        1:   39:  return 0;
        -:   40:}

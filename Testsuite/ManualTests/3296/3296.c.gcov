        -:    0:Source:3296.c
        -:    0:Graph:3296.gcno
        -:    0:Data:3296.gcda
        -:    0:Runs:1
        -:    1:/* PR optimization/8634 */
        -:    2:/* Contributed by Glen Nakamura <glen at imodulo dot com> */
        -:    3:
        -:    4:extern void abort(void);
        -:    5:
        -:    6:struct foo {
        -:    7:  char a, b, c, d, e, f, g, h, i, j;
        -:    8:};
        -:    9:
        1:   10:int test1() {
        1:   11:  const char X[8] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'};
        -:   12:  char buffer[8];
        1:   13:  __builtin_memcpy(buffer, X, 8);
        1:   14:  if (buffer[0] != 'A' || buffer[1] != 'B' || buffer[2] != 'C' ||
        1:   15:      buffer[3] != 'D' || buffer[4] != 'E' || buffer[5] != 'F' ||
        1:   16:      buffer[6] != 'G' || buffer[7] != 'H')
    #####:   17:    abort();
        1:   18:  return 0;
        -:   19:}
        -:   20:
        1:   21:int test2() {
        1:   22:  const char X[10] = {'A', 'B', 'C', 'D', 'E'};
        -:   23:  char buffer[10];
        1:   24:  __builtin_memcpy(buffer, X, 10);
        1:   25:  if (buffer[0] != 'A' || buffer[1] != 'B' || buffer[2] != 'C' ||
        1:   26:      buffer[3] != 'D' || buffer[4] != 'E' || buffer[5] != '\0' ||
        1:   27:      buffer[6] != '\0' || buffer[7] != '\0' || buffer[8] != '\0' ||
        1:   28:      buffer[9] != '\0')
    #####:   29:    abort();
        1:   30:  return 0;
        -:   31:}
        -:   32:
        1:   33:int test3() {
        1:   34:  const struct foo X = {a : 'A', c : 'C', e : 'E', g : 'G', i : 'I'};
        -:   35:  char buffer[10];
        1:   36:  __builtin_memcpy(buffer, &X, 10);
        1:   37:  if (buffer[0] != 'A' || buffer[1] != '\0' || buffer[2] != 'C' ||
        1:   38:      buffer[3] != '\0' || buffer[4] != 'E' || buffer[5] != '\0' ||
        1:   39:      buffer[6] != 'G' || buffer[7] != '\0' || buffer[8] != 'I' ||
        1:   40:      buffer[9] != '\0')
    #####:   41:    abort();
        1:   42:  return 0;
        -:   43:}
        -:   44:
        1:   45:int test4() {
        1:   46:  const struct foo X = {.b = 'B', .d = 'D', .f = 'F', .h = 'H', .j = 'J'};
        -:   47:  char buffer[10];
        1:   48:  __builtin_memcpy(buffer, &X, 10);
        1:   49:  if (buffer[0] != '\0' || buffer[1] != 'B' || buffer[2] != '\0' ||
        1:   50:      buffer[3] != 'D' || buffer[4] != '\0' || buffer[5] != 'F' ||
        1:   51:      buffer[6] != '\0' || buffer[7] != 'H' || buffer[8] != '\0' ||
        1:   52:      buffer[9] != 'J')
    #####:   53:    abort();
        1:   54:  return 0;
        -:   55:}
        -:   56:
        1:   57:int main() {
        1:   58:  test1();
        1:   59:  test2();
        1:   60:  test3();
        1:   61:  test4();
        1:   62:  return 0;
        -:   63:}

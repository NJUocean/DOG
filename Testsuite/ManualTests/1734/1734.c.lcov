    1|       |/* { dg-do run { target int128 } } */
    2|       |/* { dg-additional-options "-fgcse-after-reload" } */
    3|       |
    4|       |typedef unsigned char u8;
    5|       |typedef unsigned short u16;
    6|       |typedef unsigned int u32;
    7|       |typedef unsigned long long u64;
    8|       |int a, b, c;
    9|       |__int128 e;
   10|      1|int d(u16 g) {
   11|      1|  u64 f = __builtin_bswap64(c);
   12|      1|  f = g == a;
   13|      1|#if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__
   14|      1|  __builtin_memmove(&f, &e, 1);
   15|       |#elif __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
   16|       |  __builtin_memmove((char *)&f + sizeof(f) - 1, (char *)&e + sizeof(e) - 1, 1);
   17|       |#elif __BYTE_ORDER__ == __ORDER_PDP_ENDIAN__
   18|       |  __builtin_memmove((char *)&f + sizeof(f) - 2, (char *)&e + sizeof(e) - 2, 1);
   19|       |#else
   20|       |#error "endian unknown?"
   21|       |#endif
   22|      1|  e >>= b;
   23|      1|  return a + f;
   24|      1|}
   25|       |
   26|      1|int main(void) {
   27|      1|  __int128 x = d(0);
   28|      1|  if (x != 0)
   29|      0|    __builtin_abort();
   30|      1|  return 0;
   31|      1|}


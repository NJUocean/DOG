    1|       |/* Compiler Test Generator Program.
    2|       |   Copyright (C) 1989 FSF.  */
    3|       |
    4|       |#define E0 ((type *)10000000)
    5|       |#define reg0 r0
    6|       |#define indreg0 (*p0)
    7|       |#define imm0 22
    8|       |#define limm0 ((type)(int)&glob0)
    9|       |#define adr0 (*E0)
   10|       |#define adrreg0 (p0[10000000])
   11|       |#define adrx0 (E0[x0])
   12|       |#define regx0 (p0[x0])
   13|       |
   14|       |#define E1 ((type *)11111111)
   15|       |#define reg1 r1
   16|       |#define indreg1 (*p1)
   17|       |#define imm1 33
   18|       |#define limm1 ((type)(int)&glob1)
   19|       |#define adr1 (*E1)
   20|       |#define adrreg1 (p1[1111111 / 4])
   21|       |#define adrx1 (E1[x1])
   22|       |#define regx1 (p1[x1])
   23|       |
   24|       |int glob0, glob1;
   25|       |
   26|       |#define type double
   27|       |
   28|       |char *a0[] = {"reg0", "indreg0", "imm0",  "limm0",
   29|       |              "adr0", "adrreg0", "adrx0", "regx0"};
   30|       |char *a1[] = {"reg1", "indreg1", "imm1",  "limm1",
   31|       |              "adr1", "adrreg1", "adrx1", "regx1"};
   32|       |
   33|      0|main_compare() {
   34|      0|  int i0, i1;
   35|      0|
   36|      0|  for (i0 = 0; i0 < 8; i0++) {
   37|      0|    for (i1 = 0; i1 < 8; i1++) {
   38|      0|      printf("%s%s_cmp (r0, r1, x0, x1, p0, p1)\n", a0[i0], a1[i1]);
   39|      0|      printf("type r0, r1;  type *p0, *p1;\n");
   40|      0|      printf("{if (%s <= %s) return 1; else return 0;}\n\n", a0[i0], a1[i1],
   41|      0|             a0[i0]);
   42|      0|    }
   43|      0|  }
   44|      0|}
   45|       |
   46|      1|main_assign() {
   47|      1|  int i0, i1;
   48|      1|
   49|      9|  for (i0 = 0; i0 < 8; i0++) {
   50|      8|    if (i0 < 2 || i0 > 3)
   51|     54|      for (i1 = 0; i1 < 8; i1++) {
   52|     48|        printf("%s%s_set (r0, r1, x0, x1, p0, p1)\n", a0[i0], a1[i1]);
   53|     48|        printf("type r0, r1;  type *p0, *p1;\n");
   54|     48|        printf("{%s = %s;  }\n\n", a0[i0], a1[i1]);
   55|     48|      }
   56|      8|  }
   57|      1|}
   58|       |
   59|      1|main() { main_assign(); }


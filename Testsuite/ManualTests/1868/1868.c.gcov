        -:    0:Source:1868.c
        -:    0:Graph:1868.gcno
        -:    0:Data:1868.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-options "-O2" } */
        -:    3:
        -:    4:/* Test derived from PR 14643.  When a function has no addressable
        -:    5:   variables but 2 or more pointers have conflicting memory tags, they
        -:    6:   were not being processed by the type based alias analyzer,
        -:    7:   resulting in optimizations removing a non-redundant load.  */
        -:    8:
        -:    9:extern void abort(void);
        -:   10:
        -:   11:struct bar {
        -:   12:  int count;
        -:   13:  int *arr;
        -:   14:};
        -:   15:
        1:   16:void foo(struct bar *b) {
        1:   17:  b->count = 0;
        1:   18:  *(b->arr) = 2;
        1:   19:  if (b->count == 0) /* b->count can't be assumed to be 0 here.  */
    #####:   20:    abort();
        1:   21:}
        -:   22:
        1:   23:int main() {
        -:   24:  struct bar x;
        1:   25:  x.arr = &x.count;
        1:   26:  foo(&x);
        1:   27:  return 0;
        -:   28:}

    1|       |/* This tests for a bug in regstack that was breaking glibc's math library. */
    2|       |/* { dg-skip-if "" { ! { i?86-*-* x86_64-*-* } } } */
    3|       |
    4|       |extern void abort(void);
    5|       |
    6|      1|static __inline double minus_zero(void) {
    7|      1|  union {
    8|      1|    double __d;
    9|      1|    int __i[2];
   10|      1|  } __x;
   11|      1|  __x.__i[0] = 0x0;
   12|      1|  __x.__i[1] = 0x80000000;
   13|      1|  return __x.__d;
   14|      1|}
   15|       |
   16|      1|static __inline long double __atan2l(long double __y, long double __x) {
   17|      1|  register long double __value;
   18|      1|  __asm __volatile__("fpatan\n\t"
   19|      1|                     : "=t"(__value)
   20|      1|                     : "0"(__x), "u"(__y)
   21|      1|                     : "st(1)");
   22|      1|  return __value;
   23|      1|}
   24|       |
   25|      1|static __inline long double __sqrtl(long double __x) {
   26|      1|  register long double __result;
   27|      1|  __asm __volatile__("fsqrt" : "=t"(__result) : "0"(__x));
   28|      1|  return __result;
   29|      1|}
   30|       |
   31|      1|static __inline double asin(double __x) {
   32|      1|  return __atan2l(__x, __sqrtl(1.0 - __x * __x));
   33|      1|}
   34|       |
   35|      1|int main(void) {
   36|      1|  double x;
   37|      1|
   38|      1|  x = minus_zero();
   39|      1|  x = asin(x);
   40|      1|
   41|      1|  if (x != 0.0) /* actually -0.0, but 0.0 == -0.0 */
   42|      0|    abort();
   43|      1|  return 0;
   44|      1|}


    1|       |/* Problem originally visible on ia64.
    2|       |
    3|       |   There is a partial redundancy of "in + 1" that makes GCSE want to
    4|       |   transform the final while loop to
    5|       |
    6|       |     p = in + 1;
    7|       |     tmp = p;
    8|       |     ...
    9|       |     goto start;
   10|       |   top:
   11|       |     tmp = tmp + 1;
   12|       |   start:
   13|       |     in = tmp;
   14|       |     if (in < p) goto top;
   15|       |
   16|       |   We miscalculate the number of loop iterations as (p - tmp) = 0
   17|       |   instead of (p - in) = 1, which results in overflow in the doloop
   18|       |   optimization.  */
   19|       |
   20|      1|static const char *test(const char *in, char *out) {
   21|      2|  while (1) {
   22|      2|    if (*in == 'a') {
   23|      2|      const char *p = in + 1;
   24|      2|      while (*p == 'x')
   25|      0|        ++p;
   26|      2|      if (*p == 'b')
   27|      1|        return p;
   28|      2|      while (in < p)
   29|      1|        *out++ = *in++;
   30|      1|    }
   31|      2|  }
   32|      1|}
   33|       |
   34|      1|int main() {
   35|      1|  char out[4];
   36|      1|  test("aab", out);
   37|      1|  return 0;
   38|      1|}


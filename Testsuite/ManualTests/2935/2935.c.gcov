        -:    0:Source:2935.c
        -:    0:Graph:2935.gcno
        -:    0:Data:2935.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-options "-O3 -march=z10 -mzarch --save-temps -mindirect-branch-table" }
        -:    3: */
        -:    4:
        -:    5:int gl = 0;
        -:    6:
        3:    7:int __attribute__((noinline, noclone)) bar(int a) { return a + 2; }
        -:    8:
        -:    9:void __attribute__((function_return_mem("thunk"), noinline, noclone))
        1:   10:foo(int a) {
        -:   11:  int i;
        -:   12:
        1:   13:  if (a == 42)
    #####:   14:    return;
        -:   15:
        4:   16:  for (i = 0; i < a; i++)
        3:   17:    gl += bar(i);
        -:   18:}
        -:   19:
        1:   20:int main() {
        1:   21:  foo(3);
        1:   22:  if (gl != 9)
    #####:   23:    __builtin_abort();
        -:   24:
        1:   25:  return 0;
        -:   26:}
        -:   27:
        -:   28:/* With -march=z10 -mzarch the shrink wrapped returns use compare and
        -:   29:   swap relative to jump to the exit block instead of making use of
        -:   30:   the conditional return pattern.
        -:   31:   FIXME: Use compare and branch register for that!!!! */
        -:   32:
        -:   33:/* 2 x foo
        -:   34:/* { dg-final { scan-assembler-times "jg\t__s390_indirect_jump" 2 } } */
        -:   35:/* { dg-final { scan-assembler "exrl" } } */
        -:   36:
        -:   37:/* { dg-final { scan-assembler-not "section\t.s390_indirect_jump" } } */
        -:   38:/* { dg-final { scan-assembler-not "section\t.s390_indirect_call" } } */
        -:   39:/* { dg-final { scan-assembler-not "section\t.s390_return_reg" } } */
        -:   40:/* { dg-final { scan-assembler     "section\t.s390_return_mem" } } */

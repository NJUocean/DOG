        -:    0:Source:2277.c
        -:    0:Graph:2277.gcno
        -:    0:Data:2277.gcda
        -:    0:Runs:1
        -:    1:/* Copyright (C) 2000 Free Software Foundation, Inc.
        -:    2:   Contributed by Nathan Sidwell 23 Feb 2000 <nathan@codesourcery.com> */
        -:    3:
        -:    4:/* __alignof__ should never return a non-power of 2
        -:    5:   eg, sizeof(long double) might be 12, but that means it must be alignable
        -:    6:   on a 4 byte boundary. */
        -:    7:
       16:    8:void check(char const *type, int align) {
       16:    9:  if ((align & -align) != align) {
    #####:   10:    abort();
        -:   11:  }
       16:   12:}
        -:   13:
        -:   14:#define QUOTE_(s) #s
        -:   15:#define QUOTE(s) QUOTE_(s)
        -:   16:
        -:   17:#define check(t) check(QUOTE(t), __alignof__(t))
        -:   18:
        -:   19:// This struct should have an alignment of the lcm of all the types. If one of
        -:   20:// the base alignments is not a power of two, then A cannot be power of two
        -:   21:// aligned.
        -:   22:struct A {
        -:   23:  char c;
        -:   24:  signed short ss;
        -:   25:  unsigned short us;
        -:   26:  signed int si;
        -:   27:  unsigned int ui;
        -:   28:  signed long sl;
        -:   29:  unsigned long ul;
        -:   30:  signed long long sll;
        -:   31:  unsigned long long ull;
        -:   32:  float f;
        -:   33:  double d;
        -:   34:  long double ld;
        -:   35:  void *dp;
        -:   36:  void (*fp)();
        -:   37:};
        -:   38:
        1:   39:int main() {
        1:   40:  check(void);
        1:   41:  check(char);
        1:   42:  check(signed short);
        1:   43:  check(unsigned short);
        1:   44:  check(signed int);
        1:   45:  check(unsigned int);
        1:   46:  check(signed long);
        1:   47:  check(unsigned long);
        1:   48:  check(signed long long);
        1:   49:  check(unsigned long long);
        1:   50:  check(float);
        1:   51:  check(double);
        1:   52:  check(long double);
        1:   53:  check(void *);
        1:   54:  check(void (*)());
        1:   55:  check(struct A);
        1:   56:  return 0;
        -:   57:}

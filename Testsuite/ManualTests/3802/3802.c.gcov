        -:    0:Source:3802.c
        -:    0:Graph:3802.gcno
        -:    0:Data:3802.gcda
        -:    0:Runs:1
        -:    1:/* PR tree-optimization/58277 */
        -:    2:
        -:    3:extern void abort(void);
        -:    4:static int a[1], b, c, e, i, j, k, m, q[] = {1, 1}, t;
        -:    5:int volatile d;
        -:    6:int **r;
        -:    7:static int ***volatile s = &r;
        -:    8:int f, g, o, x;
        -:    9:static int *volatile h = &f, *p;
        -:   10:char n;
        -:   11:
        1:   12:static void fn1() {
        1:   13:  b = a[a[a[a[a[a[a[a[b]]]]]]]];
        1:   14:  b = a[a[a[a[a[a[a[a[b]]]]]]]];
        1:   15:  b = a[a[b]];
        1:   16:  b = a[a[a[a[a[a[a[a[b]]]]]]]];
        1:   17:  b = a[a[a[a[a[a[a[a[b]]]]]]]];
        1:   18:}
        -:   19:
        1:   20:static int fn2() {
        1:   21:  n = 0;
       1*:   22:  for (; g; t++) {
        -:   23:    for (;; m++) {
    #####:   24:      d;
        -:   25:      int *u;
    #####:   26:      int **v[] = {
        -:   27:          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        -:   28:          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        -:   29:          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        -:   30:          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        -:   31:          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        -:   32:          0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        -:   33:          0,  0,  0,  &u, 0,  0,  0,  0,  &u, &u, &u, &u, &u, &u, &u, 0,  &u, 0,
        -:   34:          &u, &u, &u, 0,  &u, &u, 0,  &u, &u, &u, &u, 0,  &u, &u, &u, &u, &u, 0,
        -:   35:          &u, &u, 0,  &u, 0,  &u, &u, 0,  &u, &u, &u, &u, &u, 0,  &u, 0,  0,  0,
        -:   36:          &u, &u, &u, 0,  0,  &u, &u, &u, 0,  &u, 0,  &u, &u};
    #####:   37:      int ***w[] = {&v[0]};
    #####:   38:      if (*p)
    #####:   39:        break;
    #####:   40:      return 0;
        -:   41:    }
    #####:   42:    *h = 0;
        -:   43:  }
        1:   44:  return 1;
        -:   45:}
        -:   46:
        1:   47:static void fn3() {
        1:   48:  int *y[] = {0, 0, 0, 0, 0, 0, 0, 0};
       1*:   49:  for (; i; i++)
    #####:   50:    x = 0;
        1:   51:  if (fn2()) {
        1:   52:    int *z[6] = {};
        2:   53:    for (; n < 1; n++)
        1:   54:      *h = 0;
        -:   55:    int t1[7];
       1*:   56:    for (; c; c++)
    #####:   57:      o = t1[0];
       1*:   58:    for (; e; e--) {
    #####:   59:      int **t2 = &y[0];
    #####:   60:      int ***t3 = &t2;
    #####:   61:      *t3 = &z[0];
        -:   62:    }
        -:   63:  }
        1:   64:  *s = 0;
       1*:   65:  for (n = 0;; n = 0) {
        1:   66:    int t4 = 0;
        1:   67:    if (q[n])
        1:   68:      break;
    #####:   69:    *r = &t4;
        -:   70:  }
        1:   71:}
        -:   72:
        1:   73:int main() {
       1*:   74:  for (; j; j--)
    #####:   75:    a[0] = 0;
        1:   76:  fn3();
       1*:   77:  for (; k; k++)
    #####:   78:    fn1();
        1:   79:  fn1();
        -:   80:
        1:   81:  if (n)
    #####:   82:    abort();
        -:   83:
        1:   84:  return 0;
        -:   85:}

    1|       |char temp[] = "192.168.190.160";
    2|       |unsigned result = (((((192u << 8) | 168u) << 8) | 190u) << 8) | 160u;
    3|       |
    4|       |int strtoul1(const char *a, char **b, int c) __attribute__((noinline, noclone));
    5|      4|int strtoul1(const char *a, char **b, int c) {
    6|      4|  *b = a + 3;
    7|      4|  if (a == temp)
    8|      1|    return 192;
    9|      3|  else if (a == temp + 4)
   10|      1|    return 168;
   11|      2|  else if (a == temp + 8)
   12|      1|    return 190;
   13|      1|  else if (a == temp + 12)
   14|      1|    return 160;
   15|      0|  __builtin_abort();
   16|      0|}
   17|       |
   18|       |int string_to_ip(const char *s) __attribute__((noinline, noclone));
   19|      1|int string_to_ip(const char *s) {
   20|      1|  int addr;
   21|      1|  char *e;
   22|      1|  int i;
   23|      1|
   24|      1|  if (s == 0)
   25|      0|    return (0);
   26|      1|
   27|      5|  for (addr = 0, i = 0; i < 4; ++i) {
   28|      4|    int val = s ? strtoul1(s, &e, 10) : 0;
   29|      4|    addr <<= 8;
   30|      4|    addr |= (val & 0xFF);
   31|      4|    if (s) {
   32|      4|      s = (*e) ? e + 1 : e;
   33|      4|    }
   34|      4|  }
   35|      1|
   36|      1|  return addr;
   37|      1|}
   38|       |
   39|      1|int main(void) {
   40|      1|  int t = string_to_ip(temp);
   41|      1|  printf("%x\n", t);
   42|      1|  printf("%x\n", result);
   43|      1|  if (t != result)
   44|      0|    __builtin_abort();
   45|      1|  printf("WORKS.\n");
   46|      1|  return 0;
   47|      1|}


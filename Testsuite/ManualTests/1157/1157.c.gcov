        -:    0:Source:1157.c
        -:    0:Graph:1157.gcno
        -:    0:Data:1157.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-options "-fsanitize=signed-integer-overflow -Wno-unused-variable
        -:    3: * -fno-sanitize-recover=signed-integer-overflow" } */
        -:    4:
        -:    5:#define SCHAR_MAX __SCHAR_MAX__
        -:    6:#define SHRT_MAX __SHRT_MAX__
        -:    7:#define INT_MAX __INT_MAX__
        -:    8:#define INT_MIN (-__INT_MAX__ - 1)
        -:    9:
        4:   10:void __attribute__((noinline, noclone)) check(int i, int j) {
        4:   11:  if (i != j)
    #####:   12:    __builtin_abort();
        4:   13:}
        -:   14:
        1:   15:int main(void) {
        -:   16:  /* Test integer promotion.  */
        -:   17:#if __SCHAR_MAX__ == 127
        1:   18:  volatile signed char a = -2;
        1:   19:  volatile signed char b = SCHAR_MAX;
        1:   20:  volatile signed char c = a * b;
        1:   21:  check(c, 2);
        -:   22:#endif
        -:   23:
        -:   24:#if __SHRT_MAX__ == 32767
        1:   25:  volatile short d = SHRT_MAX;
        1:   26:  volatile short e = 2;
        1:   27:  volatile short f = d * e;
        1:   28:  check(f, -2);
        -:   29:#endif
        -:   30:
        -:   31:#if __INT_MAX__ == 2147483647
        1:   32:  volatile int m = INT_MAX;
        1:   33:  volatile int n = 1;
        1:   34:  volatile int o = m * n;
        1:   35:  check(o, INT_MAX);
        -:   36:
        1:   37:  m = INT_MIN;
        1:   38:  o = m * n;
        1:   39:  check(o, INT_MIN);
        -:   40:#endif
        1:   41:  return 0;
        -:   42:}

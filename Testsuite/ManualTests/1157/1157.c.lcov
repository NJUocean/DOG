    1|       |/* { dg-do run } */
    2|       |/* { dg-options "-fsanitize=signed-integer-overflow -Wno-unused-variable
    3|       | * -fno-sanitize-recover=signed-integer-overflow" } */
    4|       |
    5|      1|#define SCHAR_MAX __SCHAR_MAX__
    6|      1|#define SHRT_MAX __SHRT_MAX__
    7|      2|#define INT_MAX __INT_MAX__
    8|      2|#define INT_MIN (-__INT_MAX__ - 1)
    9|       |
   10|      4|void __attribute__((noinline, noclone)) check(int i, int j) {
   11|      4|  if (i != j)
   12|      0|    __builtin_abort();
   13|      4|}
   14|       |
   15|      1|int main(void) {
   16|      1|  /* Test integer promotion.  */
   17|      1|#if __SCHAR_MAX__ == 127
   18|      1|  volatile signed char a = -2;
   19|      1|  volatile signed char b = SCHAR_MAX;
   20|      1|  volatile signed char c = a * b;
   21|      1|  check(c, 2);
   22|      1|#endif
   23|      1|
   24|      1|#if __SHRT_MAX__ == 32767
   25|      1|  volatile short d = SHRT_MAX;
   26|      1|  volatile short e = 2;
   27|      1|  volatile short f = d * e;
   28|      1|  check(f, -2);
   29|      1|#endif
   30|      1|
   31|      1|#if __INT_MAX__ == 2147483647
   32|      1|  volatile int m = INT_MAX;
   33|      1|  volatile int n = 1;
   34|      1|  volatile int o = m * n;
   35|      1|  check(o, INT_MAX);
   36|      1|
   37|      1|  m = INT_MIN;
   38|      1|  o = m * n;
   39|      1|  check(o, INT_MIN);
   40|      1|#endif
   41|      1|  return 0;
   42|      1|}


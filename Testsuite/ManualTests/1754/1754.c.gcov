        -:    0:Source:1754.c
        -:    0:Graph:1754.gcno
        -:    0:Data:1754.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-options "-fdump-tree-alias" } */
        -:    3:/* { dg-skip-if "" { *-*-* } { "-O0" "-fno-fat-lto-objects" } { "" } } */
        -:    4:
        -:    5:struct Foo {
        -:    6:  int **p;
        -:    7:  int **q;
        -:    8:};
        -:    9:
        1:   10:int __attribute__((noinline)) bar(void) {
        -:   11:  struct Foo f;
        1:   12:  int j, i = 1;
        -:   13:  char *p;
        1:   14:  int *x = &i;
        1:   15:  int *y = &j;
        1:   16:  f.p = &y;
        1:   17:  f.q = &x;
        1:   18:  p = (char *)&f;
        9:   19:  for (j = 0; j < sizeof(int *); ++j)
        8:   20:    p++;
        1:   21:  return ***(int ***)p;
        -:   22:}
        -:   23:extern void abort(void);
        1:   24:int main() {
        1:   25:  if (bar() != 1)
    #####:   26:    abort();
        1:   27:  return 0;
        -:   28:}
        -:   29:
        -:   30:/* In theory = { i } is the correct solution.  But it's not easy to scan
        -:   31:   for that reliably, so just use what we create now.  */
        -:   32:/* { dg-final { scan-tree-dump "= { i j }" "alias" } } */

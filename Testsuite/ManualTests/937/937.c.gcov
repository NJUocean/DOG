        -:    0:Source:937.c
        -:    0:Graph:937.gcno
        -:    0:Data:937.gcda
        -:    0:Runs:1
        -:    1:/* PR target/55940 */
        -:    2:/* { dg-do run } */
        -:    3:/* { dg-options "-Os" } */
        -:    4:/* { dg-additional-options "-mpreferred-stack-boundary=2" { target { { i?86-*-*
        -:    5: * x86_64-*-* } && ia32 } } } */
        -:    6:
        -:    7:struct S {
        -:    8:  int s;
        -:    9:  unsigned long t;
        -:   10:};
        -:   11:
    #####:   12:__attribute__((noinline, noclone)) unsigned long long bar(struct S *x,
        -:   13:                                                          unsigned long y) {
    #####:   14:  asm volatile("" : : "r"(x), "r"(y) : "memory");
    #####:   15:  return x->s + y;
        -:   16:}
        -:   17:
       66:   18:__attribute__((noinline, noclone)) unsigned long long foo(struct S *x,
        -:   19:                                                          unsigned long y) {
        -:   20:  unsigned long a;
       66:   21:  if (__builtin_expect(((__UINTPTR_TYPE__)(x) + 0x1000U < 0x2000U), 0))
       64:   22:    return ~0ULL;
        2:   23:  if (__builtin_expect(x->s <= 0 || x->s > 9, 0))
    #####:   24:    return ~0ULL;
        2:   25:  a = x->t >> 12;
        2:   26:  if (y == a)
        1:   27:    return ~0ULL;
        1:   28:  if (x->s == 3)
        1:   29:    return x->t + y * 4096;
    #####:   30:  return bar(x, y);
        -:   31:}
        -:   32:
        -:   33:int va, vb, vc, vd;
        -:   34:
        1:   35:int main() {
        -:   36:  struct S s;
        1:   37:  asm volatile("" : : : "memory");
        1:   38:  int a = va, b = vb, c = vc, d = vd;
        1:   39:  asm volatile("" : : : "memory");
        -:   40:  int i;
       65:   41:  for (i = 0; i < 64; i++)
       64:   42:    if (foo((struct S *)0, 0) != ~0ULL)
    #####:   43:      __builtin_abort();
        1:   44:  s.s = 3;
        1:   45:  s.t = 2 << 12;
        1:   46:  if (foo(&s, 2) != ~0ULL)
    #####:   47:    __builtin_abort();
        1:   48:  if (foo(&s, 3) != (2 << 12) + 3 * 4096)
    #####:   49:    __builtin_abort();
        1:   50:  asm volatile("" : : : "memory");
        1:   51:  va = a;
        1:   52:  vb = b;
        1:   53:  vc = c;
        1:   54:  vd = d;
        1:   55:  asm volatile("" : : : "memory");
        1:   56:  return 0;
        -:   57:}

        -:    0:Source:2953.c
        -:    0:Graph:2953.gcno
        -:    0:Data:2953.gcda
        -:    0:Runs:1
        -:    1:/* Check calling convention with variable argument lists in the vector
        -:    2:   ABI.  */
        -:    3:
        -:    4:/* { dg-do run { target { s390*-*-* } } } */
        -:    5:/* { dg-require-effective-target s390_vx } */
        -:    6:/* { dg-options "-O3 -mzarch -march=z13 --save-temps" } */
        -:    7:
        -:    8:/* Make sure arguments are fetched from the argument overflow area.  */
        -:    9:/* { dg-final { scan-assembler "vl\t%v\[0-9\]*,352\\(%r15\\)" { target lp64 } }
        -:   10: * } */
        -:   11:/* { dg-final { scan-assembler "ld\t%v\[0-9\]*,368\\(%r15\\)" { target lp64 } }
        -:   12: * } */
        -:   13:/* { dg-final { scan-assembler "vl\t%v\[0-9\]*,376\\(%r15\\)" { target lp64 } }
        -:   14: * } */
        -:   15:/* { dg-final { scan-assembler "ld\t%v\[0-9\]*,392\\(%r15\\)" { target lp64 } }
        -:   16: * } */
        -:   17:
        -:   18:/* { dg-final { scan-assembler "vl\t%v\[0-9\]*,208\\(%r15\\)" { target ilp32 } }
        -:   19: * } */
        -:   20:/* { dg-final { scan-assembler "ld\t%v\[0-9\]*,224\\(%r15\\)" { target ilp32 } }
        -:   21: * } */
        -:   22:/* { dg-final { scan-assembler "vl\t%v\[0-9\]*,232\\(%r15\\)" { target ilp32 } }
        -:   23: * } */
        -:   24:/* { dg-final { scan-assembler "ld\t%v\[0-9\]*,248\\(%r15\\)" { target ilp32 } }
        -:   25: * } */
        -:   26:
        -:   27:#include <stdarg.h>
        -:   28:
        -:   29:extern void abort(void);
        -:   30:
        -:   31:typedef long long v2di __attribute__((vector_size(16)));
        -:   32:typedef int v2si __attribute__((vector_size(8)));
        -:   33:
        1:   34:v2di __attribute__((noinline)) add(int a, ...) {
        -:   35:  int i;
        -:   36:  va_list va;
        1:   37:  v2di di_result = {0, 0};
        1:   38:  v2si si_result = (v2si){0, 0};
        -:   39:
        1:   40:  va_start(va, a);
        -:   41:
        1:   42:  di_result += va_arg(va, v2di);
        1:   43:  si_result += va_arg(va, v2si);
        1:   44:  di_result += va_arg(va, v2di);
        1:   45:  si_result += va_arg(va, v2si);
        -:   46:
        1:   47:  va_end(va);
        -:   48:
        1:   49:  di_result[0] += si_result[0];
        1:   50:  di_result[1] += si_result[1];
        -:   51:
        1:   52:  return di_result;
        -:   53:}
        -:   54:
        1:   55:int main() {
        1:   56:  v2di r =
        1:   57:      add(4, (v2di){11, 21}, (v2si){12, 22}, (v2di){13, 23}, (v2si){14, 24});
        -:   58:
        1:   59:  if (r[0] != 50 || r[1] != 90)
    #####:   60:    abort();
        -:   61:
        1:   62:  return 0;
        -:   63:}

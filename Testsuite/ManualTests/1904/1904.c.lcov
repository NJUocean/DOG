    1|       |/* PR tree-optimization/83337 */
    2|       |/* { dg-do run { target int32plus } } */
    3|       |/* { dg-options "-O2 -floop-interchange -fdump-tree-linterchange-details" } */
    4|       |/* { dg-skip-if "too big data segment" { visium-*-* } } */
    5|       |
    6|       |/* Copied from graphite/interchange-5.c */
    7|       |
    8|       |#define DEBUG 0
    9|       |#if DEBUG
   10|       |#include <stdio.h>
   11|       |#endif
   12|       |
   13|   112k|#define N 100
   14|   112k|#define M 1111
   15|       |struct S {
   16|       |  int a : 3;
   17|       |  int b : 17;
   18|       |  int c : 12;
   19|       |};
   20|       |struct S A[N][M];
   21|       |
   22|      1|static int __attribute__((noinline)) foo(void) {
   23|      1|  int i, j;
   24|      1|
   25|  1.11k|  for (i = 0; i < M; i++)
   26|   112k|    for (j = 0; j < N; j++)
   27|   111k|      A[j][i].b = 5 * A[j][i].b;
   28|      1|
   29|      1|  return A[0][0].b + A[N - 1][M - 1].b;
   30|      1|}
   31|       |
   32|       |extern void abort();
   33|       |
   34|    100|static void __attribute__((noinline)) init(int i) {
   35|    100|  int j;
   36|    100|
   37|   111k|  for (j = 0; j < M; j++)
   38|   111k|    A[i][j].b = 2;
   39|    100|}
   40|       |
   41|      1|int main(void) {
   42|      1|  int i, j, res;
   43|      1|
   44|    101|  for (i = 0; i < N; i++)
   45|    100|    init(i);
   46|      1|
   47|      1|  res = foo();
   48|      1|
   49|       |#if DEBUG
   50|       |  fprintf(stderr, "res = %d \n", res);
   51|       |#endif
   52|      1|
   53|      1|  if (res != 20)
   54|      0|    abort();
   55|      1|
   56|      1|  return 0;
   57|      1|}
   58|       |
   59|       |/* { dg-final { scan-tree-dump-times "Loop_pair<outer:., inner:.> is
   60|       | * interchanged" 1 "linterchange"} } */


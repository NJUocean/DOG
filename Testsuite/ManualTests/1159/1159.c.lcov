    1|       |/* { dg-do run } */
    2|       |/* { dg-require-effective-target store_merge } */
    3|       |/* { dg-options "-O2 -fdump-tree-store-merging" } */
    4|       |
    5|       |struct S {
    6|       |  unsigned char b[2];
    7|       |  unsigned short c;
    8|       |  unsigned char d[4];
    9|       |  unsigned long e;
   10|       |};
   11|       |
   12|      1|__attribute__((noipa)) void foo(struct S *p) {
   13|      1|  p->b[1] = 1;
   14|      1|  p->c = 23;
   15|      1|  p->d[0] = 4;
   16|      1|  p->d[1] = 5;
   17|      1|  p->d[2] = 6;
   18|      1|  p->d[3] = 7;
   19|      1|  p->e = 8;
   20|      1|}
   21|       |
   22|      1|__attribute__((noipa)) void bar(struct S *p) {
   23|      1|  p->b[1] = 9;
   24|      1|  p->c = 112;
   25|      1|  p->d[0] = 10;
   26|      1|  p->d[1] = 11;
   27|      1|}
   28|       |
   29|       |struct S s = {{30, 31}, 32, {33, 34, 35, 36}, 37};
   30|       |
   31|      1|int main() {
   32|      1|  asm volatile("" : : : "memory");
   33|      1|  foo(&s);
   34|      1|  asm volatile("" : : : "memory");
   35|      1|  if (s.b[0] != 30 || s.b[1] != 1 || s.c != 23 || s.d[0] != 4 || s.d[1] != 5 ||
   36|      1|      s.d[2] != 6 || s.d[3] != 7 || s.e != 8)
   37|      0|    __builtin_abort();
   38|      1|  bar(&s);
   39|      1|  asm volatile("" : : : "memory");
   40|      1|  if (s.b[0] != 30 || s.b[1] != 9 || s.c != 112 || s.d[0] != 10 ||
   41|      1|      s.d[1] != 11 || s.d[2] != 6 || s.d[3] != 7 || s.e != 8)
   42|      0|    __builtin_abort();
   43|      1|  return 0;
   44|      1|}
   45|       |
   46|       |/* { dg-final { scan-tree-dump-times "Merging successful" 2 "store-merging" } }
   47|       | */


    1|       |/* { dg-do run } */
    2|       |/* { dg-options "-O2 -floop-interchange -fdump-tree-linterchange-details" } */
    3|       |/* { dg-require-effective-target size20plus } */
    4|       |/* { dg-skip-if "too big data segment" { visium-*-* } } */
    5|       |
    6|  66.0k|#define M 256
    7|       |int a[M][M], b[M][M];
    8|      1|int __attribute__((noinline)) double_reduc(int n) {
    9|      1|  int sum = 0;
   10|    257|  for (int j = 0; j < n; j++) {
   11|  65.7k|    for (int i = 0; i < n; i++)
   12|  65.5k|      sum = sum + a[i][j] * b[i][j];
   13|    256|  }
   14|      1|  return sum;
   15|      1|}
   16|       |
   17|       |extern void abort();
   18|       |
   19|    256|static void __attribute__((noinline)) init(int i) {
   20|  65.7k|  for (int j = 0; j < M; j++) {
   21|  65.5k|    a[i][j] = i;
   22|  65.5k|    b[i][j] = j;
   23|  65.5k|  }
   24|    256|}
   25|       |
   26|      1|int main(void) {
   27|    257|  for (int i = 0; i < M; ++i)
   28|    256|    init(i);
   29|      1|
   30|      1|  int sum = double_reduc(M);
   31|      1|
   32|      1|  if (sum != 1065369600)
   33|      0|    abort();
   34|      1|
   35|      1|  return 0;
   36|      1|}
   37|       |
   38|       |/* { dg-final { scan-tree-dump-times "Loop_pair<outer:., inner:.> is
   39|       | * interchanged" 1 "linterchange" } } */


        -:    0:Source:2499.c
        -:    0:Graph:2499.gcno
        -:    0:Data:2499.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-require-effective-target arm_thumb2_ok } */
        -:    3:/* { dg-additional-options "-mthumb -O2 --save-temps" } */
        -:    4:
        -:    5:extern void abort(void);
        -:    6:
        -:    7:#define N 16
        -:    8:
        -:    9:float a_f[N] = {-0.1f, -3.2f, -6.3f, -9.4f, -12.5f, -15.6f, -18.7f, -21.8f,
        -:   10:                24.9f, 27.1f, 30.2f, 33.3f, 36.4f,  39.5f,  42.6f,  45.7f};
        -:   11:
        -:   12:float b_f[N] = {-1.2f, 3.4f,  -5.6f, 7.8f, -9.0f, 1.0f,  -2.0f, 3.0f,
        -:   13:                -4.0f, -5.0f, 6.0f,  7.0f, -8.0f, -9.0f, 10.0f, 11.0f};
        -:   14:
        -:   15:float c_f[N] = {-0.1f,  3.2f,   -6.3f, 9.4f,  -12.5f, 15.6f,  -18.7f, 21.8f,
        -:   16:                -24.9f, -27.1f, 30.2f, 33.3f, -36.4f, -39.5f, 42.6f,  45.7f};
        -:   17:
        -:   18:double a_d[N] = {-0.1, -3.2, -6.3, -9.4, -12.5, -15.6, -18.7, -21.8,
        -:   19:                 24.9, 27.1, 30.2, 33.3, 36.4,  39.5,  42.6,  45.7};
        -:   20:
        -:   21:double b_d[N] = {-1.2, 3.4,  -5.6, 7.8, -9.0, 1.0,  -2.0, 3.0,
        -:   22:                 -4.0, -5.0, 6.0,  7.0, -8.0, -9.0, 10.0, 11.0};
        -:   23:
        -:   24:double c_d[N] = {-0.1,  3.2,   -6.3, 9.4,  -12.5, 15.6,  -18.7, 21.8,
        -:   25:                 -24.9, -27.1, 30.2, 33.3, -36.4, -39.5, 42.6,  45.7};
        -:   26:
        1:   27:int main(int argc, char **argv) {
        1:   28:  int index = 0;
        -:   29:
        -:   30:  /* { dg-final { scan-assembler-times "bfi" 2 { target arm_softfloat } } } */
        -:   31:  /* { dg-final { scan-assembler-times "lsr" 1 { target arm_softfloat } } } */
       17:   32:  for (index; index < N; index++) {
       16:   33:    if (__builtin_copysignf(a_f[index], b_f[index]) != c_f[index])
    #####:   34:      abort();
        -:   35:  }
        -:   36:
       17:   37:  for (index = 0; index < N; index++) {
       16:   38:    if (__builtin_copysign(a_d[index], b_d[index]) != c_d[index])
    #####:   39:      abort();
        -:   40:  }
        -:   41:
        1:   42:  return 0;
        -:   43:}

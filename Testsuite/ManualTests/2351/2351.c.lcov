    1|      1|void f(int *p, int **q) {
    2|      1|  int i;
    3|     41|  for (i = 0; i < 40; i++) {
    4|     40|    *q++ = &p[i];
    5|     40|  }
    6|      1|}
    7|       |
    8|      1|int main() {
    9|      1|  void *p;
   10|      1|  int *q[40];
   11|      1|  __SIZE_TYPE__ start;
   12|      1|
   13|      1|  /* Find the signed middle of the address space.  */
   14|      1|  if (sizeof(start) == sizeof(int))
   15|      0|    start = (__SIZE_TYPE__)__INT_MAX__;
   16|      1|  else if (sizeof(start) == sizeof(long))
   17|      1|    start = (__SIZE_TYPE__)__LONG_MAX__;
   18|      0|  else if (sizeof(start) == sizeof(long long))
   19|      0|    start = (__SIZE_TYPE__)__LONG_LONG_MAX__;
   20|      0|  else
   21|      0|    return 0;
   22|      1|
   23|      1|  /* Arbitrarily align the pointer.  */
   24|      1|  start &= -32;
   25|      1|
   26|      1|  /* Pretend that's good enough to start address arithmetic.  */
   27|      1|  p = (void *)start;
   28|      1|
   29|      1|  /* Verify that GIV replacement computes the correct results.  */
   30|      1|  q[39] = 0;
   31|      1|  f(p, q);
   32|      1|  if (q[39] != (int *)p + 39)
   33|      0|    abort();
   34|      1|
   35|      1|  return 0;
   36|      1|}


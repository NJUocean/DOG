    1|       |/* { dg-do run } */
    2|       |/* { dg-options "-fsanitize=bool,enum" } */
    3|       |
    4|       |#ifndef __cplusplus
    5|      1|#define bool _Bool
    6|       |#endif
    7|       |enum A { B = -3, C = 2 } a;
    8|       |bool b;
    9|       |
   10|      1|__attribute__((noinline, noclone)) enum A foo(bool *p) {
   11|      1|  *p = b;   /* { dg-output "load-bool-enum.c:13:\[^\n\r]*runtime error:
   12|      1|               \[^\n\r]*load of value 4, which is not a valid value for type
   13|      1|               '(_B|b)ool'\[^\n\r]*(\n|\r\n|\r)*" } */
   14|      1|  return a; /* { dg-output "\[^\n\r]*load-bool-enum.c:14:\[^\n\r]*runtime error:
   15|      1|               \[^\n\r]*load of value 9, which is not a valid value for type
   16|      1|               'A'" { target c++ } } */
   17|      1|}
   18|       |
   19|      1|int main() {
   20|      1|  char c = 4;
   21|      1|  int d = 9;
   22|      1|  if (sizeof(int) != sizeof(a) || sizeof(b) != 1)
   23|      0|    return 0;
   24|      1|  __builtin_memcpy(&a, &d, sizeof(int));
   25|      1|  __builtin_memcpy(&b, &c, 1);
   26|      1|  bool e;
   27|      1|  foo(&e);
   28|      1|  return 0;
   29|      1|}


        -:    0:Source:918.c
        -:    0:Graph:918.gcno
        -:    0:Data:918.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-options "-Os --param large-stack-frame=30 -Wno-pointer-to-int-cast" } */
        -:    3:
        -:    4:extern void abort(void);
        -:    5:
        1:    6:void __attribute__((noinline)) bar(char *a) {}
        -:    7:
        4:    8:void __attribute__((noinline)) foo(char *a, int b) {}
        -:    9:
        -:   10:void __attribute__((noinline))
        4:   11:test_align(char *p, int aligned, unsigned int mask) {
        4:   12:  int p_aligned = ((unsigned long int)p & mask) == 0;
        4:   13:  if (aligned != p_aligned)
    #####:   14:    abort();
        4:   15:}
        -:   16:
        1:   17:int main() {
        1:   18:  const int kIterations = 4;
        1:   19:  char results[kIterations];
        -:   20:  int i;
        -:   21:  unsigned int mask;
        -:   22:
        1:   23:  mask = 0xf;
        1:   24:  test_align(results, ((unsigned long int)results & mask) == 0, mask);
        1:   25:  mask = 0x7;
        1:   26:  test_align(results, ((unsigned long int)results & mask) == 0, mask);
        1:   27:  mask = 0x3;
        1:   28:  test_align(results, ((unsigned long int)results & mask) == 0, mask);
        1:   29:  mask = 0x1;
        1:   30:  test_align(results, ((unsigned long int)results & mask) == 0, mask);
        -:   31:
        1:   32:  bar(results);
        5:   33:  for (i = 0; i < kIterations; i++)
        4:   34:    foo("%d ", results[i]);
        -:   35:
        1:   36:  return 0;
        -:   37:}

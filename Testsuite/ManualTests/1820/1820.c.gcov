        -:    0:Source:1820.c
        -:    0:Graph:1820.gcno
        -:    0:Data:1820.gcda
        -:    0:Runs:1
        -:    1:/* { dg-require-effective-target freorder } */
        -:    2:/* { dg-options "-O2 -freorder-blocks-and-partition -fschedule-insns
        -:    3: * -fselective-scheduling" { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* }
        -:    4: * } */
        -:    5:
        -:    6:extern void abort(void);
        -:    7:
        -:    8:int ifelse_val2;
        -:    9:
        6:   10:int __attribute__((noinline)) test_ifelse2(int i) {
        6:   11:  int result = 0;
        6:   12:  if (!i)       /* count(6) */
        1:   13:    result = 1; /* count(1) */
        6:   14:  if (i == 1)   /* count(6) */
    #####:   15:    result = 1024;
        6:   16:  if (i == 2)   /* count(6) */
        3:   17:    result = 2; /* count(3) */
        6:   18:  if (i == 3)   /* count(6) */
        2:   19:    return 8;   /* count(2) */
        4:   20:  if (i == 4)   /* count(4) */
    #####:   21:    return 2048;
        4:   22:  return result; /* count(4) */
        -:   23:}
        -:   24:
        1:   25:void __attribute__((noinline)) call_ifelse() {
        1:   26:  ifelse_val2 += test_ifelse2(0);
        1:   27:  ifelse_val2 += test_ifelse2(2);
        1:   28:  ifelse_val2 += test_ifelse2(2);
        1:   29:  ifelse_val2 += test_ifelse2(2);
        1:   30:  ifelse_val2 += test_ifelse2(3);
        1:   31:  ifelse_val2 += test_ifelse2(3);
        1:   32:}
        -:   33:
        1:   34:int main() {
        1:   35:  call_ifelse();
        1:   36:  if (ifelse_val2 != 23)
    #####:   37:    abort();
        1:   38:  return 0;
        -:   39:}

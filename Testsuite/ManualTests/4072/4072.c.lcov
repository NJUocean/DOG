    1|       |/* Origin: Aldy Hernandez <aldyh@redhat.com>
    2|       |
    3|       |   Purpose: Test generic SIMD support.  This test should work
    4|       |   regardless of if the target has SIMD instructions.
    5|       |*/
    6|       |
    7|       |typedef int __attribute__((mode(SI))) __attribute__((vector_size(16))) vecint;
    8|       |typedef int __attribute__((mode(SI))) siint;
    9|       |
   10|       |vecint i = {150, 100, 150, 200};
   11|       |vecint j = {10, 13, 20, 30};
   12|       |vecint k;
   13|       |
   14|       |union {
   15|       |  vecint v;
   16|       |  siint i[4];
   17|       |} res;
   18|       |
   19|       |/* This should go away once we can use == and != on vector types.  */
   20|       |void verify(siint a1, siint a2, siint a3, siint a4, siint b1, siint b2,
   21|      8|            siint b3, siint b4) {
   22|      8|  if (a1 != b1 || a2 != b2 || a3 != b3 || a4 != b4)
   23|      0|    abort();
   24|      8|}
   25|       |
   26|      1|int main() {
   27|      1|  k = i + j;
   28|      1|  res.v = k;
   29|      1|
   30|      1|  verify(res.i[0], res.i[1], res.i[2], res.i[3], 160, 113, 170, 230);
   31|      1|
   32|      1|  k = i * j;
   33|      1|  res.v = k;
   34|      1|
   35|      1|  verify(res.i[0], res.i[1], res.i[2], res.i[3], 1500, 1300, 3000, 6000);
   36|      1|
   37|      1|  k = i / j;
   38|      1|  res.v = k;
   39|      1|
   40|      1|  verify(res.i[0], res.i[1], res.i[2], res.i[3], 15, 7, 7, 6);
   41|      1|
   42|      1|  k = i & j;
   43|      1|  res.v = k;
   44|      1|
   45|      1|  verify(res.i[0], res.i[1], res.i[2], res.i[3], 2, 4, 20, 8);
   46|      1|
   47|      1|  k = i | j;
   48|      1|  res.v = k;
   49|      1|
   50|      1|  verify(res.i[0], res.i[1], res.i[2], res.i[3], 158, 109, 150, 222);
   51|      1|
   52|      1|  k = i ^ j;
   53|      1|  res.v = k;
   54|      1|
   55|      1|  verify(res.i[0], res.i[1], res.i[2], res.i[3], 156, 105, 130, 214);
   56|      1|
   57|      1|  k = -i;
   58|      1|  res.v = k;
   59|      1|  verify(res.i[0], res.i[1], res.i[2], res.i[3], -150, -100, -150, -200);
   60|      1|
   61|      1|  k = ~i;
   62|      1|  res.v = k;
   63|      1|  verify(res.i[0], res.i[1], res.i[2], res.i[3], -151, -101, -151, -201);
   64|      1|
   65|      1|  exit(0);
   66|      1|}


    1|       |typedef struct descriptor_dimension {
    2|       |  int stride;
    3|       |  int lbound;
    4|       |  int ubound;
    5|       |} descriptor_dimension;
    6|       |typedef struct {
    7|       |  int *data;
    8|       |  int dtype;
    9|       |  descriptor_dimension dim[7];
   10|       |} gfc_array_i4;
   11|       |
   12|       |void msum_i4(gfc_array_i4 *const retarray, gfc_array_i4 *const array,
   13|      1|             const int *const pdim) {
   14|      1|  int count[7];
   15|      1|  int extent[7];
   16|      1|  int *dest;
   17|      1|  const int *base;
   18|      1|  int dim;
   19|      1|  int n;
   20|      1|  int len;
   21|      1|
   22|      1|  dim = (*pdim) - 1;
   23|      1|  len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;
   24|      1|
   25|      2|  for (n = 0; n < dim; n++) {
   26|      1|    extent[n] = array->dim[n].ubound + 1 - array->dim[n].lbound;
   27|      1|    count[n] = 0;
   28|      1|  }
   29|      1|
   30|      1|  dest = retarray->data;
   31|      1|  base = array->data;
   32|      1|
   33|      3|  do {
   34|      3|    int result = 0;
   35|      3|
   36|     12|    for (n = 0; n < len; n++, base++)
   37|      9|      result += *base;
   38|      3|    *dest = result;
   39|      3|
   40|      3|    count[0]++;
   41|      3|    dest += 1;
   42|      3|  } while (count[0] != extent[0]);
   43|      1|}
   44|       |
   45|      1|int main() {
   46|      1|  int rdata[3];
   47|      1|  int adata[9];
   48|      1|  gfc_array_i4 retarray = {rdata, 265, {{1, 1, 3}}};
   49|      1|  gfc_array_i4 array = {adata, 266, {{1, 1, 3}, {3, 1, 3}}};
   50|      1|  int dim = 2;
   51|      1|  msum_i4(&retarray, &array, &dim);
   52|      1|  return 0;
   53|      1|}


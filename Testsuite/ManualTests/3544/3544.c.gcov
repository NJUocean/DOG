        -:    0:Source:3544.c
        -:    0:Graph:3544.gcno
        -:    0:Data:3544.gcda
        -:    0:Runs:1
        -:    1:#include <stdarg.h>
        -:    2:
        -:    3:typedef struct {
        -:    4:  double x, y;
        -:    5:} point;
        -:    6:point pts[] = {{1.0, 2.0}, {3.0, 4.0}, {5.0, 6.0}, {7.0, 8.0}};
        1:    7:static int va1(int nargs, ...) {
        -:    8:  va_list args;
        -:    9:  int i;
        -:   10:  point pi;
        1:   11:  va_start(args, nargs);
        5:   12:  for (i = 0; i < nargs; i++) {
        4:   13:    pi = va_arg(args, point);
        4:   14:    if (pts[i].x != pi.x || pts[i].y != pi.y)
    #####:   15:      abort();
        -:   16:  }
        1:   17:  va_end(args);
        1:   18:}
        -:   19:
        -:   20:typedef struct {
        -:   21:  int x, y;
        -:   22:} ipoint;
        -:   23:ipoint ipts[] = {{1, 2}, {3, 4}, {5, 6}, {7, 8}};
        1:   24:static int va2(int nargs, ...) {
        -:   25:  va_list args;
        -:   26:  int i;
        -:   27:  ipoint pi;
        1:   28:  va_start(args, nargs);
        5:   29:  for (i = 0; i < nargs; i++) {
        4:   30:    pi = va_arg(args, ipoint);
        4:   31:    if (ipts[i].x != pi.x || ipts[i].y != pi.y)
    #####:   32:      abort();
        -:   33:  }
        1:   34:  va_end(args);
        1:   35:}
        -:   36:
        1:   37:main() {
        1:   38:  va1(4, pts[0], pts[1], pts[2], pts[3]);
        1:   39:  va2(4, ipts[0], ipts[1], ipts[2], ipts[3]);
        1:   40:  exit(0);
        -:   41:}

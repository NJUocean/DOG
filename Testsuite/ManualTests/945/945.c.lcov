    1|       |/* Test volatile access to unaligned field.  */
    2|       |/* { dg-do run } */
    3|       |/* { dg-require-effective-target size32plus } */
    4|       |/* { dg-options "-fstrict-volatile-bitfields" } */
    5|       |
    6|       |extern void abort(void);
    7|       |
    8|      1|#define test_type unsigned int
    9|      4|#define MAGIC 0x1020304u
   10|       |
   11|       |typedef struct s {
   12|       |  unsigned char Prefix;
   13|       |  test_type Type;
   14|       |} __attribute((__packed__)) ss;
   15|       |
   16|       |volatile ss v;
   17|       |ss g;
   18|       |
   19|      1|void __attribute__((noinline)) foo(test_type u) { v.Type = u; }
   20|       |
   21|      1|test_type __attribute__((noinline)) bar(void) { return v.Type; }
   22|       |
   23|      1|int main() {
   24|      1|  test_type temp;
   25|      1|  foo(MAGIC);
   26|      1|  __builtin_memcpy(&g, (void *)&v, sizeof(g));
   27|      1|  if (g.Type != MAGIC)
   28|      1|    abort();
   29|      1|
   30|      1|  g.Type = MAGIC;
   31|      1|  __builtin_memcpy((void *)&v, &g, sizeof(v));
   32|      1|  temp = bar();
   33|      1|  if (temp != MAGIC)
   34|      1|    abort();
   35|      1|  return 0;
   36|      1|}


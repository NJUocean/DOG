    1|       |/* { dg-do run } */
    2|       |/* { dg-options "-O2 -std=c99" } */
    3|       |
    4|       |int puts(const char *);
    5|       |int snprintf(char *, unsigned long, const char *, ...);
    6|       |unsigned long strspn(const char *, const char *);
    7|       |
    8|       |struct TValue {
    9|       |  union {
   10|       |    long long i;
   11|       |    double n;
   12|       |  } value_;
   13|       |  unsigned char tt_;
   14|       |};
   15|       |
   16|      1|static int tostringbuff(struct TValue *num, char *str) {
   17|      1|  int len;
   18|      1|  if (num->tt_ == 3) {
   19|      0|    len = snprintf(str, 50, "%lld", num->value_.i);
   20|      1|  } else {
   21|      1|    len = snprintf(str, 50, "%.14g", num->value_.n);
   22|      1|    if (str[strspn(str, "-0123456789")] == '\0') {
   23|      1|      str[len++] = '.';
   24|      1|      str[len++] = '0';
   25|      1|    }
   26|      1|  }
   27|      1|  return len;
   28|      1|}
   29|       |
   30|      0|void unused(int *buff, struct TValue *num) {
   31|      0|  char junk[50];
   32|      0|  *buff += tostringbuff(num, junk);
   33|      0|}
   34|       |
   35|       |char space[400];
   36|       |
   37|       |void addnum2buff(int *buff, struct TValue *num) __attribute__((__noinline__));
   38|      1|void addnum2buff(int *buff, struct TValue *num) {
   39|      1|  *buff += tostringbuff(num, space);
   40|      1|}
   41|       |
   42|      1|int __attribute__((noipa)) check_space(char *s) {
   43|      1|  return (s[0] == '1' && s[1] == '.' && s[2] == '0' && s[3] == '\0');
   44|      1|}
   45|       |
   46|      1|int main(void) {
   47|      1|  int buff = 0;
   48|      1|  struct TValue num;
   49|      1|  num.value_.n = 1.0;
   50|      1|  num.tt_ = 19;
   51|      1|  addnum2buff(&buff, &num);
   52|      1|  if (!check_space(space))
   53|      0|    __builtin_abort();
   54|      1|  return 0;
   55|      1|}


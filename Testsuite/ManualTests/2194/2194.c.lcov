    1|       |/* { dg-do compile } */
    2|       |/* { dg-require-effective-target fopenmp } */
    3|       |/* { dg-require-effective-target vect_int } */
    4|       |/* { dg-additional-options "-fopenmp -fipa-pta" } */
    5|       |
    6|       |extern void abort(void);
    7|       |
    8|  3.00k|#define nEvents 1000
    9|       |
   10|       |static void __attribute__((noinline, noclone, optimize("-fno-tree-vectorize")))
   11|      1|init(unsigned *results, unsigned *pData) {
   12|      1|  unsigned int i;
   13|  1.00k|  for (i = 0; i < nEvents; ++i)
   14|  1.00k|    pData[i] = i % 3;
   15|      1|}
   16|       |
   17|       |static void __attribute__((noinline, noclone, optimize("-fno-tree-vectorize")))
   18|      1|check(unsigned *results) {
   19|      1|  unsigned sum = 0;
   20|  1.00k|  for (int idx = 0; idx < (int)nEvents; idx++)
   21|  1.00k|    sum += results[idx];
   22|      1|
   23|      1|  if (sum != 1998)
   24|      0|    abort();
   25|      1|}
   26|       |
   27|      1|int main(void) {
   28|      1|  unsigned results[nEvents];
   29|      1|  unsigned pData[nEvents];
   30|      1|  unsigned coeff = 2;
   31|      1|
   32|      1|  init(&results[0], &pData[0]);
   33|      1|
   34|      1|#pragma omp parallel for
   35|  1.00k|  for (int idx = 0; idx < (int)nEvents; idx++)
   36|  1.00k|    results[idx] = coeff * pData[idx];
   37|      1|
   38|      1|  check(&results[0]);
   39|      1|
   40|      1|  return 0;
   41|      1|}
   42|       |
   43|       |/* { dg-final { scan-tree-dump-times "vectorized 1 loop" 1 "vect" { xfail {
   44|       | * vect_no_align && { ! vect_hw_misalign } } } } } */
   45|       |/* { dg-final { scan-tree-dump-not "versioning for alias required" "vect" } } */


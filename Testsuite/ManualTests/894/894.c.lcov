    1|       |/* PR rtl-optimization/46614 */
    2|       |/* { dg-do run } */
    3|       |/* { dg-options "-O -fno-rename-registers -fsched2-use-superblocks
    4|       | * -fschedule-insns2 -funroll-loops" } */
    5|       |/* { dg-require-effective-target scheduling } */
    6|       |
    7|       |extern void abort(void);
    8|       |
    9|       |struct S {
   10|       |  unsigned char a;
   11|       |  unsigned char b;
   12|       |  unsigned int c;
   13|       |  unsigned int e;
   14|       |  unsigned char f;
   15|       |  unsigned int g;
   16|       |};
   17|       |
   18|      1|void bar(struct S *x) {
   19|      1|  int i;
   20|      1|  struct S *p = x;
   21|      1|  struct S r[16];
   22|      1|  unsigned j;
   23|     17|  for (i = 0; i < 16; i++) {
   24|     16|    r[i].c = p->b + p->c;
   25|     16|    j = p->c + p->f;
   26|     16|    r[i].a = j + p->b;
   27|     16|    r[i].f = p->f + p->e;
   28|     16|    r[i].g = p->b + p->c;
   29|     16|  }
   30|     17|  for (i = 0; i < 16; i++) {
   31|     16|    if (r[i].c != x[i].b + x[i].c || r[i].a != x[i].c + x[i].f + x[i].b ||
   32|     16|        r[i].f != x[i].f + x[i].e || r[i].g != x[i].b + x[i].c)
   33|      0|      abort();
   34|     16|  }
   35|     17|  for (i = 0; i < 16; i++) {
   36|     16|    r[i].b = p->c;
   37|     16|    if (r[i].b != x[i].c)
   38|      0|      abort();
   39|     16|  }
   40|      1|}
   41|       |
   42|      1|int main() {
   43|      1|  int i;
   44|      1|  struct S x[16];
   45|     17|  for (i = 0; i < 16; i++)
   46|     16|    x[i].b = x[i].c = x[i].e = x[i].f = 5;
   47|      1|  bar(x);
   48|      1|  return 0;
   49|      1|}


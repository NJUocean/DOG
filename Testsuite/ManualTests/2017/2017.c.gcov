        -:    0:Source:2017.c
        -:    0:Graph:2017.gcno
        -:    0:Data:2017.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-options "-O2 -funroll-loops --param max-unroll-times=8
        -:    3: * -fpredictive-commoning -fdump-tree-pcom-details -fno-tree-pre" } */
        -:    4:
        -:    5:void abort(void);
        -:    6:
        -:    7:long int fib[1000];
        -:    8:
        1:    9:__attribute__((noinline)) void count_fib(void) {
        -:   10:  int i;
        -:   11:
        1:   12:  fib[0] = 0;
        1:   13:  fib[1] = 1;
      999:   14:  for (i = 2; i < 1000; i++)
      998:   15:    fib[i] = (fib[i - 1] + fib[i - 2]) & 0xffff;
        1:   16:}
        -:   17:
        -:   18:int avg[1000];
        -:   19:
        1:   20:__attribute__((noinline)) void count_averages(void) {
        -:   21:  int i;
        -:   22:
      999:   23:  for (i = 1; i < 999; i++)
      998:   24:    avg[i] = ((fib[i - 1] + fib[i] + fib[i + 1]) / 3) & 0xffff;
        1:   25:}
        -:   26:
        1:   27:int main(void) {
        1:   28:  count_fib();
        1:   29:  count_averages();
        -:   30:
        1:   31:  if (fib[19] != 4181 || avg[19] != 4510)
    #####:   32:    abort();
        -:   33:
        1:   34:  if (fib[999] != 162 || avg[998] != 21953)
    #####:   35:    abort();
        -:   36:
        1:   37:  return 0;
        -:   38:}
        -:   39:
        -:   40:/* Verify that both loops were transformed and unrolled.  */
        -:   41:/* { dg-final { scan-tree-dump-times "Unrolling 2 times." 2 "pcom"} } */

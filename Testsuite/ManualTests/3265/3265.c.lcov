    1|       |/* Macros to emit "L Nxx R" for each octal number xx between 000 and 037.  */
    2|    224|#define OP1(L, N, R, I, J) L N##I##J R
    3|       |#define OP2(L, N, R, I)                                                        \
    4|     56|  OP1(L, N, R, 0, I), OP1(L, N, R, 1, I), OP1(L, N, R, 2, I), OP1(L, N, R, 3, I)
    5|       |#define OP(L, N, R)                                                            \
    6|      7|  OP2(L, N, R, 0), OP2(L, N, R, 1), OP2(L, N, R, 2), OP2(L, N, R, 3),          \
    7|      7|      OP2(L, N, R, 4), OP2(L, N, R, 5), OP2(L, N, R, 6), OP2(L, N, R, 7)
    8|       |
    9|       |/* Declare 32 unique variables with prefix N.  */
   10|       |#define DECLARE(N) OP(, N, )
   11|       |
   12|       |/* Copy 32 variables with prefix N from the array at ADDR.
   13|       |   Leave ADDR pointing to the end of the array.  */
   14|      2|#define COPYIN(N, ADDR) OP(, N, = *(ADDR++))
   15|       |
   16|       |/* Likewise, but copy the other way.  */
   17|      2|#define COPYOUT(N, ADDR) OP(*(ADDR++) =, N, )
   18|       |
   19|       |/* Add the contents of the array at ADDR to 32 variables with prefix N.
   20|       |   Leave ADDR pointing to the end of the array.  */
   21|      3|#define ADD(N, ADDR) OP(, N, += *(ADDR++))
   22|       |
   23|       |volatile double gd[32];
   24|       |volatile float gf[32];
   25|       |
   26|      1|void foo(int n) {
   27|      1|  double DECLARE(d);
   28|      1|  float DECLARE(f);
   29|      1|  volatile double *pd;
   30|      1|  volatile float *pf;
   31|      1|  int i;
   32|      1|
   33|      1|  pd = gd;
   34|      1|  COPYIN(d, pd);
   35|      2|  for (i = 0; i < n; i++) {
   36|      1|    pf = gf;
   37|      1|    COPYIN(f, pf);
   38|      1|    pd = gd;
   39|      1|    ADD(d, pd);
   40|      1|    pd = gd;
   41|      1|    ADD(d, pd);
   42|      1|    pd = gd;
   43|      1|    ADD(d, pd);
   44|      1|    pf = gf;
   45|      1|    COPYOUT(f, pf);
   46|      1|  }
   47|      1|  pd = gd;
   48|      1|  COPYOUT(d, pd);
   49|      1|}
   50|       |
   51|      1|int main() {
   52|      1|  int i;
   53|      1|
   54|     33|  for (i = 0; i < 32; i++)
   55|     32|    gd[i] = i, gf[i] = i;
   56|      1|  foo(1);
   57|     33|  for (i = 0; i < 32; i++)
   58|     32|    if (gd[i] != i * 4 || gf[i] != i)
   59|      0|      abort();
   60|      1|  exit(0);
   61|      1|}


    1|       |/* Integer reductions.  */
    2|       |
    3|       |#define n 1000
    4|       |
    5|      1|int main(void) {
    6|      1|  int v1, v2;
    7|      1|
    8|      1|#pragma acc parallel reduction(+ : v1, v2)
    9|      1|  ;
   10|      1|#pragma acc parallel reduction(+ : v1, v2) copy(v1, v2)
   11|      1|  ;
   12|      1|#pragma acc parallel reduction(+ : v1, v2) pcopy(v1, v2)
   13|      1|  ;
   14|      1|#pragma acc parallel reduction(+ : v1, v2) present(v1, v2)
   15|      1|  ;
   16|      1|#pragma acc parallel reduction(+:v1,v2) copyin(v1,v2) /* { dg-warning "incompatible data clause with reduction" } */
   17|      1|  ;
   18|      1|#pragma acc parallel reduction(+:v1,v2) pcopyin(v1,v2) /* { dg-warning "incompatible data clause with reduction" } */
   19|      1|  ;
   20|      1|#pragma acc parallel reduction(+:v1,v2) copyout(v1,v2) /* { dg-warning "incompatible data clause with reduction" } */
   21|      1|  ;
   22|      1|#pragma acc parallel reduction(+:v1,v2) pcopyout(v1,v2) /* { dg-warning "incompatible data clause with reduction" } */
   23|      1|  ;
   24|      1|#pragma acc parallel reduction(+:v1,v2) create(v1,v2) /* { dg-warning "incompatible data clause with reduction" } */
   25|      1|  ;
   26|      1|#pragma acc parallel reduction(+:v1,v2) pcreate(v1,v2) /* { dg-warning "incompatible data clause with reduction" } */
   27|      1|  ;
   28|      1|
   29|      1|  return 0;
   30|      1|}


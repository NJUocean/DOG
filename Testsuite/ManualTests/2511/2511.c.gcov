        -:    0:Source:2511.c
        -:    0:Graph:2511.gcno
        -:    0:Data:2511.gcda
        -:    0:Runs:1
        -:    1:/* { dg-do run } */
        -:    2:/* { dg-require-effective-target arm_neon_hw } */
        -:    3:/* { dg-options "-O -ftree-vectorize" } */
        -:    4:/* { dg-add-options arm_neon } */
        -:    5:
        -:    6:void fill(short *buf) __attribute__((noinline));
        1:    7:void fill(short *buf) {
        -:    8:  int i;
        -:    9:
       89:   10:  for (i = 0; i < 11 * 8; i++)
       88:   11:    buf[i] = i;
        1:   12:}
        -:   13:
        -:   14:void test(unsigned char *dst) __attribute__((noinline));
        1:   15:void test(unsigned char *dst) {
        -:   16:  short tmp[11 * 8], *tptr;
        -:   17:  int i;
        -:   18:
        1:   19:  fill(tmp);
        -:   20:
        1:   21:  tptr = tmp;
        9:   22:  for (i = 0; i < 8; i++) {
        8:   23:    dst[0] = (-tptr[0] + 9 * tptr[0 + 1] + 9 * tptr[0 + 2] - tptr[0 + 3]) >> 7;
        8:   24:    dst[1] = (-tptr[1] + 9 * tptr[1 + 1] + 9 * tptr[1 + 2] - tptr[1 + 3]) >> 7;
        8:   25:    dst[2] = (-tptr[2] + 9 * tptr[2 + 1] + 9 * tptr[2 + 2] - tptr[2 + 3]) >> 7;
        8:   26:    dst[3] = (-tptr[3] + 9 * tptr[3 + 1] + 9 * tptr[3 + 2] - tptr[3 + 3]) >> 7;
        8:   27:    dst[4] = (-tptr[4] + 9 * tptr[4 + 1] + 9 * tptr[4 + 2] - tptr[4 + 3]) >> 7;
        8:   28:    dst[5] = (-tptr[5] + 9 * tptr[5 + 1] + 9 * tptr[5 + 2] - tptr[5 + 3]) >> 7;
        8:   29:    dst[6] = (-tptr[6] + 9 * tptr[6 + 1] + 9 * tptr[6 + 2] - tptr[6 + 3]) >> 7;
        8:   30:    dst[7] = (-tptr[7] + 9 * tptr[7 + 1] + 9 * tptr[7 + 2] - tptr[7 + 3]) >> 7;
        -:   31:
        8:   32:    dst += 8;
        8:   33:    tptr += 11;
        -:   34:  }
        1:   35:}
        -:   36:
        1:   37:int main(void) {
        -:   38:  char buf[8 * 8];
        -:   39:
        1:   40:  test(buf);
        -:   41:
        1:   42:  return 0;
        -:   43:}

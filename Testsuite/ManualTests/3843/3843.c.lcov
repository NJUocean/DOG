    1|       |#ifdef __INT16_TYPE__
    2|       |typedef __INT16_TYPE__ int16_t;
    3|       |#else
    4|       |typedef short int16_t;
    5|       |#endif
    6|       |
    7|       |#ifdef __UINT32_TYPE__
    8|       |typedef __UINT32_TYPE__ uint32_t;
    9|       |#else
   10|       |typedef unsigned uint32_t;
   11|       |#endif
   12|       |
   13|       |#define __fake_const_swab32(x)                                                 \
   14|      1|  ((uint32_t)((((uint32_t)(x) & (uint32_t)0x000000ffUL) << 24) |               \
   15|      1|              (((uint32_t)(int16_t)(x) & (uint32_t)0x00ffff00UL) << 8) |       \
   16|      1|              (((uint32_t)(x) & (uint32_t)0x00ff0000UL) >> 8) |                \
   17|      1|              (((uint32_t)(x) & (uint32_t)0xff000000UL) >> 24)))
   18|       |
   19|       |/* Previous version of bswap optimization failed to consider sign extension
   20|       |   and as a result would replace an expression *not* doing a bswap by a
   21|       |   bswap.  */
   22|       |
   23|      1|__attribute__((noinline, noclone)) uint32_t fake_bswap32(uint32_t in) {
   24|      1|  return __fake_const_swab32(in);
   25|      1|}
   26|       |
   27|      1|int main(void) {
   28|      1|  if (sizeof(uint32_t) * __CHAR_BIT__ != 32)
   29|      0|    return 0;
   30|      1|  if (sizeof(int16_t) * __CHAR_BIT__ != 16)
   31|      0|    return 0;
   32|      1|  if (fake_bswap32(0x81828384) != 0xff838281)
   33|      0|    __builtin_abort();
   34|      1|  return 0;
   35|      1|}


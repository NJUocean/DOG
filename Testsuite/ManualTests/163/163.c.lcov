    1|       |/* { dg-do compile } */
    2|       |/* { dg-options "-O2 -ftree-parallelize-loops=4 -fdump-tree-parloops2-details
    3|       | * -fdump-tree-optimized" } */
    4|       |
    5|       |void abort(void);
    6|       |
    7|       |int x[500][500];
    8|       |int y[500];
    9|       |int g_sum = 0;
   10|       |
   11|   250k|__attribute__((noinline)) void init(int i, int j) { x[i][j] = 1; }
   12|       |
   13|      1|__attribute__((noinline)) void parloop(int N) {
   14|      1|  int i, j;
   15|      1|  int sum;
   16|      1|
   17|      1|  /* Outer loop reduction, outerloop is parallelized.  */
   18|      1|  sum = 0;
   19|    501|  for (i = 0; i < N; i++) {
   20|   250k|    for (j = 0; j < N; j++)
   21|   250k|      y[i] += x[i][j];
   22|    500|    sum += y[i];
   23|    500|  }
   24|      1|  g_sum = sum;
   25|      1|}
   26|       |
   27|      1|int main(void) {
   28|      1|  int i, j;
   29|    501|  for (i = 0; i < 500; i++)
   30|   250k|    for (j = 0; j < 500; j++)
   31|   250k|      init(i, j);
   32|      1|
   33|      1|  parloop(500);
   34|      1|
   35|      1|  return 0;
   36|      1|}
   37|       |
   38|       |/* Check that outer loop is parallelized.  */
   39|       |/* { dg-final { scan-tree-dump-times "parallelizing outer loop" 1 "parloops2" {
   40|       | * xfail *-*-* } } } */
   41|       |/* { dg-final { scan-tree-dump-times "parallelizing inner loop" 0 "parloops2" }
   42|       | * } */
   43|       |/* { dg-final { scan-tree-dump-times "loopfn" 4 "optimized" { xfail *-*-* } } }
   44|       | */


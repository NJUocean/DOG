    1|       |/* { dg-do run } */
    2|       |/* { dg-options "-O3 -fwrapv" } */
    3|       |/* Make sure vectorized absolute difference behaves same as scalar version.  */
    4|       |
    5|     51|#define N 16
    6|       |signed char a[] = {-100, -100, -100, -100, -100, -100, -100, -100,
    7|       |                   -100, -100, -100, -100, -100, -100, -100, -100};
    8|       |signed char b[] = {100, 100, 100, 100, 100, 100, 100, 100,
    9|       |                   100, 100, 100, 100, 100, 100, 100, 100};
   10|       |
   11|       |signed char out[N];
   12|       |
   13|      1|__attribute__((noinline, noipa)) void foo(void) {
   14|     17|  for (int i = 0; i < N; i++) {
   15|     16|    signed char diff = b[i] - a[i];
   16|     16|    out[i] = diff > 0 ? diff : -diff;
   17|     16|  }
   18|      1|}
   19|       |
   20|       |signed char out2[N];
   21|       |
   22|      1|__attribute__((noinline, noipa)) void foo_scalar(void) {
   23|     17|  for (int i = 0; i < N; i++) {
   24|     16|    asm volatile("");
   25|     16|    signed char diff = b[i] - a[i];
   26|     16|    out2[i] = diff > 0 ? diff : -diff;
   27|     16|  }
   28|      1|}
   29|       |
   30|      1|int main(void) {
   31|      1|  foo();
   32|      1|  foo_scalar();
   33|     17|  for (int i = 0; i < N; i++)
   34|     16|    if (out[i] != out2[i])
   35|      0|      __builtin_abort();
   36|      1|
   37|      1|  return 0;
   38|      1|}

